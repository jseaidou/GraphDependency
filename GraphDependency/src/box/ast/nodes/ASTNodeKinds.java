package box.ast.nodes;

/**
 * Represents the kinds of AST nodes
 * @author jseaidoun
 *
 */
public enum ASTNodeKinds {
     ARRAY_ACCESS ,
     ARRAY_CREATION ,
     ARRAY_ELEMENT ,
     ASSIGNMENT ,
     AST_ERROR ,
     BACK_TICK_EXPRESSION ,
     BLOCK ,
     BREAK_STATEMENT ,
     CAST_EXPRESSION ,
     CATCH_CLAUSE ,
     STATIC_CONSTANT_ACCESS ,
     CLASS_CONSTANT_DECLARATION ,
     CLASS_DECLARATION ,
     CLASS_INSTANCE_CREATION ,
     CLASS_NAME ,
     CLONE_EXPRESSION ,
     COMMENT ,
     CONDITIONAL_EXPRESSION ,
     CONTINUE_STATEMENT ,
     DECLARE_STATEMENT ,
     DO_STATEMENT ,
     ECHO_STATEMENT ,
     EMPTY_STATEMENT ,
     EXPRESSION_STATEMENT ,
     FIELD_ACCESS ,
     FIELD_DECLARATION ,
     FOR_EACH_STATEMENT ,
     FORMAL_PARAMETER ,
     FOR_STATEMENT ,
     FUNCTION_DECLARATION ,
     FUNCTION_INVOCATION ,
     FUNCTION_NAME ,
     GLOBAL_STATEMENT ,
     IDENTIFIER ,
     IF_STATEMENT ,
     IGNORE_ERROR ,
     INCLUDE ,
     INFIX_EXPRESSION ,
     IN_LINE_HTML ,
     INSTANCE_OF_EXPRESSION ,
     INTERFACE_DECLARATION ,
     LIST_VARIABLE ,
     METHOD_DECLARATION ,
     METHOD_INVOCATION ,
     POSTFIX_EXPRESSION ,
     PREFIX_EXPRESSION ,
     PROGRAM ,
     QUOTE ,
     REFERENCE ,
     REFLECTION_VARIABLE ,
     RETURN_STATEMENT ,
     SCALAR ,
     STATIC_FIELD_ACCESS ,
     STATIC_METHOD_INVOCATION ,
     STATIC_STATEMENT ,
     SWITCH_CASE ,
     SWITCH_STATEMENT ,
     THROW_STATEMENT ,
     TRY_STATEMENT ,
     UNARY_OPERATION ,
     VARIABLE ,
     WHILE_STATEMENT ,
     PARENTHESIS_EXPRESSION ,
     FORMAL_PARAMETER_BYREF ,
     REFLECTION_CALL_EXPRESSION ,
     REFLECTION_ARRAY_ACCESS ,
     REFLECTION_STATIC_METHOD_INVOCATION ,
     PHP_DOC_BLOCK ,
     PHP_DOC_TAG ,
     NAMESPACE_DECLARATION ,
     USE_STATEMENT ,
     GOTO_LABEL ,
     GOTO_STATEMENT ,
     LAMBDA_FUNCTION,
     TRAIT_DECLARATION;
}
