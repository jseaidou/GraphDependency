//### This file created by BYACC 1.8(/Java extension  1.15)
//### Java capabilities added 7 Jan 97, Bob Jamison
//### Updated : 27 Nov 97  -- Bob Jamison, Joe Nieten
//###           01 Jan 98  -- Bob Jamison -- fixed generic semantic constructor
//###           01 Jun 99  -- Bob Jamison -- added Runnable support
//###           06 Aug 00  -- Bob Jamison -- made state variables class-global
//###           03 Jan 01  -- Bob Jamison -- improved flags, tracing
//###           16 May 01  -- Bob Jamison -- added custom stack sizing
//###           04 Mar 02  -- Yuval Oren  -- improved java performance, added options
//###           14 Mar 02  -- Tomas Hurka -- -d support, static initializer workaround
//### Please send bug reports to tom@hukatronic.cz
//### static char yysccsid[] = "@(#)yaccpar	1.8 (Berkeley) 01/20/90";



package box.parser.php;







public class PHPParser
             extends AParser
{

boolean yydebug;        //do I want debug output?
int yynerrs;            //number of errors so far
int yyerrflag;          //was there an error?
int yychar;             //the current working character

//########## MESSAGES ##########
//###############################################################
// method: debug
//###############################################################
void debug(String msg)
{
  if (yydebug)
    System.out.println(msg);
}

//########## STATE STACK ##########
final static int YYSTACKSIZE = 500;  //maximum stack size
int statestk[] = new int[YYSTACKSIZE]; //state stack
int stateptr;
int stateptrmax;                     //highest index of stackptr
int statemax;                        //state when highest index reached
//###############################################################
// methods: state stack push,pop,drop,peek
//###############################################################
final void state_push(int state)
{
  try {
		stateptr++;
		statestk[stateptr]=state;
	 }
	 catch (ArrayIndexOutOfBoundsException e) {
     int oldsize = statestk.length;
     int newsize = oldsize * 2;
     int[] newstack = new int[newsize];
     System.arraycopy(statestk,0,newstack,0,oldsize);
     statestk = newstack;
     statestk[stateptr]=state;
  }
}
final int state_pop()
{
  return statestk[stateptr--];
}
final void state_drop(int cnt)
{
  stateptr -= cnt; 
}
final int state_peek(int relative)
{
  return statestk[stateptr-relative];
}
//###############################################################
// method: init_stacks : allocate and prepare stacks
//###############################################################
final boolean init_stacks()
{
  stateptr = -1;
  val_init();
  return true;
}
//###############################################################
// method: dump_stacks : show n levels of the stacks
//###############################################################
void dump_stacks(int count)
{
int i;
  System.out.println("=index==state====value=     s:"+stateptr+"  v:"+valptr);
  for (i=0;i<count;i++)
    System.out.println(" "+i+"    "+statestk[i]+"      "+valstk[i]);
  System.out.println("======================");
}


//########## SEMANTIC VALUES ##########
//public class PHPParserVal is defined in PHPParserVal.java


String   yytext;//user variable to return contextual strings
PHPParserVal yyval; //used to return semantic vals from action routines
PHPParserVal yylval;//the 'lval' (result) I got from yylex()
PHPParserVal valstk[];
int valptr;
//###############################################################
// methods: value stack push,pop,drop,peek.
//###############################################################
void val_init()
{
  valstk=new PHPParserVal[YYSTACKSIZE];
  yyval=new PHPParserVal();
  yylval=new PHPParserVal();
  valptr=-1;
}
void val_push(PHPParserVal val)
{
  if (valptr>=YYSTACKSIZE)
    return;
  valstk[++valptr]=val;
}
PHPParserVal val_pop()
{
  if (valptr<0)
    return new PHPParserVal();
  return valstk[valptr--];
}
void val_drop(int cnt)
{
int ptr;
  ptr=valptr-cnt;
  if (ptr<0)
    return;
  valptr = ptr;
}
PHPParserVal val_peek(int relative)
{
int ptr;
  ptr=valptr-relative;
  if (ptr<0)
    return new PHPParserVal();
  return valstk[ptr];
}
final PHPParserVal dup_yyval(PHPParserVal val)
{
  PHPParserVal dup = new PHPParserVal();
  dup.ival = val.ival;
  dup.dval = val.dval;
  dup.sval = val.sval;
  dup.obj = val.obj;
  return dup;
}
//#### end semantic value section ####
public final static short T_INCLUDE=257;
public final static short T_INCLUDE_ONCE=258;
public final static short T_EVAL=259;
public final static short T_REQUIRE=260;
public final static short T_REQUIRE_ONCE=261;
public final static short T_LOGICAL_OR=262;
public final static short T_LOGICAL_XOR=263;
public final static short T_LOGICAL_AND=264;
public final static short T_PRINT=265;
public final static short T_YIELD=266;
public final static short T_PLUS_EQUAL=267;
public final static short T_MINUS_EQUAL=268;
public final static short T_MUL_EQUAL=269;
public final static short T_DIV_EQUAL=270;
public final static short T_CONCAT_EQUAL=271;
public final static short T_MOD_EQUAL=272;
public final static short T_AND_EQUAL=273;
public final static short T_OR_EQUAL=274;
public final static short T_XOR_EQUAL=275;
public final static short T_SL_EQUAL=276;
public final static short T_SR_EQUAL=277;
public final static short T_POW_EQUAL=278;
public final static short T_BOOLEAN_OR=279;
public final static short T_BOOLEAN_AND=280;
public final static short T_IS_EQUAL=281;
public final static short T_IS_NOT_EQUAL=282;
public final static short T_IS_IDENTICAL=283;
public final static short T_IS_NOT_IDENTICAL=284;
public final static short T_IS_SMALLER_OR_EQUAL=285;
public final static short T_IS_GREATER_OR_EQUAL=286;
public final static short T_SL=287;
public final static short T_SR=288;
public final static short T_INSTANCEOF=289;
public final static short T_INC=290;
public final static short T_DEC=291;
public final static short T_INT_CAST=292;
public final static short T_DOUBLE_CAST=293;
public final static short T_STRING_CAST=294;
public final static short T_ARRAY_CAST=295;
public final static short T_OBJECT_CAST=296;
public final static short T_BOOL_CAST=297;
public final static short T_UNSET_CAST=298;
public final static short T_POW=299;
public final static short T_NEW=300;
public final static short T_CLONE=301;
public final static short T_EXIT=302;
public final static short T_IF=303;
public final static short T_ELSEIF=304;
public final static short T_ELSE=305;
public final static short T_ENDIF=306;
public final static short T_LNUMBER=307;
public final static short T_DNUMBER=308;
public final static short T_STRING=309;
public final static short T_STRING_VARNAME=310;
public final static short T_VARIABLE=311;
public final static short T_NUM_STRING=312;
public final static short T_INLINE_HTML=313;
public final static short T_CHARACTER=314;
public final static short T_BAD_CHARACTER=315;
public final static short T_ENCAPSED_AND_WHITESPACE=316;
public final static short T_CONSTANT_ENCAPSED_STRING=317;
public final static short T_ECHO=318;
public final static short T_DO=319;
public final static short T_WHILE=320;
public final static short T_ENDWHILE=321;
public final static short T_FOR=322;
public final static short T_ENDFOR=323;
public final static short T_FOREACH=324;
public final static short T_ENDFOREACH=325;
public final static short T_DECLARE=326;
public final static short T_ENDDECLARE=327;
public final static short T_AS=328;
public final static short T_SWITCH=329;
public final static short T_ENDSWITCH=330;
public final static short T_CASE=331;
public final static short T_DEFAULT=332;
public final static short T_BREAK=333;
public final static short T_CONTINUE=334;
public final static short T_GOTO=335;
public final static short T_FUNCTION=336;
public final static short T_CONST=337;
public final static short T_RETURN=338;
public final static short T_TRY=339;
public final static short T_CATCH=340;
public final static short T_FINALLY=341;
public final static short T_THROW=342;
public final static short T_USE=343;
public final static short T_INSTEADOF=344;
public final static short T_GLOBAL=345;
public final static short T_STATIC=346;
public final static short T_ABSTRACT=347;
public final static short T_FINAL=348;
public final static short T_PRIVATE=349;
public final static short T_PROTECTED=350;
public final static short T_PUBLIC=351;
public final static short T_VAR=352;
public final static short T_UNSET=353;
public final static short T_ISSET=354;
public final static short T_EMPTY=355;
public final static short T_HALT_COMPILER=356;
public final static short T_CLASS=357;
public final static short T_TRAIT=358;
public final static short T_INTERFACE=359;
public final static short T_EXTENDS=360;
public final static short T_IMPLEMENTS=361;
public final static short T_OBJECT_OPERATOR=362;
public final static short T_DOUBLE_ARROW=363;
public final static short T_LIST=364;
public final static short T_ARRAY=365;
public final static short T_CALLABLE=366;
public final static short T_CLASS_C=367;
public final static short T_TRAIT_C=368;
public final static short T_METHOD_C=369;
public final static short T_FUNC_C=370;
public final static short T_LINE=371;
public final static short T_FILE=372;
public final static short T_COMMENT=373;
public final static short T_DOC_COMMENT=374;
public final static short T_OPEN_TAG=375;
public final static short T_OPEN_TAG_WITH_ECHO=376;
public final static short T_CLOSE_TAG=377;
public final static short T_WHITESPACE=378;
public final static short T_START_HEREDOC=379;
public final static short T_END_HEREDOC=380;
public final static short T_DOLLAR_OPEN_CURLY_BRACES=381;
public final static short T_CURLY_OPEN=382;
public final static short T_PAAMAYIM_NEKUDOTAYIM=383;
public final static short T_NAMESPACE=384;
public final static short T_NS_C=385;
public final static short T_DIR=386;
public final static short T_NS_SEPARATOR=387;
public final static short T_ELLIPSIS=388;
public final static short YYERRCODE=256;
final static short yylhs[] = {                           -1,
    0,    1,    1,    3,    3,    4,    2,    2,    2,    2,
    2,    2,    2,    2,    2,    2,    2,    8,    8,   10,
   10,   10,   10,    9,    9,   11,   13,   13,   14,   14,
   14,   14,    5,    5,    5,    5,    5,    5,    5,    5,
    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,
    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,
   35,   35,   37,   36,   36,   29,   29,   39,   39,   40,
   40,    6,    7,    7,    7,   42,   42,   42,   43,   43,
   46,   46,   44,   44,   47,   47,   22,   22,   31,   31,
   34,   34,   33,   33,   48,   23,   23,   23,   23,   49,
   49,   50,   50,   51,   51,   20,   20,   16,   16,   52,
   18,   18,   53,   17,   17,   19,   19,   30,   30,   30,
   41,   41,   55,   55,   56,   56,   57,   57,   57,   57,
   58,   58,   58,   59,   59,   60,   60,   60,   26,   26,
   61,   61,   61,   27,   27,   62,   62,   45,   45,   63,
   63,   63,   63,   68,   68,   69,   69,   70,   70,   70,
   70,   71,   72,   72,   67,   67,   64,   64,   66,   66,
   74,   74,   73,   73,   73,   73,   73,   73,   65,   65,
   75,   75,   28,   28,   21,   21,   24,   24,   24,   24,
   24,   24,   24,   24,   24,   24,   24,   24,   24,   24,
   24,   24,   24,   24,   24,   24,   24,   24,   24,   24,
   24,   24,   24,   24,   24,   24,   24,   24,   24,   24,
   24,   24,   24,   24,   24,   24,   24,   24,   24,   24,
   24,   24,   24,   24,   24,   24,   24,   24,   24,   24,
   24,   24,   24,   24,   24,   24,   24,   24,   24,   24,
   24,   24,   24,   24,   24,   24,   24,   24,   24,   24,
   24,   24,   24,   24,   24,   24,   24,   15,   15,   25,
   25,   80,   80,   81,   81,   81,   76,   83,   83,   87,
   87,   88,   89,   89,   89,   89,   89,   89,   93,   93,
   38,   38,   38,   77,   77,   94,   94,   90,   90,   95,
   95,   95,   95,   95,   78,   78,   78,   82,   82,   82,
   86,   86,  100,  100,  100,  100,  100,  100,  100,  100,
  100,  100,  100,  100,  100,  100,   12,   12,   12,   12,
   12,  103,  103,  103,  103,  103,  103,  103,  103,  103,
  103,  103,  103,  103,  103,  103,  103,  103,  103,  103,
  103,  103,  103,  103,  103,  103,  103,  103,  103,  103,
  103,  103,  103,  103,   79,   79,   79,   79,  101,  101,
  102,  102,  105,  105,  104,  104,  106,  106,   32,   32,
   32,   32,  108,  108,  107,  107,  107,  107,  107,  109,
  109,   92,   92,   96,   96,   91,   91,  110,  110,  110,
  110,   97,   97,   97,   97,   85,   85,   98,   98,   98,
   54,  111,  111,  112,  112,  112,   84,   84,  113,  113,
  114,  114,  114,  114,   99,   99,   99,   99,  115,  115,
  115,  115,  115,  115,  115,  116,  116,  116,
};
final static short yylen[] = {                            2,
    1,    2,    0,    1,    3,    1,    1,    1,    1,    1,
    3,    5,    4,    3,    4,    4,    3,    3,    1,    1,
    3,    2,    4,    3,    1,    3,    2,    0,    1,    1,
    1,    1,    3,    5,    8,    3,    5,    9,    3,    2,
    3,    2,    3,    2,    3,    2,    3,    3,    3,    1,
    2,    5,    7,    9,    5,    1,    6,    3,    3,    2,
    0,    2,    8,    0,    4,    1,    3,    0,    1,    0,
    1,    9,    7,    6,    5,    1,    2,    2,    0,    2,
    0,    2,    0,    2,    1,    3,    1,    4,    1,    4,
    1,    4,    1,    3,    3,    3,    4,    4,    5,    0,
    2,    4,    3,    1,    1,    1,    4,    0,    2,    3,
    0,    2,    4,    0,    2,    0,    3,    1,    2,    1,
    1,    0,    1,    3,    4,    6,    0,    1,    1,    1,
    2,    3,    3,    1,    3,    1,    2,    2,    3,    1,
    1,    2,    4,    3,    1,    1,    3,    2,    0,    3,
    3,    8,    3,    1,    3,    0,    2,    4,    5,    4,
    4,    3,    1,    1,    1,    3,    1,    1,    0,    1,
    1,    2,    1,    1,    1,    1,    1,    1,    1,    3,
    1,    3,    3,    1,    0,    1,    1,    3,    3,    4,
    4,    1,    2,    3,    3,    3,    3,    3,    3,    3,
    3,    3,    3,    3,    3,    2,    2,    2,    2,    3,
    3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
    3,    3,    3,    3,    3,    3,    2,    2,    2,    2,
    3,    3,    3,    3,    3,    3,    3,    3,    3,    1,
    3,    5,    4,    4,    4,    2,    2,    2,    2,    2,
    2,    2,    2,    2,    2,    2,    2,    2,    2,    1,
    1,    1,    3,    2,    1,    9,   10,    3,    3,    2,
    4,    4,    3,    4,    4,    4,    3,    0,    4,    1,
    3,    2,    2,    4,    6,    2,    2,    4,    1,    1,
    1,    2,    3,    1,    1,    1,    1,    1,    1,    0,
    3,    3,    4,    4,    0,    2,    1,    0,    1,    1,
    0,    1,    1,    1,    1,    1,    1,    1,    1,    1,
    1,    1,    1,    3,    2,    1,    1,    3,    4,    3,
    1,    3,    3,    3,    3,    3,    3,    3,    3,    3,
    3,    3,    3,    3,    3,    3,    3,    3,    2,    2,
    2,    2,    3,    3,    3,    3,    3,    3,    3,    3,
    5,    4,    4,    3,    1,    3,    3,    3,    1,    1,
    0,    2,    0,    1,    3,    1,    3,    1,    1,    1,
    1,    1,    6,    4,    3,    4,    2,    4,    4,    1,
    3,    1,    2,    1,    1,    4,    1,    3,    6,    4,
    4,    4,    4,    1,    4,    0,    1,    1,    3,    1,
    4,    3,    1,    1,    1,    0,    0,    2,    3,    1,
    3,    1,    4,    2,    2,    2,    1,    2,    1,    4,
    3,    3,    3,    6,    3,    1,    1,    1,
};
final static short yydefred[] = {                         3,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  313,  314,
    0,  404,   50,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,   10,   76,    0,
    0,    0,    0,  319,  320,  321,  322,  316,  317,    0,
    0,  323,  318,    0,   56,   28,    0,    0,    0,    0,
    2,    0,    7,    8,    9,  240,    0,    0,    0,    0,
    0,    0,  192,  260,    0,    0,    0,    0,    0,    0,
  298,  380,    0,  365,    0,    0,    0,    0,  265,    4,
    0,    0,    0,    0,    0,    0,  248,    0,    0,    0,
    0,    0,    0,    0,    0,  289,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  420,  290,    0,    0,  395,  394,    0,
  295,    0,    0,  193,    0,  307,  258,    0,   60,    0,
    0,    0,    0,    0,    0,    0,    0,    0,   40,    0,
   42,    0,    0,   69,    0,    0,    0,   25,   44,    0,
   28,    0,    0,    0,    0,    0,    0,    0,   19,  141,
    0,    0,  140,    0,    0,    0,  145,   77,   78,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  325,    0,
    0,    0,  427,    0,    3,    0,    0,    0,    0,    0,
    0,    0,  393,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,   51,   46,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  206,  208,    0,  283,    0,    0,    0,    0,
    0,    0,  286,  287,    0,    0,    0,    0,  387,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  273,
    0,  418,  312,  277,    0,    0,    0,    0,    0,  306,
   28,  108,    0,    0,    0,   49,    0,   28,  106,   36,
    0,    0,    0,    0,    0,   93,    0,    0,   39,   41,
   43,   59,    0,    0,    0,    0,   17,   45,    0,   58,
    0,    0,    0,    0,    0,   14,    0,    0,    0,   47,
    0,    0,    0,   48,    0,    0,    0,    0,  149,    0,
    0,    0,  415,    0,  413,    0,    0,    0,  324,  428,
    0,    0,    0,  426,  368,  425,    0,    0,   11,    3,
   32,   33,   29,   30,   31,   27,  268,  269,    0,    0,
  263,  367,    5,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  239,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  131,    0,    0,
    0,  134,    0,    0,    0,    0,    0,    0,    0,  398,
  370,    0,    0,  366,    0,    0,    0,    0,    0,  408,
    0,  410,    0,    0,    0,    0,    0,    0,    0,    0,
  419,    0,  302,    0,  301,    0,    0,  275,    0,    0,
    0,    0,    0,    0,    0,    0,  100,    0,  100,    0,
    0,  129,  130,  128,    0,    0,  123,    0,    0,    0,
    0,    0,    0,  315,    0,    0,    0,    0,    0,    0,
  327,  331,   24,   61,   15,   16,    0,   21,   18,    0,
  139,    0,    0,  144,    0,    0,  244,  245,    0,   85,
    0,  149,    0,  411,  272,  436,  438,  437,    0,  431,
    0,  433,  432,  435,   13,    0,    0,  405,    0,    0,
    0,  191,    0,    0,  133,    0,  132,   80,    0,    0,
  274,  276,  288,  284,    0,    0,    0,    0,  402,  403,
  388,  389,  384,    0,  386,  400,  401,    0,  303,  304,
    0,    0,    0,   34,  109,   37,    0,    0,    0,    0,
    0,  120,    0,   94,   28,   91,   55,    0,    0,    0,
    0,  101,    0,   96,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  376,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,   23,  143,
    0,    0,   52,    0,    0,  176,  177,  178,  175,  174,
  173,  168,   75,  148,    0,    0,  171,    0,    0,    0,
  412,  430,    0,   12,    0,    0,  135,    0,  149,    0,
    0,  409,    0,    0,    0,  112,    0,  115,  107,    0,
    0,    0,    0,    0,    0,   98,    0,  104,  105,   28,
   97,    0,    0,    0,  124,   71,    0,    0,  330,    0,
  372,    0,  364,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  369,  328,    0,    0,   57,   62,    0,    0,    0,
    0,    0,  179,    0,  172,   86,   74,    0,  383,    0,
  285,  399,    0,   28,    0,  110,    0,   28,   89,   53,
    0,    0,    0,   99,   28,    0,   28,    0,   28,    0,
    0,  375,  329,    0,    0,  363,    0,   28,    0,  151,
  154,  156,  153,    0,    0,  150,    0,  434,   73,   28,
    0,   35,    0,    0,    0,   92,    0,    0,    0,    0,
  280,    0,    0,    0,    0,    0,   28,    0,    0,  180,
    0,    0,   28,   87,   38,    0,   54,   72,  282,    0,
  279,  266,    0,    0,   65,    0,    0,  155,    0,  157,
    0,    0,    0,    0,   90,  281,    0,  267,    0,    0,
    0,    0,    0,   28,  162,    0,    0,    0,    0,   88,
    0,  158,  161,    0,  160,  165,   28,  152,   63,  159,
    0,  166,
};
final static short yydgoto[] = {                          1,
    2,   81,   82,  187,  383,  384,  385,  188,  177,  189,
  178,  613,  218,  386,   86,  477,  584,  581,  685,  320,
  321,  825,  329,   87,   88,  192,  196,  322,  355,  590,
  770,   89,  325,  597,  648,  746,  747,   90,  809,  707,
  495,   91,  444,  560,  529,  361,  531,  326,  488,  602,
  700,  585,  686,   92,  496,  497,  498,  276,  441,  442,
  193,  197,  664,  665,  752,  666,  868,  793,  818,  840,
  841,  842,  667,  668,  753,   93,  146,  157,   94,   95,
   96,  226,  704,  142,  314,  304,  810,  811,   97,   98,
   99,  100,  101,  151,  152,  102,  103,  463,  212,  104,
  454,  614,  512,  615,  302,  616,  105,  106,  107,  108,
  364,  365,  143,  144,  213,  539,
};
final static short yysindex[] = {                         0,
    0, 2637, 8633, 8633,   36, 8633, 8633, 8633, 8633, 8633,
 8633, 8633, 8633,   20,   20, 8633, 8633, 8633, 8633, 8633,
 8633, 8633, 8633, 7269,   33, 8633,  125,   36,    0,    0,
   69,    0,    0,    7, 8633, 6914,   36,  138,  189,  219,
   36, 7385, 7539,  -92,  212,  -28, 7655,  153, 8633, -154,
   23, -163,  -18,   45,  311,  319,  358,    0,    0,  107,
  121,  394,  406,    0,    0,    0,    0,    0,    0,  220,
  -90,    0,    0,  172,    0,    0, 8780,   13,  145,  521,
    0,   67,    0,    0,    0,    0,14735,  431, 1704,  463,
  224,  467,    0,    0,  451,  474,  481,  166,  463,  463,
    0,    0,  -46,    0,  109,  499,  242,  118,    0,    0,
  212,  299,  255,15937,15937, 8780,    0,15937,15937,16402,
13689,  345,  345,  129,  345,    0,  349,    0,  463,  273,
    0,  345,  345,  345,  345,  345,  345,  345,  345,   20,
13919,  589,  634,    0,    0,  463,  307,    0,    0,    0,
    0,  -36,  326,    0, 7940,    0,    0, 5934,    0, 8633,
15937,  305,  448, 6050, 8633, 8633,  461,  102,    0,14806,
    0,14849,  732,    0,  -26,  736,  355,    0,    0,14878,
    0,14916, -180, -180,  172,   67,  489,  362,    0,    0,
  -24,  455,    0,  770,  212,  523,    0,    0,    0,   20,
   20, 8633,  710,  493,  -16, 7269,  -70,  142,    0, 8056,
   20,  258,    0,  172,    0,   16,   67, 2753,14990,  818,
  820, 8633,    0,  -46, -187,  778,  560, -187,   12,  570,
 8633, 8633, 8633, 8210, 8633, 8633, 8633, 8633, 8633, 8633,
 8633, 8633, 8633, 8633, 8633, 8633, 8633, 8633, 8633, 8633,
 8633, 8633, 8633, 8633, 8633,   33, 8633,    0,    0, 8348,
 8633, 8633, 8633, 8633, 8633, 8633, 8633, 8633, 8633, 8633,
 8633, 8633,    0,    0, 1896,    0,  526, 8633, 8633, 8633,
 8633,  195,    0,    0, 8633, 8633, 8633, 8633,    0, 8633,
   -2, 8633, 8633,  841, 8633,  854,  209,    0, 8495,    0,
 7269,    0,    0,    0,   27, 8633,   -2, 8633,   -2,    0,
    0,    0,15937,  803, 8633,    0,   36,    0,    0,    0,
  846,  874,14594,  876,  654,    0,  884,  891,    0,    0,
    0,    0,  912,  114,  739,  -28,    0,    0, 3108,    0,
  599,  609,  625,  655, -180,    0, 8633,    0,   23,    0,
  739,  950,  681,    0,  658,    0,  718,15061,    0, -243,
  870,    0,    0,  720,    0,  966,  226,  699,    0,    0,
  124,15171,  885,    0,    0,    0,   67, 2166,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  920,15204,
    0,    0,    0,16144,16250,16402, 8633,15245,14234,16576,
 8165, 1120, 6592,  624,  624,  624,  624, 1211, 1211, 1211,
 1211,  845,  845,  211,  211,  211,  129,  129,  129,    0,
  345,    8,16402,16402,16402,16402,16402,16402,16402,16402,
16402,16402,16402,16402,16402,   20, 8633,    0,15937,  977,
  752,    0, -243,  662,16402,  932,  935,  941,  463,    0,
    0, 8633,   22,    0,  943,15273,  944,15316,  945,    0,
 8633,    0,  463,  946,15349,15937,  920,  463,   20,15937,
    0,  948,    0,15528,    0, 5579,  190,    0,15937,  985,
 3224, 8633,  -11,  739,  461, 6366,    0,  585,    0,  -52,
  114,    0,    0,    0, 1004, 1006,    0,  212,  739,  739,
  739,  739,  739,    0, 1011, -212,  739,16079,    0,  669,
    0,    0,    0,    0,    0,    0,  744,    0,    0,15604,
    0,16079,  114,    0,   20,  995,    0,    0,  611,    0,
 1013,    0,  -16,    0,    0,    0,    0,    0,  962,    0,
 8633,    0,    0,    0,    0, 2282, 8633,    0,16505, 8633,
    0,    0,    0,15937,    0, 2012,    0,    0, -243,  936,
    0,    0,    0,    0,15632, 8633,  937,  -46,    0,    0,
    0,    0,    0,15670,    0,    0,    0,    0,    0,    0,
  203,   36, 6914,    0,    0,    0,  999, 1002,   20, 1022,
  701,    0,16079,    0,    0,    0,    0,  590, 1007, 8633,
  458,    0,  -41,    0, 1029,  728,  114,  684,  -39,  -39,
  -39,  -39,13948,  980, 1030,    0,  739,  695,15708,  739,
  739,  739,   80,  739,  739,  739,  739,  739,  739,  739,
  739,  739,  739,  739,  739,  739,  739,  739,  739,  739,
  739,  739,  739,  739,  739,  739,   87,  214,    0,    0,
 1042,    0,    0,  -28, -243,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  775,  751,    0,  578, -243,  918,
    0,    0,15741,    0,  998,16505,    0, 1013,    0,  463,
15783,    0,   36, 1034,  789,    0, 6914,    0,    0, 8633,
    0, 6482,  -11, 3579, 1037,    0,14702,    0,    0,    0,
    0,  979, 1063,  989,    0,    0,  802,  739,    0,  739,
    0, 1074,    0,16207,16375,16465,  739,15811,11647,16671,
 9829, 6159, 8988, 6860, 6860, 6860, 6860, 1488, 1488, 1488,
 1488, 1161, 1161,  143,  143,  143,  -39,  -39,  -39,  -39,
16041,    0,    0, 1076,  996,    0,    0,  728,  616,   93,
 1059,  618,    0,  212,    0,    0,    0,  997,    0, 1301,
    0,    0, 1071,    0, 1062,    0, 1097,    0,    0,    0,
 1098,    0, 1081,    0,    0, 5579,    0,  212,    0, 1080,
16079,    0,    0,16526,  739,    0, -243,    0, 1020,    0,
    0,    0,    0,  739,  775,    0,  838,    0,    0,    0,
 5579,    0, 6798, 3695, 6482,    0, 5579, 4050,  837,  784,
    0, 4166,  739,16526,  840, 4521,    0,   76,16079,    0,
 1115, 5579,    0,    0,    0, 1100,    0,    0,    0,  212,
    0,    0,16079, 1119,    0, 4637,    0,    0,  773,    0,
  825,  836,  114, 4992,    0,    0, 1047,    0,  863, -243,
  439, 1132, 1116,    0,    0,  628, 1117,  -27,   52,    0,
 5108,    0,    0, 1122,    0,    0,    0,    0,    0,    0,
 5463,    0,
};
final static short yyrindex[] = {                         0,
    0, 1174,    0,    0,    0,    0,    0,    0,15995,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0, 1085,10907,    0,11789,    0,    0,    0,
 1090,    0,    0,11879,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,   82,    0,    0,    0,    0,    0,
    0,  796,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0, 1087,    0,
    0, 9062,    0,    0,    0,    0,    0,    0,11074, 9598,
    0,    0,    0,    0,11917,11971,10259,    0,10388,10518,
    0,    0, 9338,    0,10647,10777,    0, 9869,    0,    0,
 1145,  796,    0,   73,   99,    0,    0,  177, 1021,  169,
  205,12270,12324,13087,12362,    0,    0,11166,  804,    0,
11220,12452,12537,12626,12664,12749,12808,12921,12958,    0,
  170,    0,   77,    0,    0,12060,    0,    0,    0, 9464,
    0,11345,11480,    0,    0,    0,    0,    0,    0, 1095,
  519,    0,    0,    0, 1131,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,   30,  630,    0,    0,    0,
    0,    0,    0,  632, 1145,    0,    0,    0,    0,    0,
    0,    0,    0, 1068,  794, 1151,   58,    0,    0,    0,
    0,    0,    0,    0,    0,    0, 9131,    0,    0,    0,
16117,    0,    0,10000, 1101,    0, 1103,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,11036,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  -87,    0, 1095, 1095,
 1095,    0,    0,    0, 1095,    0, 1095,    0,    0, 1095,
    0, 1095,    0,    0,    0,    0,    0,   41,    0,    0,
  110,    0,    0,    0,    0, 1095,    0,    0,    0,    0,
    0,    0, 1107,    0,    0,    0,    0,    0,    0,    0,
    0,  225,    0,    0,    0,    0,  600,  152,    0,    0,
    0,    0,    0,  -10,    0,    0,    0,    0,    0,    0,
    0,    0,  719,    0,    0,    0,    0,   47,    0,    0,
    0,    0,    0,    0,    0,   -1,    0,    0,    0,    0,
    0,   75,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  831,    0,    0,    0, 9189,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,11518,    0,
    0,    0,    0,   37,  512,  826,    0,    0, 6705, 2108,
 6273,12022,  814, 1233, 1292, 1973, 7346, 1965, 7338, 8009,
 8336, 8933,14413,14021,14127,14199,13213,13271,13339,    0,
13016,    0, 1239, 1302, 1553, 2765, 3236, 3707, 4178, 4649,
 5120, 5591, 6063, 6237, 6669,    0,    0,    0,  801,    0,
    0,    0,    0, 1073, 7229,    0,    0,    0,12181,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0, 9740,    0,    0,  284,  832,    0,    0,  182,
    0,    0,    0,    0,    0,  641, 1541,    0,  535,    0,
    0, 1131,    0,    0,    0,    0,    0,    0,    0,    0,
  -10,    0,    0,    0,    0, 1160,    0, -232,    0,    0,
    0,    0, 1109,    0,    0,    0,    0,  756, 9671,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  761,  -10,    0,    0,    0,    0,    0,  869,    0,
 1086,    0,  794,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0, 1095,    0,   42,    0,
11608,    0,  106,  807,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,10129,    0,    0,
    0,    0,    0,    0,    0,    0,    0,   53,    0,    0,
  904,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  -15,    0,  816,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0, 1088,  -33,  901,13366,13393,
13484,13547,  502,    0,   77,    0, 1172,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0, 1425,    0,    0,
    0,  120,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  -81,    0,  869,
    0,    0,    0,    0,    0,   49,    0, 1094,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0, 1204,
   -6,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  110,
    0,    0,    0,  592,  754,  210,    0,    0,  805, 2505,
 1860,    9, 1244, 7750, 9510,11178,11781, 2071, 7233, 7444,
 8684,14450,14554,14272,14301,14342,13649,13743,13814,13856,
    0,    0,    0,    0,    0,    0,    0, 1088,    0,    0,
  765,    0,    0,  938,    0,    0,    0,    0,    0,  869,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  -15,    0,    0,    0,  227,    0,  939,    0,  839,
  639,    0,    0,  471,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  940,    0,    0,    0,    0,    0,  333,    0,    0,    0,
    0,    0,    0,  503,    0,    0,    0,    0,  782,    0,
    0,  726,    0,    0,    0,    0,    0,    0,    0,  939,
    0,    0,  860,    0,    0,    0, -144,    0,    0,    0,
  921,    0,  -10,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,
};
final static short yygindex[] = {                         0,
 -176,    0,  131,   -9,    5,    2,    4,  660,  597,  914,
  924,  810,   39,    0,   10,    0,    0,    0,    0,    0,
 -425,    0,    0,  734,  425,    0,    0, 1227, 1072,  579,
  473,   56,    0,    0,    0,    0,    0,  -14,  -23,    0,
 -481,    0,    0,    0, -471,    0, -540,  791,  -76,    0,
  566,    0,    0, -197,    0,  672,    0,  -82,    0,  730,
  952,  934,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0, -614,    0,  494,  -47, 1039,    0,    0,    0,
    0,    0,  545, 1093,  367,    0,    0,  475,    0,  -12,
   40,  134,   84,    0,    0,   85,  -69,  290,  855,  598,
  657,  696,    0,    0,  703,  604,    0,    0,    0,    0,
    0,  783,    0, 1018,  594,    0,
};
final static int YYTABLESIZE=16970;
static short yytable[];
static { yytable();}
static void yytable(){
yytable = new short[]{                        129,
  129,  130,  130,   84,  127,   85,   83,  363,  224,  605,
  145,   78,  147,  334,  117,  127,  283,  284,  678,   78,
  367,  175,  289,  127,   78,  118,  589,  127,  127,  221,
  122,  865,  215,   78,  119,   79,  156,  158,  378,   66,
  163,  651,   66,   78,  285,  392,  164,  127,   78,  339,
  168,  646,  339,  755,  306,   78,  588,  567,  191,  127,
  670,  216,  453,  303,  148,  110,  339,  339,   78,  128,
  131,  339,  604,    6,  379,  116,  286,  212,   68,  296,
  212,  424,  243,  701,  424,  243,  308,  294,    6,  242,
  142,  429,  242,  423,  212,  212,  423,  160,  347,  243,
  243,  339,  339,  618,  243,  142,  242,  242,  150,  153,
  866,  242,  501,  246,  750,  414,  246,  373,  414,  507,
  461,   68,  499,  207,  500,  129,  159,  130,  110,  212,
  246,  246,  339,  424,  243,  222,  669,  717,  380,  247,
  113,  242,  247,   74,  566,  423,  137,  194,  275,  137,
  374,  791,    6,  429,  110,   68,  247,  247,  149,  327,
   67,  212,  312,   67,  155,  246,  243,  209,  319,  373,
  503,  352,  195,  242,  867,  343,  129,  165,  130,  644,
  186,  183,  184,  164,  642,  129,  129,  130,  130,  643,
  129,  247,  130,  210,  211,  298,  129,  246,  130,  287,
  838,  186,  374,  546,  217,  502,  185,  760,  292,  264,
  422,  223,  264,  422,  541,  792,  173,  249,  110,  339,
  249,  224,  421,  247,  328,  421,  264,  264,  166,  167,
  453,  288,  185,  646,  249,  249,  858,  224,    4,  224,
  293,  145,    4,  147,  453,  270,  348,  255,  542,  174,
  335,  490,  253,  335,  170,  356,  356,  254,  167,  645,
  362,  264,  422,  270,  767,  186,  373,  335,  335,  249,
  339,  339,  339,   79,  421,  181,  100,  127,  600,  601,
  176,  864,  333,  186,  110,  592,   32,  339,  339,  600,
  601,  368,  110,  264,   32,  148,  214,  110,  212,   32,
  127,  249,  335,  243,  243,  243,  460,   25,   32,  856,
  242,  242,  242,  186,  186,  186,  110,  452,   32,  494,
  509,  126,  207,   32,  271,  307,  480,  374,  110,  126,
   32,  452,   32,  190,  126,  363,  509,  450,  198,  150,
  153,  110,  271,   32,  377,  530,  390,   62,  315,  476,
  200,  103,   62,  126,  127,  390,  481,    6,  201,  113,
  390,  852,   74,  316,  212,  126,  564,  113,  429,  243,
   74,  339,  113,  429,  552,   74,  242,  127,  126,   84,
  575,   85,   83,  568,  837,  564,   29,   30,  110,  149,
   68,  113,  210,  211,   74,  742,  504,  202,  336,  212,
  246,  199,  390,  113,  243,  345,   74,  129,  390,  130,
  598,  242,  603,  337,  390,  203,  113,  256,  510,   74,
  346,  129,  110,  130,  462,  126,  247,  257,  558,  204,
  264,  264,  264,  205,  510,  246,  390,  429,  429,  429,
  462,  645,  462,  451,  505,  206,   64,   65,   66,   67,
   68,   69,  207,  230,  129,  207,  130,  102,  506,  113,
  225,  247,   74,  113,   72,   73,   74,  390,  129,  509,
  130,  335,  335,  335,  608,  186,  494,  551,  492,  493,
  110,  390,  100,  100,  509,  509,  509,  509,  509,  259,
  596,  553,  509,  582,  583,  592,  264,  113,  349,  256,
   74,  220,  275,  449,  249,  450,  683,  684,  494,  257,
  129,  362,  130,  350,  362,  698,  699,  468,  129,  450,
  130,  369,  210,  211,  578,  210,  211,  278,  362,  362,
  207,  264,  277,  362,  536,  208,  537,  538,  591,  249,
  220,  279,  378,  361,  530,  378,  361,   84,  282,   85,
   83,  451,  214,  744,  745,  214,  103,  103,  103,  184,
  361,  361,  184,  362,  280,  361,  353,  510,  207,  214,
  214,  281,  335,  374,  129,  183,  130,  184,  183,  220,
  652,  354,  510,  510,  510,  510,  510,  688,  362,  290,
  510,  687,  494,  183,  378,  361,  473,  761,  475,  209,
  210,  211,  509,  291,  214,  509,  509,  509,  509,  509,
  509,  509,  509,  509,  509,  509,  509,  509,  509,  509,
  509,  509,  509,  509,  509,  509,  509,  509,  509,  509,
  509,  509,  334,  694,  195,  334,  214,  375,  210,  211,
  530,  214,  345,  257,  691,  446,  447,  448,   25,  334,
  334,  455,  345,  457,  756,  297,  459,  515,  464,  336,
  255,  795,  102,  102,  102,  253,  250,  516,  251,  252,
  254,  669,  472,   20,  790,  146,  796,  301,  129,  377,
  130,  300,  377,  244,  334,  246,  862,  309,   20,  305,
  146,  766,  763,  509,  486,  509,  769,  485,  526,  440,
  510,  525,  509,  510,  510,  510,  510,  510,  510,  510,
  510,  510,  510,  510,  510,  510,  510,  510,  510,  510,
  510,  510,  510,  510,  510,  510,  510,  510,  510,  510,
  797,  377,  362,  362,  362,  663,  114,  115,  776,  118,
  119,  120,  121,  122,  123,  124,  125,  857,  772,  132,
  133,  134,  135,  136,  137,  138,  139,  141,  527,  154,
  534,  525,   22,  533,  361,  361,  361,  317,  161,  324,
  509,  501,  815,  214,  214,  170,  172,   22,  507,  509,
  180,  499,  182,  500,  656,  657,  658,  659,  660,  661,
  332,  510,  557,  510,  336,  556,  335,  336,  509,   26,
  510,  370,  801,  839,  147,  376,  804,  824,  181,  769,
  219,  336,  336,  807,   26,  808,  344,  812,  370,  147,
  376,  370,  376,  181,  831,  182,  816,  830,  494,  503,
  351,  207,  359,  362,  416,  530,  228,  416,  822,  214,
  182,  136,  341,  342,  136,  332,  336,  138,  332,  219,
  138,  216,  360,  334,  216,  836,   95,  216,  388,   95,
  389,  844,  332,  332,  502,  361,  213,  332,  510,  213,
  207,  216,  216,  391,  214,  374,  216,  510,  393,  125,
  334,  255,  125,  213,  213,  443,  253,  250,  219,  251,
  252,  254,  861,  313,  467,  478,  510,  332,  161,  323,
  126,  210,  211,  126,  482,  871,  216,  216,  245,  247,
  248,  249,  256,  675,  599,  600,  601,  315,  213,  695,
  600,  601,  257,  656,  657,  658,  659,  660,  661,  100,
  100,  100,  511,  227,  229,  358,  484,  216,  216,  141,
  210,  211,  487,  372,  111,  111,  111,  654,  511,  489,
  213,  491,  517,  655,  334,  390,  656,  657,  658,  659,
  660,  661,  662,  518,  394,  395,  396,  398,  399,  400,
  401,  402,  403,  404,  405,  406,  407,  408,  409,  410,
  411,  412,  413,  414,  415,  416,  417,  418,  419,  523,
  421,  194,  532,  423,  424,  425,  426,  427,  428,  429,
  430,  431,  432,  433,  434,  435,  535,  540,  439,  544,
  547,  445,  313,  313,  313,  336,  336,  555,  313,  456,
  313,  458,  559,  313,  561,  313,  465,  562,  466,  113,
  113,  113,  470,  563,  141,  569,  571,  573,  576,  313,
  579,  474,  757,  586,  606,   29,   30,  110,  479,  607,
  617,  647,  649,  653,  672,  504,  669,  689,  679,  222,
  690,  250,  692,  693,  250,  696,  332,  332,  332,  702,
  703,  706,  709,  710,  369,  216,  216,  216,  250,  250,
  520,  511,  748,  332,  126,  751,  754,  213,  213,  213,
  759,  764,  216,  216,  765,  774,  511,  511,  511,  511,
  511,  777,  778,  505,  511,   64,   65,   66,   67,   68,
   69,  779,  780,  250,  783,  787,  336,  506,  788,  794,
  802,  798,  113,   72,   73,   74,    4,    4,  800,    4,
  549,    4,    4,  256,    4,    4,    4,  803,  805,  806,
  813,  216,  817,  257,  508,  250,  821,  829,    4,    4,
  834,    4,    4,  213,  843,  849,  255,  239,  845,  847,
  522,  253,  250,  851,  251,  252,  254,  332,  850,  854,
  554,  855,  859,    1,  860,  863,  216,  417,  289,  244,
  870,  246,  308,    4,   68,  565,  290,  406,  213,  185,
   81,  417,  390,  391,  574,   83,  309,  644,  310,  407,
  121,  371,  642,  639,  169,  640,  641,  643,   82,  116,
  278,   70,  371,    4,  511,  161,   84,  511,  511,  511,
  511,  511,  511,  511,  511,  511,  511,  511,  511,  511,
  511,  511,  511,  511,  511,  511,  511,  511,  511,  511,
  511,  511,  511,  511,  185,  117,   68,  255,  163,   68,
  749,  646,  253,  250,  654,  251,  252,  254,  519,  513,
  655,  162,  775,  656,  657,  658,  659,  660,  661,  662,
  233,  771,  357,  233,  673,  594,  233,  827,  705,  189,
  313,  338,  189,  676,  338,  677,  524,  338,  820,  439,
  233,  233,  789,  593,  420,  233,  189,  189,  366,  681,
  521,  338,  338,  743,  846,  511,  338,  511,  609,  610,
  611,  612,  712,  782,  511,  671,  619,  711,  471,    0,
    0,    0,    0,    0,    0,  233,  233,    0,    0,  234,
    0,  189,  234,  697,    0,  234,  338,  338,    0,    0,
    0,    0,  194,    0,    0,  194,    0,    0,  250,  234,
  234,    4,    4,    4,  234,    0,  233,  233,    0,  194,
  194,    0,    0,  189,    0,    0,    0,  338,    4,    4,
    4,    4,    4,    4,    4,    4,    4,    4,    4,    0,
    0,    0,  511,  250,  234,  234,    0,    0,    4,    0,
    0,  511,    0,    0,  194,    0,    0,    0,    0,    0,
  240,  241,  242,  243,  245,  247,  248,  249,  256,    0,
  511,    0,    0,    0,    0,  234,  234,    0,  257,    0,
    0,    0,    0,  161,   64,  799,  194,    0,    0,  714,
  715,  716,  718,  719,  720,  721,  722,  723,  724,  725,
  726,  727,  728,  729,  730,  731,  732,  733,  734,  735,
  736,  737,  738,  739,  740,  741,    0,   64,   64,  645,
   64,    0,    0,    0,   64,    0,    0,   64,    0,   64,
    0,    0,    4,    0,    0,    0,    4,    0,    0,    0,
    0,    0,    0,   64,    0,    0,    0,    0,   64,    0,
    0,    0,    0,    0,  233,  233,  233,  248,  249,  256,
  189,  189,  189,    0,    0,  338,  338,  338,    0,  257,
    0,  233,  233,    0,    0,   64,    0,  781,    0,    0,
   64,    0,  338,  338,  644,    0,  784,    0,    0,  642,
  639,    0,  640,  641,  643,    0,    0,    0,    0,    0,
  114,    0,    0,    0,    0,    0,    0,   64,    0,   64,
   64,    0,    0,  234,  234,  234,    0,    0,    0,    0,
  233,    0,    0,  194,  194,  194,  189,    0,    0,    0,
  234,  234,    0,  114,  114,    0,  114,    0,  646,    0,
  114,    0,    0,  114,    0,  114,    0,    0,    0,    0,
    0,    0,    0,  195,  814,  233,  195,    0,    0,  114,
    0,  189,    0,  819,  114,    0,  338,    0,    0,    0,
  195,  195,    0,    0,    0,    0,    0,    0,    0,  234,
    0,    0,  833,    0,    0,    0,    0,    0,    0,  194,
    0,  114,    0,    0,    0,    0,  114,  654,    0,    0,
    0,    0,    0,  655,    0,  195,  656,  657,  658,  659,
  660,  661,  662,    0,  234,    0,    0,    0,    0,    0,
    0,    0,    0,  114,  194,  114,  114,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  195,    0,    0,
    0,   64,   64,   64,   64,   64,    0,    0,    0,   64,
   64,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,   64,   64,   64,   64,   64,   64,
   64,   64,   64,    0,   64,   64,   64,   64,   64,   64,
   64,   64,   64,   64,    0,   64,    0,   64,    0,    0,
    0,   64,   64,   64,   64,   64,   64,   64,   64,   64,
   64,   64,    0,   64,   64,   64,   64,   64,   64,   64,
   64,   64,   64,   64,  260,    0,   64,   64,    0,   64,
   64,   64,   64,    0,  637,  638,    0,   64,   64,   64,
   64,   64,   64,   64,    0,    0,  645,    0,   64,   64,
    0,   64,   64,   64,   64,   64,   64,  114,  114,  114,
  114,  114,    0,   64,    0,  114,  114,    0,   64,   64,
   64,   64,    0,    0,  195,  195,  195,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  114,  114,  114,  114,  114,  114,  114,  114,  114,    0,
  114,  114,  114,  114,    0,    0,  114,  114,  114,  114,
    0,  114,    0,  114,    0,    0,    0,  114,  114,  114,
  114,  114,  114,  114,  114,  114,  114,  114,    0,  114,
  114,  114,  114,  114,  114,  114,  114,  114,  114,  114,
  195,    0,  114,  114,    0,  114,  114,  114,  114,    0,
    0,    0,    0,  114,  114,  114,  114,  114,  114,  114,
  337,    0,    0,  337,  114,  114,    0,  114,  114,  114,
  114,  114,  114,    0,    0,  195,    0,  337,  337,  114,
    0,    0,  337,    0,  114,  114,  114,  114,   12,   80,
    0,   78,    0,  436,    0,   77,  438,    0,   10,    0,
   11,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  337,    0,    0,    0,    0,    0,    0,   23,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  261,  262,  263,  264,  265,  266,  267,  268,  269,  270,
  271,  272,    0,  337,    0,    0,   24,    0,    0,    0,
    0,   79,    0,  273,  274,    0,    0,    0,    0,    0,
    0,    0,  235,    0,    0,  235,    0,    0,  235,    0,
  231,    0,    0,  231,    0,    0,  231,    0,    0,    0,
    0,   13,  235,  235,    0,    0,    0,  235,    0,    0,
  231,  231,    0,    0,    0,  231,    0,    0,    0,    0,
    0,    0,    0,    0,   12,   80,    0,   78,    0,  436,
    0,   77,    0,    0,   10,    0,   11,  235,  235,    0,
    0,    0,    0,    0,    0,  231,  231,    0,    0,    0,
    0,    0,    0,    0,    0,   23,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  235,  235,
    0,    0,    0,    0,    0,    0,  231,  231,    0,    0,
    0,    0,   24,    0,    0,    0,    0,   79,  357,    0,
    0,  357,    0,    0,  357,    0,    0,    0,    0,    0,
    0,  337,  337,  337,    0,    0,    0,    0,  357,  357,
    0,    0,    0,  357,    0,    0,    0,   13,  337,  337,
    0,    0,    0,    0,    0,    0,    0,    0,  211,    0,
    0,  211,    3,    4,    5,    6,    7,    0,    0,    0,
    8,    9,    0,  357,  357,  211,  211,    0,    0,    0,
  211,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,   14,   15,   16,   17,   18,
   19,   20,   21,   22,  357,   25,   26,   27,   12,   80,
  211,   78,   29,   30,  110,   77,   32,    0,   10,    0,
   11,    0,   34,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  337,    0,   75,    0,  235,  235,  235,   23,
    0,  111,  211,    0,  231,  231,  231,    0,    0,    0,
    0,  112,    0,  235,  235,  235,  235,  235,  235,   56,
   57,  231,  231,    0,    0,    0,   24,    0,    0,   62,
   63,   79,   64,   65,   66,   67,   68,   69,    3,    4,
    5,    6,    7,    0,   70,    0,    8,  109,    0,  113,
   72,   73,   74,  437,    0,    0,    0,    0,   76,    0,
  545,   13,  235,    0,    0,    0,    0,    0,    0,    0,
  231,   14,   15,   16,   17,   18,   19,   20,   21,   22,
    0,   25,   26,   27,   12,   80,    0,   78,   29,   30,
  110,   77,   32,    0,   10,    0,   11,  235,   34,    0,
    0,    0,  357,  357,  357,  231,    0,    0,    0,    0,
   75,    0,    0,    0,    0,   23,    0,  111,    0,  357,
  357,  357,  357,  357,  357,    0,    0,  112,    0,    0,
    0,    0,    0,    0,    0,   56,   57,    0,    0,  211,
  211,  211,   24,    0,    0,   62,   63,   79,   64,   65,
   66,   67,   68,   69,    0,    0,  211,  211,    0,    0,
   70,    0,    0,    0,    0,  113,   72,   73,   74,  437,
    0,    0,    0,    0,   76,    0,  674,   13,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    3,    4,    5,    6,    7,    0,    0,    0,
    8,    9,    0,  357,    0,  211,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,   14,   15,   16,   17,   18,
   19,   20,   21,   22,    0,   25,   26,   27,   28,    0,
  211,    0,   29,   30,   31,    0,   32,    0,   33,    0,
    0,    0,   34,   35,   36,   37,    0,   38,    0,   39,
    0,   40,    0,    0,   41,    0,    0,    0,   42,   43,
   44,   45,   46,   47,   48,    0,    0,   49,   50,    0,
   51,   52,   53,   54,    0,    0,    0,    0,   55,   56,
   57,   58,   59,   60,   61,    0,    0,    0,    0,   62,
   63,    0,   64,   65,   66,   67,   68,   69,    3,    4,
    5,    6,    7,    0,   70,  333,    8,    9,  333,   71,
   72,   73,   74,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  333,  333,    0,    0,    0,  333,    0,    0,
    0,   14,   15,   16,   17,   18,   19,   20,   21,   22,
    0,   25,   26,   27,   28,    0,    0,    0,   29,   30,
   31,    0,   32,    0,   33,    0,    0,  333,   34,   35,
   36,   37,    0,   38,    0,   39,    0,   40,    0,    0,
   41,    0,    0,    0,   42,   43,   44,   45,   46,   47,
   48,    0,    0,   49,   50,    0,   51,   52,   53,   54,
    0,    0,    0,    0,   55,   56,   57,   58,   59,   60,
   61,    0,    0,    0,    0,   62,   63,    0,   64,   65,
   66,   67,   68,   69,    0,    0,    0,    0,    0,    0,
   70,    0,    0,    0,    0,   71,   72,   73,   74,   12,
   80,    0,   78,    0,    0,    0,   77,    0,    0,   10,
    0,   11,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,   75,    0,    0,    0,    0,
   23,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,   24,    0,    0,
    0,    0,   79,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,   76,
    0,    0,   13,    0,    0,    0,  333,  333,  333,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  333,  333,   12,   80,    0,   78,    0,
    0,    0,   77,    0,    0,   10,    0,   11,    0,    0,
    0,    0,    0,    0,    0,  196,    0,    0,  196,    0,
    0,   75,    0,    0,    0,    0,   23,    0,    0,    0,
    0,    0,  196,  196,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,   24,    0,    0,    0,    0,   79,    0,
    0,    0,    0,    0,    0,    0,    0,  196,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  333,    0,    0,
    0,    0,    0,    0,    0,   76,    0,  382,   13,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  196,
    0,    0,    0,    3,    4,    5,    6,    7,    0,    0,
    0,    8,    9,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,   14,   15,   16,   17,
   18,   19,   20,   21,   22,    0,   25,   26,   27,   28,
    0,    0,    0,   29,   30,   31,    0,   32,    0,   33,
    0,    0,    0,   34,   35,   36,   37,    0,   38,    0,
   39,    0,   40,    0,    0,   41,    0,    0,    0,   42,
   43,   44,   45,   46,   47,   48,    0,    0,   49,   50,
    0,   51,   52,   53,   54,    0,    0,    0,    0,   55,
   56,   57,   58,   59,   60,   61,    0,    0,    0,    0,
   62,   63,    0,   64,   65,   66,   67,   68,   69,    3,
    4,    5,    6,    7,    0,   70,    0,    8,    9,    0,
   71,   72,   73,   74,    0,    0,  196,  196,  196,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,   14,   15,   16,   17,   18,   19,   20,   21,
   22,    0,   25,   26,   27,   28,    0,    0,    0,   29,
   30,   31,    0,   32,    0,   33,    0,    0,    0,   34,
   35,   36,   37,    0,   38,    0,   39,    0,   40,    0,
    0,   41,    0,    0,    0,   42,   43,   44,   45,    0,
   47,   48,  196,    0,   49,    0,    0,   51,   52,   53,
   54,    0,    0,    0,    0,   55,   56,   57,  381,   59,
   60,   61,    0,    0,    0,    0,   62,   63,    0,   64,
   65,   66,   67,   68,   69,    0,    0,  196,    0,    0,
    0,   70,    0,    0,    0,    0,  113,   72,   73,   74,
   12,   80,    0,   78,    0,    0,    0,   77,    0,    0,
   10,    0,   11,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,   75,    0,    0,    0,
    0,   23,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,   24,    0,
    0,    0,    0,   79,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
   76,    0,  514,   13,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,   12,   80,    0,   78,
    0,    0,    0,   77,    0,    0,   10,    0,   11,    0,
    0,    0,    0,    0,    0,    0,  197,    0,    0,  197,
    0,    0,   75,    0,    0,    0,    0,   23,    0,    0,
    0,    0,    0,  197,  197,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,   24,    0,    0,    0,    0,   79,
    0,    0,    0,    0,    0,    0,    0,    0,  197,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,   76,    0,    0,   13,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  197,    0,    0,    0,    3,    4,    5,    6,    7,    0,
    0,    0,    8,    9,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,   14,   15,   16,
   17,   18,   19,   20,   21,   22,    0,   25,   26,   27,
   28,    0,    0,    0,   29,   30,   31,    0,   32,    0,
   33,    0,    0,    0,   34,   35,   36,   37,    0,   38,
    0,   39,    0,   40,    0,    0,   41,    0,    0,    0,
   42,   43,   44,   45,    0,   47,   48,    0,    0,   49,
    0,    0,   51,   52,   53,   54,    0,    0,    0,    0,
   55,   56,   57,  381,   59,   60,   61,    0,    0,    0,
    0,   62,   63,    0,   64,   65,   66,   67,   68,   69,
    3,    4,    5,    6,    7,    0,   70,    0,    8,    9,
    0,  113,   72,   73,   74,    0,    0,  197,  197,  197,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,   14,   15,   16,   17,   18,   19,   20,
   21,   22,    0,   25,   26,   27,   28,    0,    0,    0,
   29,   30,   31,    0,   32,    0,   33,    0,    0,    0,
   34,   35,   36,   37,  587,   38,    0,   39,    0,   40,
    0,    0,   41,    0,    0,    0,   42,   43,   44,   45,
    0,   47,   48,  197,    0,   49,    0,    0,   51,   52,
   53,   54,    0,    0,    0,    0,   55,   56,   57,  381,
   59,   60,   61,    0,    0,    0,    0,   62,   63,    0,
   64,   65,   66,   67,   68,   69,    0,    0,  197,    0,
    0,    0,   70,    0,    0,    0,    0,  113,   72,   73,
   74,   12,   80,    0,   78,    0,    0,    0,   77,    0,
    0,   10,    0,   11,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,   75,    0,    0,
    0,    0,   23,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,   24,
    0,    0,    0,    0,   79,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,   76,    0,    0,   13,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,   12,   80,    0,
   78,    0,    0,    0,   77,    0,    0,   10,    0,   11,
    0,    0,    0,    0,    0,    0,    0,  198,    0,    0,
  198,    0,    0,   75,    0,    0,    0,    0,   23,    0,
    0,    0,    0,    0,  198,  198,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,   24,    0,    0,    0,    0,
   79,    0,    0,    0,    0,    0,    0,    0,    0,  198,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,   76,    0,    0,
   13,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  198,    0,    0,    0,    3,    4,    5,    6,    7,
    0,    0,    0,    8,    9,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,   14,   15,
   16,   17,   18,   19,   20,   21,   22,    0,   25,   26,
   27,   28,    0,    0,    0,   29,   30,   31,    0,   32,
    0,   33,    0,    0,    0,   34,   35,   36,   37,    0,
   38,    0,   39,    0,   40,  773,    0,   41,    0,    0,
    0,   42,   43,   44,   45,    0,   47,   48,    0,    0,
   49,    0,    0,   51,   52,   53,   54,    0,    0,    0,
    0,   55,   56,   57,  381,   59,   60,   61,    0,    0,
    0,    0,   62,   63,    0,   64,   65,   66,   67,   68,
   69,    3,    4,    5,    6,    7,    0,   70,    0,    8,
    9,    0,  113,   72,   73,   74,    0,    0,  198,  198,
  198,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,   14,   15,   16,   17,   18,   19,
   20,   21,   22,    0,   25,   26,   27,   28,    0,    0,
    0,   29,   30,   31,    0,   32,    0,   33,    0,    0,
    0,   34,   35,   36,   37,    0,   38,    0,   39,  826,
   40,    0,    0,   41,    0,    0,    0,   42,   43,   44,
   45,    0,   47,   48,  198,    0,   49,    0,    0,   51,
   52,   53,   54,    0,    0,    0,    0,   55,   56,   57,
  381,   59,   60,   61,    0,    0,    0,    0,   62,   63,
    0,   64,   65,   66,   67,   68,   69,    0,    0,  198,
    0,    0,    0,   70,    0,    0,    0,    0,  113,   72,
   73,   74,   12,   80,    0,   78,    0,    0,    0,   77,
    0,    0,   10,    0,   11,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,   75,    0,
    0,    0,    0,   23,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
   24,    0,    0,    0,    0,   79,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,   76,    0,  828,   13,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,   12,   80,
    0,   78,    0,    0,    0,   77,    0,    0,   10,    0,
   11,    0,    0,    0,    0,    0,    0,    0,  199,    0,
    0,  199,    0,    0,   75,    0,    0,    0,    0,   23,
    0,    0,    0,    0,    0,  199,  199,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,   24,    0,    0,    0,
    0,   79,    0,    0,    0,    0,    0,    0,    0,    0,
  199,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,   76,    0,
  832,   13,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  199,    0,    0,    0,    3,    4,    5,    6,
    7,    0,    0,    0,    8,    9,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,   14,
   15,   16,   17,   18,   19,   20,   21,   22,    0,   25,
   26,   27,   28,    0,    0,    0,   29,   30,   31,    0,
   32,    0,   33,    0,    0,    0,   34,   35,   36,   37,
    0,   38,    0,   39,    0,   40,    0,    0,   41,    0,
    0,    0,   42,   43,   44,   45,    0,   47,   48,    0,
    0,   49,    0,    0,   51,   52,   53,   54,    0,    0,
    0,    0,   55,   56,   57,  381,   59,   60,   61,    0,
    0,    0,    0,   62,   63,    0,   64,   65,   66,   67,
   68,   69,    3,    4,    5,    6,    7,    0,   70,    0,
    8,    9,    0,  113,   72,   73,   74,    0,    0,  199,
  199,  199,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,   14,   15,   16,   17,   18,
   19,   20,   21,   22,    0,   25,   26,   27,   28,    0,
    0,    0,   29,   30,   31,    0,   32,    0,   33,    0,
    0,    0,   34,   35,   36,   37,    0,   38,    0,   39,
    0,   40,    0,    0,   41,    0,    0,    0,   42,   43,
   44,   45,    0,   47,   48,  199,    0,   49,    0,    0,
   51,   52,   53,   54,    0,    0,    0,    0,   55,   56,
   57,  381,   59,   60,   61,    0,    0,    0,    0,   62,
   63,    0,   64,   65,   66,   67,   68,   69,    0,    0,
  199,    0,    0,    0,   70,    0,    0,    0,    0,  113,
   72,   73,   74,   12,   80,    0,   78,    0,    0,    0,
   77,    0,    0,   10,    0,   11,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,   75,
    0,    0,    0,    0,   23,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,   24,    0,    0,    0,    0,   79,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,   76,    0,  835,   13,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,   12,
   80,    0,   78,    0,    0,    0,   77,    0,    0,   10,
    0,   11,    0,    0,    0,    0,    0,    0,    0,  200,
    0,    0,  200,    0,    0,   75,    0,    0,    0,    0,
   23,    0,    0,    0,    0,    0,  200,  200,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,   24,    0,    0,
    0,    0,   79,    0,    0,    0,    0,    0,    0,    0,
    0,  200,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,   76,
    0,  848,   13,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  200,    0,    0,    0,    3,    4,    5,
    6,    7,    0,    0,    0,    8,    9,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
   14,   15,   16,   17,   18,   19,   20,   21,   22,    0,
   25,   26,   27,   28,    0,    0,    0,   29,   30,   31,
    0,   32,    0,   33,    0,    0,    0,   34,   35,   36,
   37,    0,   38,    0,   39,    0,   40,    0,    0,   41,
    0,    0,    0,   42,   43,   44,   45,    0,   47,   48,
    0,    0,   49,    0,    0,   51,   52,   53,   54,    0,
    0,    0,    0,   55,   56,   57,  381,   59,   60,   61,
    0,    0,    0,    0,   62,   63,    0,   64,   65,   66,
   67,   68,   69,    3,    4,    5,    6,    7,    0,   70,
    0,    8,    9,    0,  113,   72,   73,   74,    0,    0,
  200,  200,  200,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,   14,   15,   16,   17,
   18,   19,   20,   21,   22,    0,   25,   26,   27,   28,
    0,    0,    0,   29,   30,   31,    0,   32,    0,   33,
    0,    0,    0,   34,   35,   36,   37,    0,   38,    0,
   39,    0,   40,    0,    0,   41,    0,    0,    0,   42,
   43,   44,   45,    0,   47,   48,  200,    0,   49,    0,
    0,   51,   52,   53,   54,    0,    0,    0,    0,   55,
   56,   57,  381,   59,   60,   61,    0,    0,    0,    0,
   62,   63,    0,   64,   65,   66,   67,   68,   69,    0,
    0,  200,    0,    0,    0,   70,    0,    0,    0,    0,
  113,   72,   73,   74,   12,   80,    0,   78,    0,    0,
    0,   77,    0,    0,   10,    0,   11,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
   75,    0,    0,    0,    0,   23,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,   24,    0,    0,    0,    0,   79,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,   76,    0,    0,   13,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
   12,   80,    0,   78,    0,    0,    0,   77,    0,    0,
   10,    0,   11,    0,    0,    0,    0,    0,    0,    0,
  201,    0,    0,  201,    0,    0,   75,    0,    0,    0,
    0,   23,    0,    0,    0,    0,    0,  201,  201,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,   24,    0,
    0,    0,    0,   79,    0,    0,    0,    0,    0,    0,
    0,    0,  201,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
   76,    0,  869,   13,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  201,    0,    0,    0,    3,    4,
    5,    6,    7,    0,    0,    0,    8,    9,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,   14,   15,   16,   17,   18,   19,   20,   21,   22,
    0,   25,   26,   27,   28,    0,    0,    0,   29,   30,
   31,    0,   32,    0,   33,    0,    0,    0,   34,   35,
   36,   37,    0,   38,  853,   39,    0,   40,    0,    0,
   41,    0,    0,    0,   42,   43,   44,   45,    0,   47,
   48,    0,    0,   49,    0,    0,   51,   52,   53,   54,
    0,    0,    0,    0,   55,   56,   57,  381,   59,   60,
   61,    0,    0,    0,    0,   62,   63,    0,   64,   65,
   66,   67,   68,   69,    3,    4,    5,    6,    7,    0,
   70,    0,    8,    9,    0,  113,   72,   73,   74,    0,
    0,  201,  201,  201,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,   14,   15,   16,
   17,   18,   19,   20,   21,   22,    0,   25,   26,   27,
   28,    0,    0,    0,   29,   30,   31,    0,   32,    0,
   33,    0,    0,    0,   34,   35,   36,   37,    0,   38,
    0,   39,    0,   40,    0,    0,   41,    0,    0,    0,
   42,   43,   44,   45,    0,   47,   48,  201,    0,   49,
    0,    0,   51,   52,   53,   54,    0,    0,    0,    0,
   55,   56,   57,  381,   59,   60,   61,    0,    0,    0,
    0,   62,   63,    0,   64,   65,   66,   67,   68,   69,
    0,    0,  201,    0,    0,    0,   70,    0,    0,    0,
    0,  113,   72,   73,   74,   12,   80,    0,   78,    0,
    0,    0,   77,    0,    0,   10,    0,   11,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,   75,    0,    0,    0,    0,   23,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,   24,    0,    0,    0,    0,   79,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,   76,    0,  872,   13,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,   12,   80,    0,   78,    0,    0,    0,   77,    0,
    0,   10,    0,   11,    0,    0,    0,    0,    0,    0,
    0,  202,    0,    0,  202,    0,    0,   75,    0,    0,
    0,    0,   23,    0,    0,    0,    0,    0,  202,  202,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,   24,
    0,    0,    0,    0,   79,    0,    0,    0,    0,    0,
    0,    0,    0,  202,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,   76,    0,    0,   13,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  202,    0,    0,    0,    3,
    4,    5,    6,    7,    0,    0,    0,    8,    9,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,   14,   15,   16,   17,   18,   19,   20,   21,
   22,    0,   25,   26,   27,   28,    0,    0,    0,   29,
   30,   31,    0,   32,    0,   33,    0,    0,    0,   34,
   35,   36,   37,    0,   38,    0,   39,    0,   40,    0,
    0,   41,    0,    0,    0,   42,   43,   44,   45,    0,
   47,   48,    0,    0,   49,    0,    0,   51,   52,   53,
   54,    0,    0,    0,    0,   55,   56,   57,  381,   59,
   60,   61,    0,    0,    0,    0,   62,   63,    0,   64,
   65,   66,   67,   68,   69,    3,    4,    5,    6,    7,
    0,   70,    0,    8,    9,    0,  113,   72,   73,   74,
    0,    0,  202,  202,  202,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,   14,   15,
   16,   17,   18,   19,   20,   21,   22,    0,   25,   26,
   27,   28,    0,    0,    0,   29,   30,   31,    0,   32,
    0,   33,    0,    0,    0,   34,   35,   36,   37,    0,
   38,    0,   39,    0,   40,    0,    0,   41,    0,    0,
    0,   42,   43,   44,   45,    0,   47,   48,  202,    0,
   49,    0,    0,   51,   52,   53,   54,    0,    0,    0,
    0,   55,   56,   57,  381,   59,   60,   61,    0,    0,
    0,    0,   62,   63,    0,   64,   65,   66,   67,   68,
   69,    0,    0,  202,    0,    0,    0,   70,    0,    0,
    0,    0,  113,   72,   73,   74,   12,   80,    0,   78,
    0,    0,    0,   77,    0,    0,   10,    0,   11,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  311,   75,    0,    0,    0,    0,   23,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,   24,    0,    0,    0,    0,   79,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,   76,    0,    0,   13,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,   12,   80,    0,   78,    0,    0,    0,   77,
    0,    0,   10,    0,   11,    0,    0,    0,    0,    0,
    0,    0,    0,  203,    0,    0,  203,  318,   75,    0,
    0,    0,    0,   23,    0,    0,    0,    0,    0,    0,
  203,  203,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
   24,    0,    0,    0,    0,   79,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  203,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,   76,    0,    0,   13,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  203,    0,    0,
    3,    4,    5,    6,    7,  644,  628,    0,    8,    9,
  642,  639,    0,  640,  641,  643,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  633,    0,
  635,    0,    0,   14,   15,   16,   17,   18,   19,   20,
   21,   22,    0,   25,   26,   27,   28,    0,    0,    0,
   29,   30,   31,    0,   32,    0,   33,    0,    0,  646,
   34,   35,   36,   37,    0,   38,    0,   39,    0,   40,
    0,    0,   41,    0,    0,    0,   42,   43,   44,  111,
    0,   47,   48,    0,    0,   49,    0,  204,   51,   52,
  204,    0,    0,    0,    0,    0,   55,   56,   57,    0,
    0,    0,    0,    0,  204,  204,    0,   62,   63,    0,
   64,   65,   66,   67,   68,   69,    3,    4,    5,    6,
    7,    0,   70,  215,    8,    9,  215,  113,   72,   73,
   74,    0,    0,    0,  203,  203,  203,    0,    0,  204,
  215,  215,    0,    0,    0,  215,    0,    0,    0,   14,
   15,   16,   17,   18,   19,   20,   21,   22,    0,   25,
   26,   27,   28,    0,    0,    0,   29,   30,   31,    0,
   32,  204,   33,    0,    0,  215,   34,   35,   36,   37,
    0,   38,    0,   39,    0,   40,    0,    0,   41,    0,
    0,    0,   42,   43,   44,  111,    0,   47,   48,    0,
  203,   49,    0,    0,   51,   52,  215,  215,   12,   80,
    0,   78,   55,   56,   57,   77,    0,    0,   10,    0,
   11,    0,    0,   62,   63,    0,   64,   65,   66,   67,
   68,   69,    0,  595,   75,  203,    0,    0,   70,   23,
    0,    0,    0,  113,   72,   73,   74,    0,    0,  629,
  630,  631,  632,  634,  636,  637,  638,    0,    0,    0,
    0,    0,    0,    0,    0,    0,   24,  645,    0,    0,
    0,   79,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,   76,    0,
    0,   13,    0,    0,    0,    0,    0,    0,  204,  204,
  204,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,   12,   80,    0,   78,    0,    0,
    0,   77,    0,    0,   10,    0,   11,    0,    0,    0,
    0,    0,    0,    0,  215,  215,  215,    0,    0,  768,
   75,    0,    0,    0,    0,   23,    0,    0,    0,    0,
    0,  215,  215,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  204,    0,    0,    0,    0,    0,
    0,    0,   24,    0,    0,    0,    0,   79,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  204,
  215,    0,    0,    0,   76,    0,    0,   13,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    3,    4,    5,    6,    7,    0,  255,    0,
    8,    9,    0,  253,  250,  215,  251,  252,  254,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  244,    0,  246,    0,   14,   15,   16,   17,   18,
   19,   20,   21,   22,    0,   25,   26,   27,   28,    0,
    0,    0,   29,   30,   31,    0,   32,    0,   33,    0,
    0,    0,   34,   35,   36,   37,    0,   38,    0,   39,
    0,   40,    0,    0,   41,    0,    0,    0,   42,   43,
   44,  111,    0,   47,   48,    0,    0,   49,    0,  205,
   51,   52,  205,    0,    0,    0,    0,    0,   55,   56,
   57,    0,    0,    0,    0,    0,  205,  205,    0,   62,
   63,    0,   64,   65,   66,   67,   68,   69,    3,    4,
    5,    6,    7,    0,   70,  210,    8,    9,  210,  113,
   72,   73,   74,    0,    0,    0,    0,    0,    0,    0,
    0,  205,  210,  210,    0,    0,    0,  210,    0,    0,
    0,   14,   15,   16,   17,   18,   19,   20,   21,   22,
    0,   25,   26,   27,   28,    0,    0,    0,   29,   30,
   31,    0,   32,  205,   33,    0,    0,  210,   34,   35,
   36,   37,    0,   38,    0,   39,    0,   40,    0,    0,
   41,    0,    0,    0,   42,   43,   44,  111,    0,   47,
   48,    0,    0,   49,    0,    0,   51,   52,    0,  210,
   12,   80,    0,   78,   55,   56,   57,   77,    0,    0,
   10,    0,   11,    0,    0,   62,   63,    0,   64,   65,
   66,   67,   68,   69,    0,  823,   75,    0,    0,    0,
   70,   23,    0,    0,    0,  113,   72,   73,   74,    0,
    0,    0,  240,  241,  242,  243,  245,  247,  248,  249,
  256,    0,    0,    0,    0,    0,    0,    0,   24,    0,
  257,    0,    0,   79,    0,    0,  644,    0,    0,    0,
    0,  642,  639,    0,  640,  641,  643,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  633,
   76,  635,    0,   13,    0,    0,    0,    0,    0,    0,
  205,  205,  205,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,   12,   80,    0,   78,
  646,    0,    0,   77,    0,    0,   10,    0,   11,    0,
    0,    0,    0,    0,    0,    0,  210,  210,  210,    0,
    0,    0,   75,    0,    0,    0,    0,   23,    0,    0,
    0,    0,    0,  210,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  205,    0,    0,    0,
    0,    0,    0,    0,   24,    0,    0,    0,    0,   79,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  205,  210,    0,    0,    0,   76,    0,    0,   13,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    3,    4,    5,    6,    7,    0,
    0,    0,    8,    9,    0,    0,    0,  210,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,   14,   15,   16,
   17,   18,   19,   20,   21,   22,    0,   25,   26,   27,
   28,    0,    0,    0,   29,   30,   31,    0,   32,    0,
   33,    0,    0,    0,   34,   35,   36,   37,    0,   38,
    0,   39,    0,   40,    0,    0,   41,    0,    0,    0,
   42,   43,   44,  111,    0,   47,   48,    0,    0,   49,
    0,    0,   51,   52,  634,  636,  637,  638,    0,    0,
   55,   56,   57,    0,    0,    0,    0,    0,  645,    0,
    0,   62,   63,    0,   64,   65,   66,   67,   68,   69,
    3,    4,    5,    6,    7,    0,   70,    0,    8,    9,
    0,  113,   72,   73,   74,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,   14,   15,   16,   17,   18,   19,   20,
   21,   22,    0,   25,   26,   27,   28,    0,    0,    0,
   29,   30,   31,    0,   32,    0,   33,    0,    0,    0,
   34,   35,   36,   37,    0,   38,    0,   39,    0,   40,
    0,    0,   41,    0,    0,    0,   42,   43,   44,  111,
    0,   47,   48,    0,    0,   49,    0,    0,   51,   52,
    0,    0,    0,    0,    0,    0,   55,   56,   57,  188,
  358,    0,  188,  358,    0,    0,  358,   62,   63,    0,
   64,   65,   66,   67,   68,   69,  188,  188,    0,    0,
  358,  358,   70,    0,    0,  358,    0,  113,   72,   73,
   74,   12,   80,    0,   78,    0,  140,    0,   77,    0,
    0,   10,    0,   11,    0,    0,    0,    0,    0,    0,
    0,  188,    0,    0,    0,  358,  358,    0,    0,    0,
    0,    0,   23,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  188,    0,    0,  358,    0,    0,   24,
    0,    0,    0,    0,   79,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  236,    0,    0,  236,    0,
    0,  236,    0,  232,    0,    0,  232,    0,    0,  232,
    0,    0,    0,    0,   13,  236,  236,    0,    0,    0,
  236,    0,    0,  232,  232,    0,    0,    0,  232,    0,
    0,    0,    0,    0,    0,    0,    0,   12,   80,    0,
   78,    0,    0,    0,   77,    0,    0,   10,    0,   11,
  236,  236,    0,    0,    0,    0,    0,    0,  232,  232,
    0,    0,    0,  169,    0,    0,    0,    0,   23,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  236,  236,    0,    0,    0,    0,    0,    0,  232,
  232,    0,    0,    0,    0,   24,    0,    0,    0,    0,
   79,  359,    0,    0,  359,    0,    0,  359,    0,    0,
  188,  188,  188,    0,  358,  358,  358,    0,    0,    0,
    0,  359,  359,    0,    0,    0,  359,    0,    0,    0,
   13,  358,  358,  358,  358,  358,  358,    0,    0,    0,
    0,    0,    0,    0,    0,    3,    4,    5,    6,    7,
    0,    0,    0,    8,  109,    0,  359,  359,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  188,    0,   14,   15,
   16,   17,   18,   19,   20,   21,   22,  359,   25,   26,
   27,   12,   80,    0,   78,   29,   30,  110,   77,   32,
    0,   10,    0,   11,    0,   34,    0,    0,    0,    0,
    0,  188,    0,    0,    0,  358,    0,  171,    0,  236,
  236,  236,   23,    0,  111,    0,    0,  232,  232,  232,
    0,    0,    0,    0,  112,    0,  236,  236,  236,  236,
  236,  236,   56,   57,  232,  232,    0,    0,    0,   24,
    0,    0,   62,   63,   79,   64,   65,   66,   67,   68,
   69,    3,    4,    5,    6,    7,    0,   70,    0,    8,
  109,    0,  113,   72,   73,   74,    0,    0,    0,    0,
    0,    0,    0,    0,   13,  236,    0,    0,    0,    0,
    0,    0,    0,  232,   14,   15,   16,   17,   18,   19,
   20,   21,   22,    0,   25,   26,   27,   12,   80,    0,
   78,   29,   30,  110,   77,   32,    0,   10,    0,   11,
  236,   34,    0,    0,    0,  359,  359,  359,  232,    0,
    0,    0,    0,  179,    0,    0,    0,    0,   23,    0,
  111,    0,  359,  359,  359,  359,  359,  359,    0,    0,
  112,    0,    0,    0,    0,    0,    0,    0,   56,   57,
    0,    0,    0,    0,    0,   24,    0,    0,   62,   63,
   79,   64,   65,   66,   67,   68,   69,    0,    0,    0,
    0,    0,    0,   70,    0,    0,    0,    0,  113,   72,
   73,   74,    0,    0,    0,    0,    0,    0,    0,    0,
   13,    0,    0,    0,    0,    0,    0,  355,    0,    0,
  355,    0,    0,  355,    0,    3,    4,    5,    6,    7,
    0,    0,    0,    8,  109,    0,  359,  355,  355,    0,
    0,    0,  355,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,   14,   15,
   16,   17,   18,   19,   20,   21,   22,    0,   25,   26,
   27,    0,  355,  355,    0,   29,   30,  110,    0,   32,
    0,    0,    0,    0,    0,   34,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  355,  111,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  112,    0,    0,    0,    0,    0,
    0,    0,   56,   57,    0,    0,    0,    0,    0,    0,
    0,    0,   62,   63,    0,   64,   65,   66,   67,   68,
   69,    3,    4,    5,    6,    7,    0,   70,    0,    8,
  109,    0,  113,   72,   73,   74,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,   14,   15,   16,   17,   18,   19,
   20,   21,   22,    0,   25,   26,   27,    0,    0,    0,
    0,   29,   30,  110,    0,   32,    0,    0,    0,    0,
    0,   34,   12,   80,    0,   78,    0,    0,    0,   77,
  310,    0,   10,    0,   11,    0,    0,    0,    0,    0,
  111,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  112,    0,    0,   23,    0,    0,    0,    0,   56,   57,
    0,  355,  355,  355,    0,    0,    0,    0,   62,   63,
    0,   64,   65,   66,   67,   68,   69,    0,  355,  355,
   24,    0,    0,   70,    0,   79,    0,    0,  113,   72,
   73,   74,    0,    0,    0,    0,  237,    0,    0,  237,
    0,    0,  237,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,   13,  237,  237,    0,    0,
    0,  237,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,   12,   80,
    0,   78,    0,    0,    0,   77,    0,    0,   10,    0,
   11,  237,  237,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  355,    0,    0,    0,    0,    0,    0,   23,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  237,  237,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,   24,    0,    0,    0,
    0,   79,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,   13,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    3,    4,    5,    6,
    7,  255,  239,    0,    8,    9,  253,  250,    0,  251,
  252,  254,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  244,    0,  246,    0,    0,   14,
   15,   16,   17,   18,   19,   20,   21,   22,    0,   25,
   26,   27,   12,   80,    0,   78,   29,   30,  110,   77,
   32,    0,   10,    0,   11,    0,   34,    0,  238,    0,
    0,    0,    0,    0,    0,    0,    0,  397,    0,    0,
  237,  237,  237,   23,    0,  111,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  112,    0,  237,  237,  237,
  237,  237,  237,   56,   57,    0,    0,    0,    0,    0,
   24,    0,    0,   62,   63,   79,   64,   65,   66,   67,
   68,   69,    3,    4,    5,    6,    7,    0,   70,    0,
    8,  109,    0,  113,   72,   73,   74,    0,    0,    0,
    0,    0,    0,    0,    0,   13,  237,    0,    0,    0,
    0,    0,    0,    0,    0,   14,   15,   16,   17,   18,
   19,   20,   21,   22,    0,   25,   26,   27,    0,    0,
    0,    0,   29,   30,  110,  371,   32,    0,    0,    0,
    0,  237,   34,  238,    0,    0,  238,    0,    0,  238,
   12,   80,    0,   78,    0,  422,    0,   77,    0,    0,
   10,  111,   11,  238,  238,    0,    0,    0,  238,    0,
    0,  112,    0,    0,    0,    0,    0,    0,    0,   56,
   57,   23,    0,    0,    0,    0,    0,    0,    0,   62,
   63,    0,   64,   65,   66,   67,   68,   69,  238,  238,
    0,    0,    0,    0,   70,    0,    0,    0,   24,  113,
   72,   73,   74,   79,    0,  240,  241,  242,  243,  245,
  247,  248,  249,  256,    0,    0,    0,    0,    0,  238,
  238,    0,    0,  257,    0,    0,    3,    4,    5,    6,
    7,    0,    0,   13,    8,  109,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,   14,
   15,   16,   17,   18,   19,   20,   21,   22,    0,   25,
   26,   27,    0,    0,    0,    0,   29,   30,  110,    0,
   32,    0,    0,    0,    0,    0,   34,   12,   80,    0,
   78,    0,  469,    0,   77,    0,    0,   10,    0,   11,
    0,    0,    0,    0,    0,  111,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  112,    0,    0,   23,    0,
    0,    0,    0,   56,   57,    0,    0,    0,    0,    0,
    0,    0,    0,   62,   63,    0,   64,   65,   66,   67,
   68,   69,    0,    0,    0,   24,    0,    0,   70,    0,
   79,    0,    0,  113,   72,   73,   74,  238,  238,  238,
    0,    0,    0,    0,    3,    4,    5,    6,    7,    0,
    0,    0,    8,  109,  238,  238,  238,  238,  238,  238,
   13,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,   14,   15,   16,
   17,   18,   19,   20,   21,   22,    0,   25,   26,   27,
    0,    0,    0,    0,   29,   30,  110,    0,   32,    0,
    0,    0,    0,  238,   34,   12,   80,    0,   78,    0,
    0,    0,   77,    0,    0,   10,    0,   11,    0,    0,
    0,    0,    0,  111,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  112,    0,    0,   23,    0,  238,    0,
    0,   56,   57,    0,    0,    0,    0,    0,    0,    0,
    0,   62,   63,    0,   64,   65,   66,   67,   68,   69,
    0,  360,    0,   24,  360,    0,   70,  360,   79,    0,
    0,  113,   72,   73,   74,    0,    0,    0,    0,    0,
    0,  360,  360,    0,    0,    0,  360,    0,    0,    0,
    0,    3,    4,    5,    6,    7,    0,    0,   13,    8,
  109,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  360,  360,    0,    0,
    0,    0,    0,    0,   14,   15,   16,   17,   18,   19,
   20,   21,   22,    0,   25,   26,   27,    0,    0,    0,
    0,   29,   30,  110,    0,   32,    0,  360,    0,    0,
    0,   34,   12,   80,    0,   78,    0,    0,    0,   77,
    0,    0,   10,    0,   11,    0,    0,    0,    0,    0,
  111,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  112,    0,    0,   23,    0,    0,    0,    0,   56,   57,
    0,    0,    0,    0,    0,    0,    0,    0,   62,   63,
    0,   64,   65,   66,   67,   68,   69,    0,    0,    0,
   24,    0,    0,   70,    0,   79,    0,    0,  113,   72,
   73,   74,    0,    0,    0,    0,    0,    0,    0,    3,
    4,    5,    6,    7,    0,    0,    0,    8,  109,    0,
    0,    0,    0,    0,    0,   13,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,   14,   15,   16,   17,   18,   19,   20,   21,
   22,    0,   25,   26,   27,    0,    0,    0,    0,   29,
   30,  110,    0,   32,    0,  360,  360,  360,    0,   34,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  360,  360,  360,  360,  360,  360,  111,    0,
  224,    0,    0,  224,    0,    0,  224,    0,  112,    0,
    0,    0,    0,    0,    0,    0,   56,   57,    0,    0,
  224,  224,  224,    0,  224,  224,   62,   63,    0,   64,
   65,   66,   67,   68,   69,    0,    0,    0,    0,    0,
    0,   70,    0,    0,    0,    0,  113,   72,   73,   74,
    0,    0,    0,    0,  644,  224,  224,    0,    0,  642,
  639,    0,  640,  641,  643,    0,    3,    4,    5,    6,
    7,    0,    0,    0,    8,    9,  360,  633,    0,  635,
    0,    0,    0,    0,    0,    0,  224,  224,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,   14,
   15,   16,   17,   18,   19,   20,   21,   22,  646,   25,
   26,   27,    0,    0,    0,    0,   29,   30,  110,    0,
   32,    0,    0,    0,    0,    0,   34,    0,  291,  291,
    0,  291,  291,  291,  291,  291,  291,  291,  291,    0,
    0,    0,    0,    0,    0,  111,    0,    0,    0,  291,
  291,  291,    0,  291,  291,  112,    0,    0,    0,    0,
    0,    0,    0,   56,   57,    0,    0,    0,    0,    0,
    0,    0,    0,   62,   63,    0,   64,   65,   66,   67,
   68,   69,  291,    0,  291,  291,    0,    0,   70,    0,
    0,    0,    0,  113,   72,   73,   74,  292,  292,    0,
  292,  292,  292,  292,  292,  292,  292,  292,    0,    0,
    0,    0,    0,    0,  291,  291,  291,    0,  292,  292,
  292,    0,  292,  292,  224,  224,  224,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  224,  224,  224,  224,  224,  224,  224,  224,  224,
  224,  292,    0,  292,  292,  293,  293,    0,  293,  293,
  293,  293,  293,  293,  293,  293,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  293,  293,  293,    0,
  293,  293,    0,  292,  292,  292,    0,    0,    0,    0,
  224,    0,    0,    0,    0,    0,    0,    0,  629,  630,
  631,  632,  634,  636,  637,  638,    0,    0,    0,  293,
    0,  293,  293,    0,    0,    0,  645,    0,    0,    0,
    0,    0,    0,    0,    0,  224,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  293,  293,  293,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  291,  291,  291,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  291,  291,  291,  291,  291,  291,  291,  291,  291,  291,
  291,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  291,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  291,    0,  392,  392,    0,  392,  392,  392,
  392,  392,  392,  392,  392,    0,    0,    0,    0,  291,
    0,    0,  292,  292,  292,  392,  392,  392,  392,  392,
  392,    0,    0,    0,    0,    0,    0,    0,    0,  292,
  292,  292,  292,  292,  292,  292,  292,  292,  292,  292,
    0,    0,  291,    0,  291,    0,    0,    0,    0,  292,
  392,  392,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  292,    0,    0,  291,    0,    0,    0,    0,  291,
  293,  293,  293,    0,    0,    0,    0,    0,  292,    0,
    0,  392,  392,    0,    0,    0,    0,  293,  293,  293,
  293,  293,  293,  293,  293,  293,  293,  293,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  293,    0,    0,
    0,  292,    0,  292,    0,    0,    0,    0,    0,  293,
  294,  294,    0,  294,  294,  294,  294,  294,  294,  294,
  294,    0,    0,  292,    0,    0,  293,    0,  292,    0,
    0,  294,  294,  294,    0,  294,  294,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  356,    0,  293,
  356,  293,    0,  356,    0,    0,  294,  294,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  356,  356,    0,
    0,  293,  356,    0,    0,    0,  293,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  294,  294,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  392,
  392,  392,  356,  356,  392,  392,  392,  392,  392,  392,
  392,  392,  392,  392,  392,  392,  392,  392,  392,  392,
  392,  392,  392,  392,  392,  392,  392,  392,  392,    0,
    0,    0,    0,  356,  326,  326,  392,    0,  326,  326,
  326,  326,  326,  326,  326,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  326,  326,  326,    0,  326,
  326,    0,    0,    0,    0,  392,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  326,  326,    0,    0,    0,    0,    0,    0,    0,  392,
  392,    0,    0,    0,    0,    0,    0,  326,  326,    0,
    0,  326,  326,  326,  326,  326,  326,  326,    0,    0,
  299,  326,  326,    0,    0,  294,  294,  294,  326,  326,
  326,    0,  326,  326,    0,    0,    0,    0,    0,    0,
    0,    0,  294,  294,  294,  294,  294,  294,  294,  294,
  294,  294,  294,    0,    0,    0,    0,    0,    0,    0,
    0,  326,  294,  326,  326,    0,    0,    0,    0,    0,
    0,  356,  356,  356,    0,    0,  385,  385,    0,    0,
  385,  385,  385,  385,  385,  385,  385,    0,  356,  356,
    0,  294,    0,    0,  326,    0,    0,  385,  385,  385,
  385,  385,  385,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  294,    0,    0,    0,
  385,    0,  385,  385,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  298,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  326,
  326,  326,  385,  385,  385,  644,  628,    0,    0,    0,
  642,  639,  356,  640,  641,  643,  326,  326,  326,  326,
  326,  326,  326,  326,  326,  326,  326,    0,  633,    0,
  635,    0,    0,    0,    0,    0,  326,    0,    0,    0,
    0,    0,    0,    0,    0,  397,  397,    0,  397,  397,
  397,  397,  397,  397,  397,  397,    0,    0,    0,  646,
    0,    0,  627,    0,    0,  326,  397,  397,  397,  397,
  397,  397,  326,  326,  326,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  326,
  326,  326,  326,  326,  326,  326,  326,  326,  326,    0,
  326,  397,  397,    0,    0,    0,    0,    0,    0,  326,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  290,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  397,  397,    0,    0,    0,    0,    0,    0,
    0,  385,  385,  385,    0,    0,  385,  385,  385,  385,
  385,  385,  385,  385,  385,  385,  385,  385,  385,  385,
  385,  385,  385,  385,  385,  385,  385,  385,  385,  385,
  385,    0,    0,  326,    0,    0,  392,  392,  385,  392,
  392,  392,  392,  392,  392,  392,  392,    0,    0,    0,
    0,    0,    0,  290,    0,    0,    0,  392,  392,  392,
  392,  392,  392,    0,    0,    0,    0,  385,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  392,  392,    0,    0,    0,    0,    0,    0,
    0,  385,  385,    0,    0,    0,    0,    0,    0,  629,
  630,  631,  632,  634,  636,  637,  638,    0,    0,    0,
    0,    0,    0,  392,  392,    0,    0,  645,    0,    0,
  397,  397,  397,    0,    0,  397,  397,  397,  397,  397,
  397,  397,  397,  397,  397,  397,  397,  397,  397,  397,
  397,  397,  397,  397,  397,  397,  397,  397,  397,  397,
    0,    0,    0,    0,    0,  396,  396,  397,  396,  396,
  396,  396,  396,  396,  396,  396,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  396,  396,  396,  396,
  396,  396,    0,    0,    0,    0,  397,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  396,  396,    0,    0,    0,    0,    0,    0,    0,
  397,  397,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  396,  396,    0,    0,    0,    0,    0,    0,
    0,  392,  392,  392,    0,    0,  392,  392,  392,  392,
  392,  392,  392,  392,  392,  392,  392,  392,  392,  392,
  392,  392,  392,  392,  392,  392,  392,  392,  392,  392,
  392,    0,    0,    0,    0,  381,  381,    0,  392,  381,
  381,  381,  381,  381,  381,  381,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  381,  381,  381,  381,
  381,  381,    0,    0,    0,    0,    0,  392,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  381,  381,    0,    0,    0,    0,    0,    0,    0,
    0,  392,  392,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  381,  381,    0,    0,    0,    0,    0,    0,
  396,  396,  396,    0,    0,  396,  396,  396,  396,  396,
  396,  396,  396,  396,  396,  396,  396,  396,  396,  396,
  396,  396,  396,  396,  396,  396,  396,  396,  396,  396,
    0,    0,    0,    0,  395,  395,    0,  396,  395,  395,
  395,  395,  395,  395,  395,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  395,  395,  395,  395,  395,
  395,    0,    0,    0,    0,    0,  396,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  395,  395,    0,    0,    0,    0,    0,    0,    0,    0,
  396,  396,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  395,  395,    0,    0,    0,    0,    0,    0,    0,
  381,  381,  381,    0,    0,  381,  381,  381,  381,  381,
  381,  381,  381,  381,  381,  381,  381,  381,  381,  381,
  381,  381,  381,  381,  381,  381,  381,  381,  381,  381,
    0,    0,    0,    0,  394,  394,    0,  381,  394,  394,
  394,  394,  394,  394,  394,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  394,  394,  394,  394,  394,
  394,    0,    0,    0,    0,    0,  381,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  394,  394,    0,    0,    0,    0,    0,    0,    0,    0,
  381,  381,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  394,  394,    0,    0,    0,    0,    0,    0,  395,
  395,  395,    0,    0,  395,  395,  395,  395,  395,  395,
  395,  395,  395,  395,  395,  395,  395,  395,  395,  395,
  395,  395,  395,  395,  395,  395,  395,  395,  395,    0,
    0,    0,    0,  379,  379,    0,  395,  379,  379,  379,
  379,  379,  379,  379,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  379,  379,  379,  379,  379,  379,
    0,    0,    0,    0,    0,  395,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  379,
  379,    0,    0,    0,    0,    0,    0,    0,    0,  395,
  395,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  379,  379,    0,    0,    0,    0,    0,    0,    0,  394,
  394,  394,    0,    0,  394,  394,  394,  394,  394,  394,
  394,  394,  394,  394,  394,  394,  394,  394,  394,  394,
  394,  394,  394,  394,  394,  394,  394,  394,  394,    0,
    0,    0,    0,  382,  382,    0,  394,  382,  382,  382,
  382,  382,  382,  382,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  382,  382,  382,  382,  382,  382,
    0,    0,    0,    0,    0,  394,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  382,
  382,    0,    0,    0,    0,    0,    0,    0,    0,  394,
  394,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  382,  382,    0,    0,    0,    0,    0,    0,  379,  379,
  379,    0,    0,  379,  379,  379,  379,  379,  379,  379,
  379,  379,  379,  379,  379,  379,  379,  379,  379,  379,
  379,  379,  379,  379,  379,  379,  379,  379,    0,    0,
    0,    0,    0,  300,  300,  379,  300,  300,  300,  300,
  300,  300,  300,  300,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  300,  300,  300,    0,  300,  300,
    0,    0,    0,    0,  379,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  300,    0,  300,
  300,    0,    0,    0,    0,    0,    0,    0,  379,  379,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  300,
  300,  300,    0,    0,    0,    0,    0,    0,  382,  382,
  382,    0,    0,  382,  382,  382,  382,  382,  382,  382,
  382,  382,  382,  382,  382,  382,  382,  382,  382,  382,
  382,  382,  382,  382,  382,  382,  382,  382,    0,    0,
    0,    0,  300,  300,    0,  382,  300,  300,  300,  300,
  300,  300,  300,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  300,  300,  300,    0,  300,  300,    0,
    0,    0,    0,    0,  382,    0,    0,    0,    0,    0,
  187,  187,    0,    0,  187,  187,  187,  187,  187,  187,
  187,    0,    0,    0,    0,    0,  300,    0,  300,  300,
    0,  187,  187,  187,    0,  187,  187,    0,  382,  382,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  300,  300,
  300,    0,    0,    0,    0,    0,  187,  187,  300,  300,
  300,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  300,  300,  300,  300,  300,
  300,  300,  300,  300,  300,  300,    0,  187,  187,    0,
    0,    0,  207,  207,    0,  300,  207,  207,  207,  207,
  207,  207,  207,    0,    0,  353,    0,    0,  353,    0,
    0,  353,    0,  207,  207,  207,    0,  207,  207,    0,
    0,    0,    0,    0,  300,  353,  353,    0,    0,    0,
  353,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  209,  209,  207,  207,
  209,  209,  209,  209,  209,  209,  209,    0,  300,  300,
  353,  353,    0,    0,    0,    0,    0,  209,  209,  209,
    0,  209,  209,    0,    0,    0,    0,    0,    0,  207,
  207,    0,    0,    0,    0,    0,    0,  300,  300,  300,
    0,  353,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  209,  209,  300,  300,  300,  300,  300,  300,
  300,  300,  300,  300,  300,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  300,  187,  187,  187,    0,    0,
    0,    0,    0,  209,  209,    0,    0,    0,    0,    0,
    0,    0,  187,  187,  187,  187,  187,  187,  187,  187,
  187,  187,  187,  300,    0,    0,    0,    0,    0,    0,
    0,    0,  187,    0,    0,    0,    0,    0,    0,    0,
    0,  296,  296,    0,  296,  296,  296,  296,  296,  296,
  296,  296,    0,    0,    0,    0,    0,  300,  300,    0,
    0,  187,  296,  296,  296,    0,  296,  296,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  207,  207,  207,
    0,    0,    0,    0,    0,  390,  187,  296,  296,  353,
  353,  353,    0,    0,  207,  207,  207,  207,  207,  207,
  207,  207,  207,  207,  207,    0,  353,  353,    0,    0,
    0,    0,    0,    0,  207,    0,    0,    0,  296,  296,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  209,  209,  209,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  207,    0,    0,    0,    0,  209,  209,
  209,  209,  209,  209,  209,  209,  209,  209,  209,    0,
    0,    0,    0,    0,    0,    0,  297,  297,  209,  297,
  297,  297,  297,  297,  297,  297,  297,  390,  207,    0,
    0,    0,    0,    0,    0,    0,    0,  297,  297,  297,
  353,  297,  297,    0,    0,    0,    0,  209,    0,    0,
    0,    0,    0,    0,  241,  241,    0,    0,  241,  241,
  241,  241,  241,  241,  241,    0,    0,    0,    0,    0,
    0,    0,  297,  297,    0,  241,  241,  241,    0,  241,
  241,  390,  209,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  297,  297,    0,  296,  296,  296,    0,
  241,  241,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  296,  296,  296,  296,  296,  296,  296,
  296,  296,  296,  296,    0,    0,    0,    0,    0,    0,
    0,  241,  241,  296,  190,  190,    0,    0,  190,  190,
  190,  190,  190,  190,  190,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  190,  190,  190,    0,  190,
  190,    0,  296,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  644,  628,    0,    0,    0,  642,  639,
    0,  640,  641,  643,    0,    0,    0,    0,    0,    0,
  190,  190,    0,    0,    0,    0,  633,  296,  635,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  190,  190,    0,    0,    0,    0,  646,    0,    0,
  627,  297,  297,  297,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  297,  297,
  297,  297,  297,  297,  297,  297,  297,  297,  297,    0,
  626,    0,    0,    0,    0,    0,    0,    0,  297,  241,
  241,  241,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  241,  241,  241,  241,
  241,  241,  241,  241,  241,  241,  241,  297,    0,    0,
    0,    0,    0,    0,    0,    0,  241,    0,  354,    0,
    0,  354,    0,    0,  354,  305,  305,    0,    0,  305,
  305,  305,  305,  305,  305,  305,    0,    0,  354,  354,
    0,    0,  297,  354,    0,  241,  305,  305,  305,    0,
  305,  305,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  190,
  190,  190,    0,  354,  354,    0,    0,    0,    0,  391,
  241,  305,  305,    0,    0,    0,  190,  190,  190,  190,
  190,  190,  190,  190,  190,  190,  190,    0,    0,    0,
    0,    0,    0,    0,  354,    0,  190,    0,    0,    0,
    0,    0,  305,  305,    0,  315,  315,    0,    0,  315,
  315,  315,  315,  315,  315,  315,  625,  629,  630,  631,
  632,  634,  636,  637,  638,  190,  315,  315,  315,    0,
  315,  315,    0,    0,    0,  645,    0,    0,    0,    0,
    0,    0,    0,  261,  261,    0,    0,  261,  261,  261,
  261,  261,  261,  261,    0,    0,    0,    0,    0,  390,
  190,  315,  315,    0,  261,  261,  261,    0,  261,  261,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  315,  315,    0,    0,    0,  262,  262,  261,
  261,  262,  262,  262,  262,  262,  262,  262,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  262,  262,
  262,    0,  262,  262,    0,    0,    0,    0,    0,    0,
  261,  261,  354,  354,  354,    0,    0,    0,    0,    0,
  305,  305,  305,    0,    0,    0,    0,    0,    0,  354,
  354,    0,  217,  262,  262,  217,    0,  305,  305,  305,
  305,  305,  305,  305,  305,  305,  305,  305,    0,  217,
  217,    0,    0,    0,  217,    0,    0,  305,    0,    0,
    0,    0,    0,    0,  262,  262,  311,  311,    0,    0,
  311,  311,  311,  311,  311,  311,  311,    0,    0,    0,
    0,    0,    0,    0,  217,  217,  305,  311,  311,  311,
    0,  311,  311,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  315,  315,  315,  354,    0,  217,  217,    0,    0,    0,
    0,  305,  311,  311,    0,    0,    0,  315,  315,  315,
  315,  315,  315,  315,  315,  315,  315,  315,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  315,  261,  261,
  261,    0,    0,  311,  311,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  261,  261,  261,  261,  261,
  261,  261,  261,  261,  261,  261,  315,    0,    0,    0,
    0,    0,    0,    0,    0,  261,    0,  369,  369,    0,
    0,  369,  369,  369,  369,  369,  369,  369,    0,    0,
    0,    0,  262,  262,  262,    0,    0,    0,  369,  369,
  369,  315,  369,  369,  261,    0,    0,    0,    0,  262,
  262,  262,  262,  262,  262,  262,  262,  262,  262,  262,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  262,
    0,    0,    0,  369,  369,    0,    0,    0,    0,  261,
    0,    0,    0,  217,  217,  217,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  262,    0,
  217,  217,    0,    0,  369,  369,  227,  227,    0,    0,
  227,  227,  227,  227,  227,  227,  227,    0,    0,    0,
    0,  311,  311,  311,    0,    0,    0,  227,  227,  227,
    0,  227,  227,  262,    0,    0,    0,    0,  311,  311,
  311,  311,  311,  311,  311,  311,  311,  311,  311,  217,
    0,    0,    0,    0,    0,    0,    0,    0,  311,    0,
  228,  228,  227,  227,  228,  228,  228,  228,  228,  228,
  228,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  228,  228,  228,  217,  228,  228,  311,    0,    0,
    0,    0,    0,  227,  227,    0,    0,    0,  230,  230,
    0,    0,  230,  230,  230,  230,  230,  230,  230,    0,
    0,    0,    0,    0,    0,    0,  228,  228,    0,  230,
  230,  230,  311,  230,  230,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  369,  369,  369,    0,    0,  228,  228,    0,
    0,    0,    0,    0,  230,  230,    0,    0,    0,  369,
  369,  369,  369,  369,  369,  369,  369,  369,  369,  369,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  369,
    0,    0,    0,    0,    0,  230,  230,    0,  251,  251,
    0,    0,  251,  251,  251,  251,  251,  251,  251,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  369,  251,
  251,  251,    0,  251,  251,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  227,  227,  227,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  369,  251,  251,    0,    0,  227,  227,
  227,  227,  227,  227,  227,  227,  227,  227,  227,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  252,  252,  251,  251,  252,  252,  252,
  252,  252,  252,  252,    0,  228,  228,  228,    0,    0,
    0,    0,    0,    0,  252,  252,  252,  227,  252,  252,
    0,    0,  228,  228,  228,  228,  228,  228,  228,  228,
  228,  228,  228,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  230,  230,  230,    0,    0,    0,  252,
  252,    0,  227,    0,    0,    0,    0,    0,    0,    0,
  230,  230,  230,  230,  230,  230,  230,  230,  230,  230,
  230,  228,    0,    0,    0,    0,    0,    0,    0,    0,
  252,  252,  253,  253,    0,    0,  253,  253,  253,  253,
  253,  253,  253,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  253,  253,  253,  228,  253,  253,  230,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  254,  254,    0,    0,  254,  254,  254,  254,  254,  254,
  254,    0,    0,  251,  251,  251,    0,    0,  253,  253,
    0,  254,  254,  254,  230,  254,  254,    0,    0,    0,
  251,  251,  251,  251,  251,  251,  251,  251,  251,  251,
  251,    0,    0,    0,    0,    0,    0,    0,    0,  253,
  253,    0,    0,    0,    0,    0,  254,  254,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  251,
    0,    0,    0,    0,    0,  255,  255,  254,  254,  255,
  255,  255,  255,  255,  255,  255,    0,    0,  252,  252,
  252,    0,    0,    0,    0,    0,  255,  255,  255,    0,
  255,  255,    0,    0,  251,  252,  252,  252,  252,  252,
  252,  252,  252,  252,  252,  252,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  255,  255,    0,  256,  256,    0,    0,  256,  256,
  256,  256,  256,  256,  256,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  252,  256,  256,  256,    0,  256,
  256,    0,  255,  255,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  253,  253,  253,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  252,
  256,  256,    0,    0,  253,  253,  253,  253,  253,  253,
  253,  253,  253,  253,  253,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  254,  254,  254,    0,    0,
    0,  256,  256,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  254,  254,  254,  254,  254,  254,  254,  254,
  254,  254,  254,  253,    0,    0,    0,  257,  257,    0,
    0,  257,  257,  257,  257,  257,  257,  257,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  257,  257,
  257,    0,  257,  257,    0,    0,    0,    0,  253,    0,
    0,  254,    0,    0,  259,  259,    0,    0,  259,  259,
  259,  259,  259,  259,  259,    0,    0,    0,    0,    0,
  255,  255,  255,  257,  257,  259,  259,  259,    0,  259,
  259,    0,    0,    0,    0,    0,  254,  255,  255,  255,
  255,  255,  255,  255,  255,  255,  255,  255,    0,    0,
    0,    0,    0,    0,  257,  257,    0,    0,    0,    0,
  259,  259,  226,  226,    0,    0,  226,  226,  226,  226,
  226,  226,  226,    0,    0,    0,    0,    0,    0,  256,
  256,  256,    0,  226,  226,  226,  255,  226,  226,    0,
    0,  259,  259,    0,    0,    0,  256,  256,  256,  256,
  256,  256,  256,  256,  256,  256,  256,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  226,  226,
    0,  255,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  229,  229,    0,    0,  229,  229,  229,
  229,  229,  229,  229,    0,  256,    0,    0,    0,  226,
  226,    0,    0,    0,  229,  229,  229,    0,  229,  229,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  256,    0,    0,    0,    0,    0,    0,    0,    0,  229,
  229,    0,  257,  257,  257,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  257,
  257,  257,  257,  257,  257,  257,  257,  257,  257,  257,
  229,  229,    0,    0,    0,    0,    0,    0,    0,  259,
  259,  259,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  259,  259,  259,  259,
  259,  259,  259,  259,  259,  259,  259,    0,  257,  221,
  221,    0,    0,  221,  221,  221,  221,  221,  221,  221,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  221,  221,  221,    0,  221,  221,    0,  226,  226,  226,
    0,    0,    0,  257,    0,  259,    0,    0,    0,    0,
    0,    0,    0,    0,  226,  226,  226,  226,  226,  226,
  226,  226,  226,  226,  226,  221,  221,  222,  222,    0,
    0,  222,  222,  222,  222,  222,  222,  222,    0,    0,
  259,    0,    0,    0,    0,    0,    0,    0,  222,  222,
  222,    0,  222,  222,    0,    0,  221,  221,    0,    0,
    0,    0,    0,  226,    0,    0,    0,    0,  229,  229,
  229,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  222,  222,  229,  229,  229,  229,  229,
  229,  229,  229,  229,  229,  223,  223,    0,  226,  223,
  223,  223,  223,  223,  223,  223,    0,    0,    0,    0,
    0,    0,    0,    0,  222,  222,  223,  223,  223,    0,
  223,  223,  349,  349,    0,    0,  349,  349,  349,  349,
  349,  349,  349,    0,  229,    0,    0,    0,    0,    0,
    0,    0,    0,  349,  349,  349,    0,  349,  349,  350,
  350,  223,  223,  350,  350,  350,  350,  350,  350,  350,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  229,
  350,  350,  350,    0,  350,  350,    0,    0,  349,  349,
    0,    0,  223,  223,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  221,  221,  221,    0,    0,    0,
    0,    0,    0,    0,    0,  350,  350,    0,    0,  349,
    0,  221,  221,  221,  221,  221,  221,  221,  221,  221,
  221,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  350,    0,    0,    0,
  351,  351,    0,    0,  351,  351,  351,  351,  351,  351,
  351,    0,  222,  222,  222,    0,    0,    0,    0,    0,
  221,  351,  351,  351,    0,  351,  351,    0,    0,  222,
  222,  222,  222,  222,  222,  222,  222,  222,  222,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  221,  351,  351,    0,    0,
    0,    0,    0,  352,  352,    0,    0,  352,  352,  352,
  352,  352,  352,  352,    0,    0,    0,    0,  222,    0,
  223,  223,  223,    0,  352,  352,  352,  351,  352,  352,
    0,    0,    0,    0,    0,    0,    0,  223,  223,  223,
  223,  223,  223,  223,  223,  223,  223,  349,  349,  349,
    0,    0,    0,  222,    0,    0,    0,    0,    0,  352,
  352,    0,    0,    0,  349,  349,  349,  349,  349,  349,
  349,  349,  349,  349,  350,  350,  350,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  223,    0,    0,    0,
  352,  350,  350,  350,  350,  350,  350,  350,  350,  350,
  350,    0,    0,    0,    0,  343,  343,    0,    0,  343,
  343,  343,  343,  343,  343,  343,    0,    0,    0,    0,
    0,  223,    0,    0,    0,    0,  343,  343,  343,    0,
  343,  343,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  255,  239,    0,  349,    0,
  253,  250,    0,  251,  252,  254,    0,    0,    0,    0,
    0,  343,  343,    0,    0,  351,  351,  351,  244,    0,
  246,  234,    0,    0,    0,  350,    0,    0,    0,    0,
    0,    0,  351,  351,  351,  351,  351,  351,  351,  351,
  351,  351,  343,    0,    0,    0,    0,    0,    0,  344,
  344,    0,  238,  344,  344,  344,  344,  344,  344,  344,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  344,  344,  344,    0,  344,  344,    0,    0,  352,  352,
  352,    0,  237,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  352,  352,  352,  352,  352,
  352,  352,  352,  352,  352,  344,  344,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  351,    0,    0,    0,
  345,  345,    0,    0,  345,  345,  345,  345,  345,  345,
  345,    0,    0,    0,    0,    0,  344,    0,    0,    0,
    0,  345,  345,  345,    0,  345,  345,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  348,  348,    0,    0,  348,  348,  348,  348,
  348,  348,  348,    0,    0,    0,  345,  345,    0,  352,
  343,  343,  343,  348,  348,  348,    0,  348,  348,    0,
    0,    0,    0,    0,    0,    0,    0,  343,  343,  343,
  343,  343,  343,  343,  343,  343,  343,  345,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  348,  348,
  231,  232,  233,    0,    0,  255,  239,    0,    0,    0,
  253,  250,    0,  251,  252,  254,    0,  235,  236,  240,
  241,  242,  243,  245,  247,  248,  249,  256,  244,  348,
  246,  234,    0,    0,  644,  628,    0,  257,    0,  642,
  639,    0,  640,  641,  643,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  344,  344,  344,  633,    0,  635,
  623,  343,  238,    0,    0,    0,    0,    0,    0,    0,
    0,  344,  344,  344,  344,  344,  344,  344,  344,  344,
  344,    0,    0,    0,    0,    0,    0,    0,  646,    0,
    0,  627,  237,    0,    0,    0,    0,    0,    0,    0,
    0,  295,    0,    0,    0,    0,    0,    0,  219,    0,
    0,  219,    0,  219,  219,  219,  219,    0,    0,    0,
    0,  626,    0,    0,    0,  345,  345,  345,  219,  219,
  219,    0,  219,  219,    0,    0,    0,    0,    0,    0,
    0,    0,  345,  345,  345,  345,  345,  345,  345,  345,
  345,  345,    0,    0,    0,  344,    0,    0,    0,    0,
    0,    0,    0,  219,  219,    0,    0,  348,  348,  348,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  348,  348,  348,  348,  348,  348,
  348,  348,  348,  348,  219,  219,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  220,    0,    0,  220,    0,  220,
  220,  220,  220,    0,    0,    0,  345,    0,    0,    0,
  231,  232,  233,    0,  220,  220,  220,    0,  220,  220,
    0,    0,    0,    0,    0,    0,    0,  235,  236,  240,
  241,  242,  243,  245,  247,  248,  249,  256,    0,  620,
  621,  622,    0,    0,    0,    0,    0,  257,  348,  220,
  220,    0,    0,    0,    0,    0,  624,  625,  629,  630,
  631,  632,  634,  636,  637,  638,  218,    0,    0,  218,
    0,  218,  218,  218,  218,    0,  645,    0,    0,    0,
  220,  220,    0,    0,    0,    0,  218,  218,  218,    0,
  218,  218,    0,    0,    0,    0,    0,    0,    0,    0,
  255,  239,    0,    0,    0,  253,  250,    0,  251,  252,
  254,  299,  219,  219,  219,    0,    0,    0,    0,    0,
    0,  218,  218,  244,    0,  246,    0,    0,    0,  219,
  219,  219,  219,  219,  219,  219,  219,  219,  219,  341,
  708,    0,  341,    0,  341,  341,  341,  341,    0,    0,
    0,    0,  218,  218,    0,    0,    0,  238,    0,  341,
  341,  341,    0,  341,  341,    0,    0,    0,  342,    0,
    0,  342,    0,  342,  342,  342,  342,    0,  219,    0,
    0,    0,    0,    0,    0,    0,    0,  237,  342,  342,
  342,    0,  342,  342,  341,  341,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  340,
    0,    0,  340,  219,  340,  340,  340,  340,  220,  220,
  220,    0,    0,  342,  342,  341,    0,    0,    0,  340,
  340,  340,    0,  340,  340,  220,  220,  220,  220,  220,
  220,  220,  220,  220,  220,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  342,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  340,  340,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  225,    0,    0,  225,  220,    0,  225,    0,    0,    0,
  218,  218,  218,    0,    0,  340,    0,    0,    0,    0,
  225,  225,  225,    0,  225,  225,    0,  218,  218,  218,
  218,  218,  218,  218,  218,  218,  218,  346,    0,  220,
  346,    0,    0,  346,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  225,  225,  346,  346,  346,
    0,  346,  346,  236,  240,  241,  242,  243,  245,  247,
  248,  249,  256,    0,    0,    0,  218,    0,    0,    0,
    0,    0,  257,  341,  341,  341,  225,  225,    0,    0,
    0,    0,  346,  346,    0,    0,    0,    0,    0,    0,
  341,  341,  341,  341,  341,  341,  341,  341,  341,  341,
    0,  218,  342,  342,  342,    0,    0,    0,    0,    0,
    0,    0,    0,  346,    0,    0,    0,    0,    0,  342,
  342,  342,  342,  342,  342,  342,  342,  342,  342,    0,
    0,  347,    0,    0,  347,    0,    0,  347,    0,    0,
    0,    0,    0,  340,  340,  340,    0,    0,    0,    0,
    0,  347,  347,  347,    0,  347,  347,    0,    0,    0,
  340,  340,  340,  340,  340,  340,  340,  340,  340,  340,
  255,  239,    0,    0,  341,  253,  250,    0,  251,  252,
  254,    0,    0,    0,    0,    0,  347,  347,    0,    0,
    0,    0,    0,  244,    0,  246,  234,    0,    0,    0,
    0,    0,    0,  342,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  225,  225,  225,  347,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  238,    0,    0,
    0,  225,  225,  225,  225,  225,  225,  225,  225,  225,
  225,    0,    0,    0,  340,    0,    0,    0,    0,    0,
    0,  346,  346,  346,    0,    0,    0,  237,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  346,  346,
  346,  346,  346,  346,  346,  346,  346,  346,  255,  239,
  225,    0,    0,  253,  250,    0,  251,  252,  254,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  698,
  699,  244,    0,  246,  234,    0,    0,    0,    0,    0,
    0,  255,  239,    0,    0,  225,  253,  250,    0,  251,
  252,  254,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  258,  244,  238,  246,  234,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  346,    0,    0,  347,  347,  347,    0,    0,
    0,    0,    0,    0,    0,  237,    0,    0,  238,    0,
    0,    0,  347,  347,  347,  347,  347,  347,  347,  347,
  347,  347,  255,  239,    0,    0,    0,  253,  250,    0,
  251,  252,  254,    0,    0,  231,  232,  233,  237,    0,
    0,    0,    0,    0,  330,  244,    0,  246,  234,    0,
    0,    0,  235,  236,  240,  241,  242,  243,  245,  247,
  248,  249,  256,    0,    0,  255,  239,    0,    0,    0,
  253,  250,  257,  251,  252,  254,    0,    0,    0,  238,
    0,    0,    0,    0,    0,    0,    0,  331,  244,    0,
  246,  234,    0,    0,  255,  239,  347,    0,    0,  253,
  250,  483,  251,  252,  254,    0,    0,    0,    0,  237,
    0,    0,    0,    0,    0,    0,  338,  244,    0,  246,
  234,    0,  238,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  255,  239,    0,    0,    0,  253,  250,    0,
  251,  252,  254,  231,  232,  233,    0,    0,    0,    0,
    0,  238,  237,    0,  340,  244,    0,  246,  234,    0,
  235,  236,  240,  241,  242,  243,  245,  247,  248,  249,
  256,    0,    0,    0,    0,    0,  231,  232,  233,    0,
  257,  237,    0,    0,    0,    0,    0,    0,    0,  238,
    0,    0,    0,  235,  236,  240,  241,  242,  243,  245,
  247,  248,  249,  256,    0,    0,  255,  239,    0,    0,
  387,  253,  250,  257,  251,  252,  254,    0,    0,  237,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  244,
    0,  246,  234,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  231,  232,  233,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  238,  235,  236,  240,  241,  242,  243,
  245,  247,  248,  249,  256,    0,    0,  255,  239,    0,
    0,  528,  253,  250,  257,  251,  252,  254,    0,    0,
  231,  232,  233,  237,    0,    0,    0,    0,    0,    0,
  244,    0,  246,  234,    0,    0,    0,  235,  236,  240,
  241,  242,  243,  245,  247,  248,  249,  256,    0,  231,
  232,  233,    0,    0,    0,    0,    0,  257,    0,    0,
    0,    0,    0,    0,  238,    0,  235,  236,  240,  241,
  242,  243,  245,  247,  248,  249,  256,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  257,  231,  232,  233,
    0,    0,    0,    0,  237,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  235,  236,  240,  241,  242,  243,
  245,  247,  248,  249,  256,    0,    0,  255,  239,    0,
    0,    0,  253,  250,  257,  251,  252,  254,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  244,    0,  246,  234,    0,    0,    0,    0,    0,    0,
  255,  239,    0,    0,    0,  253,  250,    0,  251,  252,
  254,  231,  232,  233,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  244,  238,  246,  234,    0,  235,  236,
  240,  241,  242,  243,  245,  247,  248,  249,  256,    0,
    0,  255,  239,    0,    0,    0,  253,  250,  257,  251,
  252,  254,    0,    0,  237,  543,    0,  238,    0,    0,
    0,    0,  550,    0,  244,    0,  246,  234,    0,  255,
  239,    0,    0,    0,  253,  250,    0,  251,  252,  254,
    0,    0,  231,  232,  233,    0,    0,  237,  548,    0,
    0,    0,  244,    0,  246,  234,    0,    0,  238,  235,
  236,  240,  241,  242,  243,  245,  247,  248,  249,  256,
    0,    0,  255,  239,    0,    0,    0,  253,  250,  257,
  251,  252,  254,    0,    0,    0,  238,    0,  237,    0,
    0,    0,    0,    0,    0,  244,    0,  246,  234,    0,
    0,    0,    0,    0,    0,  255,  239,    0,    0,    0,
  253,  250,    0,  251,  252,  254,  237,  570,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  244,  238,
  246,  234,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  231,  232,  233,    0,    0,    0,    0,  237,
  572,    0,  238,    0,    0,    0,    0,    0,    0,  235,
  236,  240,  241,  242,  243,  245,  247,  248,  249,  256,
    0,    0,    0,    0,    0,  231,  232,  233,    0,  257,
    0,    0,  237,  577,    0,    0,    0,    0,    0,    0,
    0,    0,  235,  236,  240,  241,  242,  243,  245,  247,
  248,  249,  256,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  257,    0,    0,    0,  231,  232,  233,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  235,  236,  240,  241,  242,  243,  245,
  247,  248,  249,  256,  231,  232,  233,    0,    0,    0,
    0,    0,    0,  257,    0,    0,    0,    0,    0,    0,
    0,  235,  236,  240,  241,  242,  243,  245,  247,  248,
  249,  256,    0,    0,  255,  239,    0,    0,    0,  253,
  250,  257,  251,  252,  254,    0,    0,  231,  232,  233,
    0,    0,    0,    0,    0,    0,    0,  244,    0,  246,
  234,    0,    0,    0,  235,  236,  240,  241,  242,  243,
  245,  247,  248,  249,  256,    0,    0,    0,    0,    0,
  231,  232,  233,    0,  257,    0,    0,    0,    0,    0,
    0,  238,    0,    0,    0,    0,    0,  235,  236,  240,
  241,  242,  243,  245,  247,  248,  249,  256,    0,    0,
  255,  239,    0,    0,    0,  253,  250,  257,  251,  252,
  254,  237,  580,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  244,    0,  246,  234,    0,  255,  239,
    0,    0,    0,  253,  250,    0,  251,  252,  254,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  244,    0,  246,  234,    0,    0,  238,    0,    0,
    0,    0,    0,    0,    0,    0,  255,  239,    0,    0,
    0,  253,  250,    0,  251,  252,  254,    0,    0,    0,
    0,    0,    0,    0,    0,  238,    0,  237,  650,  244,
    0,  246,  234,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  644,  628,    0,    0,  713,  642,
  639,    0,  640,  641,  643,  237,  680,    0,    0,    0,
    0,    0,    0,  238,    0,    0,    0,  633,    0,  635,
  623,    0,    0,    0,    0,    0,    0,  255,  239,    0,
    0,    0,  253,  250,    0,  251,  252,  254,    0,  231,
  232,  233,    0,  237,  682,    0,    0,    0,  646,    0,
  244,  627,  246,  234,    0,    0,  235,  236,  240,  241,
  242,  243,  245,  247,  248,  249,  256,    0,    0,  255,
  239,    0,    0,    0,  253,  250,  257,  251,  252,  254,
    0,  626,    0,  758,  238,    0,    0,    0,    0,    0,
    0,    0,  244,    0,  246,  234,    0,  644,  628,    0,
    0,    0,  642,  639,    0,  640,  641,  643,    0,    0,
    0,    0,    0,    0,  237,  231,  232,  233,  785,    0,
  633,    0,  635,  623,    0,    0,  238,    0,    0,    0,
    0,    0,  235,  236,  240,  241,  242,  243,  245,  247,
  248,  249,  256,  231,  232,  233,    0,    0,    0,    0,
    0,  646,  257,    0,  627,    0,  237,  762,    0,    0,
  235,  236,  240,  241,  242,  243,  245,  247,  248,  249,
  256,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  257,  231,  232,  233,  626,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  235,  236,
  240,  241,  242,  243,  245,  247,  248,  249,  256,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  257,  620,
  621,  622,    0,  255,  239,    0,    0,    0,  253,  250,
    0,  251,  252,  254,    0,    0,  624,  625,  629,  630,
  631,  632,  634,  636,  637,  638,  244,    0,  246,  234,
    0,    0,  231,  232,  233,    0,  645,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  235,
  236,  240,  241,  242,  243,  245,  247,  248,  249,  256,
  238,  265,  265,    0,    0,  265,  265,    0,  265,  257,
  265,  265,    0,    0,  231,  232,  233,    0,    0,    0,
    0,    0,    0,  265,  265,    0,  265,  265,    0,    0,
  237,  235,  236,  240,  241,  242,  243,  245,  247,  248,
  249,  256,  620,  621,  622,    0,    0,  644,  628,    0,
    0,  257,  642,  639,    0,  640,  641,  643,  265,  624,
  625,  629,  630,  631,  632,  634,  636,  637,  638,    0,
  633,    0,  635,  623,    0,    0,    0,    0,    0,  645,
    0,    0,    0,    0,    0,  644,  628,    0,  265,    0,
  642,  639,    0,  640,  641,  643,    0,    0,    0,    0,
    0,  646,    0,  786,  627,    0,    0,    0,  633,    0,
  635,  623,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  192,  192,    0,    0,    0,  192,  192,
    0,  192,  192,  192,  626,    0,    0,    0,    0,  646,
    0,    0,  627,    0,    0,    0,  192,    0,  192,  192,
  255,  239,    0,    0,    0,  253,  250,    0,  251,  252,
  254,    0,    0,    0,    0,    0,    0,    0,  231,  232,
  233,    0,  626,  244,    0,  246,  234,    0,    0,    0,
  192,    0,    0,    0,    0,  235,  236,  240,  241,  242,
  243,  245,  247,  248,  249,  256,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  257,    0,  238,    0,    0,
  192,    0,    0,  644,  628,    0,    0,    0,  642,  639,
    0,  640,  641,  643,    0,    0,  265,  265,  265,    0,
    0,    0,    0,    0,    0,    0,  633,  237,  635,  623,
    0,    0,    0,  265,  265,  265,  265,  265,  265,  265,
  265,  265,  265,  265,    0,    0,  255,  239,    0,    0,
    0,  253,  250,  265,  251,  252,  254,  646,    0,    0,
  627,    0,  620,  621,  622,    0,    0,    0,    0,  244,
    0,  246,  234,    0,    0,    0,    0,    0,    0,  624,
  625,  629,  630,  631,  632,  634,  636,  637,  638,    0,
  626,    0,    0,    0,    0,    0,    0,    0,    0,  645,
  620,  621,  622,  238,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  624,  625,  629,
  630,  631,  632,  634,  636,  637,  638,    0,    0,    0,
    0,    0,    0,  237,    0,    0,    0,  645,  192,  192,
  192,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  192,  192,  192,  192,  192,
  192,  192,  192,  192,  192,  192,  232,  233,    0,    0,
    0,  644,  628,    0,    0,  192,  642,  639,    0,  640,
  641,  643,  235,  236,  240,  241,  242,  243,  245,  247,
  248,  249,  256,    0,  633,    0,  635,  623,  255,  239,
    0,    0,  257,  253,  250,    0,  251,  252,  254,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  244,    0,  246,  234,  646,    0,    0,  627,  621,
  622,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  624,  625,  629,  630,  631,
  632,  634,  636,  637,  638,  238,    0,    0,  626,    0,
    0,  644,  628,    0,    0,  645,  642,  639,    0,  640,
  641,  643,    0,  233,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  633,  237,  635,  623,  235,  236,
  240,  241,  242,  243,  245,  247,  248,  249,  256,    0,
    0,  255,  239,    0,    0,    0,  253,  250,  257,  251,
  252,  254,    0,    0,    0,  646,    0,    0,  627,    0,
    0,    0,  644,  628,  244,    0,  246,  642,  639,    0,
  640,  641,  643,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  633,    0,  635,  626,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  238,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  255,  239,    0,    0,  646,  253,  250,  627,
  251,  252,  254,    0,    0,    0,    0,    0,  237,    0,
    0,    0,    0,    0,    0,  244,    0,  246,  622,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  626,
    0,    0,    0,  624,  625,  629,  630,  631,  632,  634,
  636,  637,  638,    0,    0,    0,    0,    0,    0,  238,
    0,    0,    0,  645,    0,    0,    0,    0,    0,    0,
  235,  236,  240,  241,  242,  243,  245,  247,  248,  249,
  256,    0,    0,    0,    0,    0,    0,    0,    0,  237,
  257,    0,    0,    0,    0,    0,    0,  644,  628,    0,
    0,    0,  642,  639,    0,  640,  641,  643,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  633,    0,  635,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  624,  625,  629,  630,  631,  632,  634,
  636,  637,  638,    0,    0,    0,    0,    0,    0,    0,
    0,  646,    0,  645,  627,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  235,  236,  240,  241,  242,  243,  245,
  247,  248,  249,  256,  626,    0,    0,    0,    0,    0,
    0,    0,    0,  257,  624,  625,  629,  630,  631,  632,
  634,  636,  637,  638,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  645,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  240,  241,  242,  243,
  245,  247,  248,  249,  256,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  257,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  629,  630,  631,  632,  634,  636,  637,  638,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  645,
};
}
static short yycheck[];
static { yycheck(); }
static void yycheck() {
yycheck = new short[] {                         14,
   15,   14,   15,    2,   38,    2,    2,  205,   78,  491,
   25,   36,   25,   40,    5,   40,   99,  100,  559,   36,
   91,   45,  105,   40,   36,   41,   38,   38,   40,   77,
   41,   59,  123,   36,   41,  123,   27,   28,  215,   41,
   36,  523,   44,   36,   91,   34,   37,   40,   36,   41,
   41,   91,   44,  668,   91,   36,  482,   36,   36,   40,
  532,   71,   36,  146,   25,  309,   58,   59,   36,   14,
   15,   63,  125,   44,   59,   40,  123,   41,  311,  127,
   44,   41,   41,  125,   44,   44,  123,  111,   59,   41,
   44,   34,   44,   41,   58,   59,   44,   91,  123,   58,
   59,   93,   94,  316,   63,   59,   58,   59,   25,   25,
   59,   63,   33,   41,  655,   41,   44,   41,   44,   40,
  123,   40,   43,  311,   45,  140,   58,  140,  309,   93,
   58,   59,  124,   93,   93,  123,   44,   58,  123,   41,
  384,   93,   44,  387,  123,   93,   41,  311,   40,   44,
   41,   59,  123,   96,  309,  388,   58,   59,   25,   58,
   41,  125,  158,   44,   40,   93,  125,  380,  164,   93,
   91,  195,  336,  125,  123,  185,  191,   40,  191,   37,
   50,  336,  337,  328,   42,  200,  201,  200,  201,   47,
  205,   93,  205,  381,  382,  140,  211,  125,  211,   91,
  125,   71,   93,  380,   74,  126,  387,  679,   91,   41,
   41,   78,   44,   44,   91,  123,  309,   41,  309,  181,
   44,  291,   41,  125,  123,   44,   58,   59,   40,  311,
   36,  123,  387,   91,   58,   59,  851,  307,  383,  309,
  123,  256,  387,  256,   36,   41,  191,   37,  125,   38,
   41,  328,   42,   44,  336,  200,  201,   47,   40,  299,
  205,   93,   93,   59,  690,   41,  211,   58,   59,   93,
  262,  263,  264,  361,   93,  123,  125,  311,  331,  332,
  309,  309,  309,   59,  309,  483,  311,  279,  280,  331,
  332,  362,  309,  125,  311,  256,  387,  309,  262,  311,
  311,  125,   93,  262,  263,  264,  309,  300,  311,  850,
  262,  263,  264,  183,  184,  185,  309,  123,  311,  334,
  335,  346,  311,  311,   41,  362,  317,  316,  309,  346,
  311,  123,  311,  311,  346,  533,  351,  311,  357,  256,
  256,  309,   59,  311,  214,  360,  362,  364,   44,  311,
   40,  125,  364,  346,  388,  362,  318,  328,   40,  384,
  362,  843,  387,   59,  328,  346,  449,  384,  311,  328,
  387,  363,  384,  316,  422,  387,  328,  388,  346,  378,
  463,  378,  378,  453,  309,  468,  307,  308,  309,  256,
  309,  384,  381,  382,  387,  309,  317,   40,   44,  363,
  328,  357,  362,  384,  363,   44,  387,  422,  362,  422,
  487,  363,  489,   59,  362,  309,  384,  289,  335,  387,
   59,  436,  309,  436,  291,  346,  328,  299,  443,  309,
  262,  263,  264,   40,  351,  363,  362,  380,  381,  382,
  307,  299,  309,  357,  365,   40,  367,  368,  369,  370,
  371,  372,  311,  387,  469,  311,  469,  125,  379,  384,
  316,  363,  387,  384,  385,  386,  387,  362,  483,  484,
  483,  262,  263,  264,  498,  345,  491,  422,  365,  366,
  309,  362,  331,  332,  499,  500,  501,  502,  503,   59,
  486,  436,  507,  304,  305,  693,  328,  384,   44,  289,
  387,   77,   40,  309,  328,  311,  304,  305,  523,  299,
  525,   41,  525,   59,   44,   58,   59,  309,  533,  311,
  533,  380,  381,  382,  469,  381,  382,   61,   58,   59,
  311,  363,  309,   63,  309,  316,  311,  312,  483,  363,
  116,   91,   41,   41,  559,   44,   44,  546,  383,  546,
  546,  357,   41,  340,  341,   44,  330,  331,  332,   41,
   58,   59,   44,   93,   91,   63,   44,  484,  311,   58,
   59,   91,  363,  316,  589,   41,  589,   59,   44,  155,
  525,   59,  499,  500,  501,  502,  503,  583,  533,   91,
  507,  582,  607,   59,   93,   93,  307,  680,  309,  380,
  381,  382,  617,  362,   93,  620,  621,  622,  623,  624,
  625,  626,  627,  628,  629,  630,  631,  632,  633,  634,
  635,  636,  637,  638,  639,  640,  641,  642,  643,  644,
  645,  646,   41,  595,  336,   44,  125,  380,  381,  382,
  655,  387,   44,  299,  589,  279,  280,  281,  300,   58,
   59,  285,   44,  287,  669,  383,  290,   59,  292,   44,
   37,   44,  330,  331,  332,   42,   43,   59,   45,   46,
   47,   44,  306,   44,   59,   44,   59,   44,  693,   41,
  693,   93,   44,   60,   93,   62,   59,  362,   59,  383,
   59,  687,  683,  708,   41,  710,  692,   44,   41,  275,
  617,   44,  717,  620,  621,  622,  623,  624,  625,  626,
  627,  628,  629,  630,  631,  632,  633,  634,  635,  636,
  637,  638,  639,  640,  641,  642,  643,  644,  645,  646,
  754,   93,  262,  263,  264,  125,    3,    4,  700,    6,
    7,    8,    9,   10,   11,   12,   13,  309,  693,   16,
   17,   18,   19,   20,   21,   22,   23,   24,   41,   26,
   41,   44,   44,   44,  262,  263,  264,  320,   35,  309,
  785,   33,  787,  262,  263,   42,   43,   59,   40,  794,
   47,   43,   49,   45,  346,  347,  348,  349,  350,  351,
   59,  708,   41,  710,   41,   44,   61,   44,  813,   44,
  717,  208,  764,  818,   44,  212,  768,  803,   44,  805,
   77,   58,   59,  775,   59,  777,  328,  779,  225,   59,
  227,  228,  229,   59,   41,   44,  788,   44,  843,   91,
   61,  311,  123,  363,   41,  850,  316,   44,  800,  328,
   59,   41,  183,  184,   44,   41,   93,   41,   44,  116,
   44,   38,  360,  262,   41,  817,   41,   44,   41,   44,
   41,  823,   58,   59,  126,  363,   41,   63,  785,   44,
  311,   58,   59,   96,  363,  316,   63,  794,  309,   41,
   40,   37,   44,   58,   59,  360,   42,   43,  155,   45,
   46,   47,  854,  160,   41,   93,  813,   93,  165,  166,
   41,  381,  382,   44,   59,  867,   93,   94,  285,  286,
  287,  288,  289,  547,  330,  331,  332,   44,   93,  330,
  331,  332,  299,  346,  347,  348,  349,  350,  351,  330,
  331,  332,  335,   79,   80,  202,   61,  124,  125,  206,
  381,  382,   59,  210,  304,  305,  306,  337,  351,   59,
  125,   40,  328,  343,  363,  222,  346,  347,  348,  349,
  350,  351,  352,  309,  231,  232,  233,  234,  235,  236,
  237,  238,  239,  240,  241,  242,  243,  244,  245,  246,
  247,  248,  249,  250,  251,  252,  253,  254,  255,   40,
  257,  311,  123,  260,  261,  262,  263,  264,  265,  266,
  267,  268,  269,  270,  271,  272,   41,  309,  275,  125,
   91,  278,  279,  280,  281,  262,  263,   41,  285,  286,
  287,  288,  361,  290,   93,  292,  293,   93,  295,  304,
  305,  306,  299,   93,  301,   93,   93,   93,   93,  306,
   93,  308,  125,   59,   41,  307,  308,  309,  315,   44,
   40,  383,  309,   59,   93,  317,   44,   59,  123,  123,
   59,   41,   41,  363,   44,   59,  262,  263,  264,   41,
  343,  388,   93,   44,  380,  262,  263,  264,   58,   59,
  347,  484,   41,  279,  346,  311,  336,  262,  263,  264,
   93,   58,  279,  280,  306,   59,  499,  500,  501,  502,
  503,  123,   40,  365,  507,  367,  368,  369,  370,  371,
  372,  123,  311,   93,   41,   40,  363,  379,  123,   61,
   59,  125,  384,  385,  386,  387,   37,   38,   58,   40,
  397,   42,   43,  289,   45,   46,   47,   41,   41,   59,
   61,  328,  123,  299,  335,  125,  309,  311,   59,   60,
  311,   62,   63,  328,   40,  383,   37,   38,   59,   41,
  351,   42,   43,  328,   45,   46,   47,  363,  344,  123,
  437,  309,   41,    0,   59,   59,  363,   93,  383,   60,
   59,   62,   96,   94,   40,  452,  383,   93,  363,   59,
  123,   41,  362,  362,  461,  123,   96,   37,   96,   93,
   41,   93,   42,   43,  336,   45,   46,   47,  123,  306,
  123,  311,   41,  124,  617,  482,  123,  620,  621,  622,
  623,  624,  625,  626,  627,  628,  629,  630,  631,  632,
  633,  634,  635,  636,  637,  638,  639,  640,  641,  642,
  643,  644,  645,  646,   41,  306,  309,   37,  328,  311,
  654,   91,   42,   43,  337,   45,   46,   47,  345,  336,
  343,   35,  697,  346,  347,  348,  349,  350,  351,  352,
   38,  693,  201,   41,  541,  485,   44,  805,  607,   41,
  547,   38,   44,  550,   41,  556,  353,   44,  795,  556,
   58,   59,  748,  484,  256,   63,   58,   59,  206,  566,
  349,   58,   59,  647,  830,  708,   63,  710,  499,  500,
  501,  502,  617,  710,  717,  533,  507,  615,  301,   -1,
   -1,   -1,   -1,   -1,   -1,   93,   94,   -1,   -1,   38,
   -1,   93,   41,  600,   -1,   44,   93,   94,   -1,   -1,
   -1,   -1,   41,   -1,   -1,   44,   -1,   -1,  328,   58,
   59,  262,  263,  264,   63,   -1,  124,  125,   -1,   58,
   59,   -1,   -1,  125,   -1,   -1,   -1,  124,  279,  280,
  281,  282,  283,  284,  285,  286,  287,  288,  289,   -1,
   -1,   -1,  785,  363,   93,   94,   -1,   -1,  299,   -1,
   -1,  794,   -1,   -1,   93,   -1,   -1,   -1,   -1,   -1,
  281,  282,  283,  284,  285,  286,  287,  288,  289,   -1,
  813,   -1,   -1,   -1,   -1,  124,  125,   -1,  299,   -1,
   -1,   -1,   -1,  690,    0,  125,  125,   -1,   -1,  620,
  621,  622,  623,  624,  625,  626,  627,  628,  629,  630,
  631,  632,  633,  634,  635,  636,  637,  638,  639,  640,
  641,  642,  643,  644,  645,  646,   -1,   33,   34,  299,
   36,   -1,   -1,   -1,   40,   -1,   -1,   43,   -1,   45,
   -1,   -1,  383,   -1,   -1,   -1,  387,   -1,   -1,   -1,
   -1,   -1,   -1,   59,   -1,   -1,   -1,   -1,   64,   -1,
   -1,   -1,   -1,   -1,  262,  263,  264,  287,  288,  289,
  262,  263,  264,   -1,   -1,  262,  263,  264,   -1,  299,
   -1,  279,  280,   -1,   -1,   91,   -1,  708,   -1,   -1,
   96,   -1,  279,  280,   37,   -1,  717,   -1,   -1,   42,
   43,   -1,   45,   46,   47,   -1,   -1,   -1,   -1,   -1,
    0,   -1,   -1,   -1,   -1,   -1,   -1,  123,   -1,  125,
  126,   -1,   -1,  262,  263,  264,   -1,   -1,   -1,   -1,
  328,   -1,   -1,  262,  263,  264,  328,   -1,   -1,   -1,
  279,  280,   -1,   33,   34,   -1,   36,   -1,   91,   -1,
   40,   -1,   -1,   43,   -1,   45,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   41,  785,  363,   44,   -1,   -1,   59,
   -1,  363,   -1,  794,   64,   -1,  363,   -1,   -1,   -1,
   58,   59,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  328,
   -1,   -1,  813,   -1,   -1,   -1,   -1,   -1,   -1,  328,
   -1,   91,   -1,   -1,   -1,   -1,   96,  337,   -1,   -1,
   -1,   -1,   -1,  343,   -1,   93,  346,  347,  348,  349,
  350,  351,  352,   -1,  363,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  123,  363,  125,  126,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  125,   -1,   -1,
   -1,  257,  258,  259,  260,  261,   -1,   -1,   -1,  265,
  266,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  290,  291,  292,  293,  294,  295,
  296,  297,  298,   -1,  300,  301,  302,  303,  304,  305,
  306,  307,  308,  309,   -1,  311,   -1,  313,   -1,   -1,
   -1,  317,  318,  319,  320,  321,  322,  323,  324,  325,
  326,  327,   -1,  329,  330,  331,  332,  333,  334,  335,
  336,  337,  338,  339,   61,   -1,  342,  343,   -1,  345,
  346,  347,  348,   -1,  287,  288,   -1,  353,  354,  355,
  356,  357,  358,  359,   -1,   -1,  299,   -1,  364,  365,
   -1,  367,  368,  369,  370,  371,  372,  257,  258,  259,
  260,  261,   -1,  379,   -1,  265,  266,   -1,  384,  385,
  386,  387,   -1,   -1,  262,  263,  264,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  290,  291,  292,  293,  294,  295,  296,  297,  298,   -1,
  300,  301,  302,  303,   -1,   -1,  306,  307,  308,  309,
   -1,  311,   -1,  313,   -1,   -1,   -1,  317,  318,  319,
  320,  321,  322,  323,  324,  325,  326,  327,   -1,  329,
  330,  331,  332,  333,  334,  335,  336,  337,  338,  339,
  328,   -1,  342,  343,   -1,  345,  346,  347,  348,   -1,
   -1,   -1,   -1,  353,  354,  355,  356,  357,  358,  359,
   41,   -1,   -1,   44,  364,  365,   -1,  367,  368,  369,
  370,  371,  372,   -1,   -1,  363,   -1,   58,   59,  379,
   -1,   -1,   63,   -1,  384,  385,  386,  387,   33,   34,
   -1,   36,   -1,   38,   -1,   40,   41,   -1,   43,   -1,
   45,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   93,   -1,   -1,   -1,   -1,   -1,   -1,   64,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  267,  268,  269,  270,  271,  272,  273,  274,  275,  276,
  277,  278,   -1,  124,   -1,   -1,   91,   -1,   -1,   -1,
   -1,   96,   -1,  290,  291,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   38,   -1,   -1,   41,   -1,   -1,   44,   -1,
   38,   -1,   -1,   41,   -1,   -1,   44,   -1,   -1,   -1,
   -1,  126,   58,   59,   -1,   -1,   -1,   63,   -1,   -1,
   58,   59,   -1,   -1,   -1,   63,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   33,   34,   -1,   36,   -1,   38,
   -1,   40,   -1,   -1,   43,   -1,   45,   93,   94,   -1,
   -1,   -1,   -1,   -1,   -1,   93,   94,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   64,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  124,  125,
   -1,   -1,   -1,   -1,   -1,   -1,  124,  125,   -1,   -1,
   -1,   -1,   91,   -1,   -1,   -1,   -1,   96,   38,   -1,
   -1,   41,   -1,   -1,   44,   -1,   -1,   -1,   -1,   -1,
   -1,  262,  263,  264,   -1,   -1,   -1,   -1,   58,   59,
   -1,   -1,   -1,   63,   -1,   -1,   -1,  126,  279,  280,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   41,   -1,
   -1,   44,  257,  258,  259,  260,  261,   -1,   -1,   -1,
  265,  266,   -1,   93,   94,   58,   59,   -1,   -1,   -1,
   63,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  290,  291,  292,  293,  294,
  295,  296,  297,  298,  124,  300,  301,  302,   33,   34,
   93,   36,  307,  308,  309,   40,  311,   -1,   43,   -1,
   45,   -1,  317,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  363,   -1,   59,   -1,  262,  263,  264,   64,
   -1,  336,  125,   -1,  262,  263,  264,   -1,   -1,   -1,
   -1,  346,   -1,  279,  280,  281,  282,  283,  284,  354,
  355,  279,  280,   -1,   -1,   -1,   91,   -1,   -1,  364,
  365,   96,  367,  368,  369,  370,  371,  372,  257,  258,
  259,  260,  261,   -1,  379,   -1,  265,  266,   -1,  384,
  385,  386,  387,  388,   -1,   -1,   -1,   -1,  123,   -1,
  125,  126,  328,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  328,  290,  291,  292,  293,  294,  295,  296,  297,  298,
   -1,  300,  301,  302,   33,   34,   -1,   36,  307,  308,
  309,   40,  311,   -1,   43,   -1,   45,  363,  317,   -1,
   -1,   -1,  262,  263,  264,  363,   -1,   -1,   -1,   -1,
   59,   -1,   -1,   -1,   -1,   64,   -1,  336,   -1,  279,
  280,  281,  282,  283,  284,   -1,   -1,  346,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  354,  355,   -1,   -1,  262,
  263,  264,   91,   -1,   -1,  364,  365,   96,  367,  368,
  369,  370,  371,  372,   -1,   -1,  279,  280,   -1,   -1,
  379,   -1,   -1,   -1,   -1,  384,  385,  386,  387,  388,
   -1,   -1,   -1,   -1,  123,   -1,  125,  126,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  257,  258,  259,  260,  261,   -1,   -1,   -1,
  265,  266,   -1,  363,   -1,  328,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  290,  291,  292,  293,  294,
  295,  296,  297,  298,   -1,  300,  301,  302,  303,   -1,
  363,   -1,  307,  308,  309,   -1,  311,   -1,  313,   -1,
   -1,   -1,  317,  318,  319,  320,   -1,  322,   -1,  324,
   -1,  326,   -1,   -1,  329,   -1,   -1,   -1,  333,  334,
  335,  336,  337,  338,  339,   -1,   -1,  342,  343,   -1,
  345,  346,  347,  348,   -1,   -1,   -1,   -1,  353,  354,
  355,  356,  357,  358,  359,   -1,   -1,   -1,   -1,  364,
  365,   -1,  367,  368,  369,  370,  371,  372,  257,  258,
  259,  260,  261,   -1,  379,   41,  265,  266,   44,  384,
  385,  386,  387,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   58,   59,   -1,   -1,   -1,   63,   -1,   -1,
   -1,  290,  291,  292,  293,  294,  295,  296,  297,  298,
   -1,  300,  301,  302,  303,   -1,   -1,   -1,  307,  308,
  309,   -1,  311,   -1,  313,   -1,   -1,   93,  317,  318,
  319,  320,   -1,  322,   -1,  324,   -1,  326,   -1,   -1,
  329,   -1,   -1,   -1,  333,  334,  335,  336,  337,  338,
  339,   -1,   -1,  342,  343,   -1,  345,  346,  347,  348,
   -1,   -1,   -1,   -1,  353,  354,  355,  356,  357,  358,
  359,   -1,   -1,   -1,   -1,  364,  365,   -1,  367,  368,
  369,  370,  371,  372,   -1,   -1,   -1,   -1,   -1,   -1,
  379,   -1,   -1,   -1,   -1,  384,  385,  386,  387,   33,
   34,   -1,   36,   -1,   -1,   -1,   40,   -1,   -1,   43,
   -1,   45,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   59,   -1,   -1,   -1,   -1,
   64,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   91,   -1,   -1,
   -1,   -1,   96,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  123,
   -1,   -1,  126,   -1,   -1,   -1,  262,  263,  264,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  279,  280,   33,   34,   -1,   36,   -1,
   -1,   -1,   40,   -1,   -1,   43,   -1,   45,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   41,   -1,   -1,   44,   -1,
   -1,   59,   -1,   -1,   -1,   -1,   64,   -1,   -1,   -1,
   -1,   -1,   58,   59,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   91,   -1,   -1,   -1,   -1,   96,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   93,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  363,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  123,   -1,  125,  126,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  125,
   -1,   -1,   -1,  257,  258,  259,  260,  261,   -1,   -1,
   -1,  265,  266,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  290,  291,  292,  293,
  294,  295,  296,  297,  298,   -1,  300,  301,  302,  303,
   -1,   -1,   -1,  307,  308,  309,   -1,  311,   -1,  313,
   -1,   -1,   -1,  317,  318,  319,  320,   -1,  322,   -1,
  324,   -1,  326,   -1,   -1,  329,   -1,   -1,   -1,  333,
  334,  335,  336,  337,  338,  339,   -1,   -1,  342,  343,
   -1,  345,  346,  347,  348,   -1,   -1,   -1,   -1,  353,
  354,  355,  356,  357,  358,  359,   -1,   -1,   -1,   -1,
  364,  365,   -1,  367,  368,  369,  370,  371,  372,  257,
  258,  259,  260,  261,   -1,  379,   -1,  265,  266,   -1,
  384,  385,  386,  387,   -1,   -1,  262,  263,  264,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  290,  291,  292,  293,  294,  295,  296,  297,
  298,   -1,  300,  301,  302,  303,   -1,   -1,   -1,  307,
  308,  309,   -1,  311,   -1,  313,   -1,   -1,   -1,  317,
  318,  319,  320,   -1,  322,   -1,  324,   -1,  326,   -1,
   -1,  329,   -1,   -1,   -1,  333,  334,  335,  336,   -1,
  338,  339,  328,   -1,  342,   -1,   -1,  345,  346,  347,
  348,   -1,   -1,   -1,   -1,  353,  354,  355,  356,  357,
  358,  359,   -1,   -1,   -1,   -1,  364,  365,   -1,  367,
  368,  369,  370,  371,  372,   -1,   -1,  363,   -1,   -1,
   -1,  379,   -1,   -1,   -1,   -1,  384,  385,  386,  387,
   33,   34,   -1,   36,   -1,   -1,   -1,   40,   -1,   -1,
   43,   -1,   45,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   59,   -1,   -1,   -1,
   -1,   64,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   91,   -1,
   -1,   -1,   -1,   96,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  123,   -1,  125,  126,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   33,   34,   -1,   36,
   -1,   -1,   -1,   40,   -1,   -1,   43,   -1,   45,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   41,   -1,   -1,   44,
   -1,   -1,   59,   -1,   -1,   -1,   -1,   64,   -1,   -1,
   -1,   -1,   -1,   58,   59,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   91,   -1,   -1,   -1,   -1,   96,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   93,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  123,   -1,   -1,  126,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  125,   -1,   -1,   -1,  257,  258,  259,  260,  261,   -1,
   -1,   -1,  265,  266,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  290,  291,  292,
  293,  294,  295,  296,  297,  298,   -1,  300,  301,  302,
  303,   -1,   -1,   -1,  307,  308,  309,   -1,  311,   -1,
  313,   -1,   -1,   -1,  317,  318,  319,  320,   -1,  322,
   -1,  324,   -1,  326,   -1,   -1,  329,   -1,   -1,   -1,
  333,  334,  335,  336,   -1,  338,  339,   -1,   -1,  342,
   -1,   -1,  345,  346,  347,  348,   -1,   -1,   -1,   -1,
  353,  354,  355,  356,  357,  358,  359,   -1,   -1,   -1,
   -1,  364,  365,   -1,  367,  368,  369,  370,  371,  372,
  257,  258,  259,  260,  261,   -1,  379,   -1,  265,  266,
   -1,  384,  385,  386,  387,   -1,   -1,  262,  263,  264,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  290,  291,  292,  293,  294,  295,  296,
  297,  298,   -1,  300,  301,  302,  303,   -1,   -1,   -1,
  307,  308,  309,   -1,  311,   -1,  313,   -1,   -1,   -1,
  317,  318,  319,  320,  321,  322,   -1,  324,   -1,  326,
   -1,   -1,  329,   -1,   -1,   -1,  333,  334,  335,  336,
   -1,  338,  339,  328,   -1,  342,   -1,   -1,  345,  346,
  347,  348,   -1,   -1,   -1,   -1,  353,  354,  355,  356,
  357,  358,  359,   -1,   -1,   -1,   -1,  364,  365,   -1,
  367,  368,  369,  370,  371,  372,   -1,   -1,  363,   -1,
   -1,   -1,  379,   -1,   -1,   -1,   -1,  384,  385,  386,
  387,   33,   34,   -1,   36,   -1,   -1,   -1,   40,   -1,
   -1,   43,   -1,   45,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   59,   -1,   -1,
   -1,   -1,   64,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   91,
   -1,   -1,   -1,   -1,   96,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  123,   -1,   -1,  126,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   33,   34,   -1,
   36,   -1,   -1,   -1,   40,   -1,   -1,   43,   -1,   45,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   41,   -1,   -1,
   44,   -1,   -1,   59,   -1,   -1,   -1,   -1,   64,   -1,
   -1,   -1,   -1,   -1,   58,   59,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   91,   -1,   -1,   -1,   -1,
   96,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   93,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  123,   -1,   -1,
  126,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  125,   -1,   -1,   -1,  257,  258,  259,  260,  261,
   -1,   -1,   -1,  265,  266,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  290,  291,
  292,  293,  294,  295,  296,  297,  298,   -1,  300,  301,
  302,  303,   -1,   -1,   -1,  307,  308,  309,   -1,  311,
   -1,  313,   -1,   -1,   -1,  317,  318,  319,  320,   -1,
  322,   -1,  324,   -1,  326,  327,   -1,  329,   -1,   -1,
   -1,  333,  334,  335,  336,   -1,  338,  339,   -1,   -1,
  342,   -1,   -1,  345,  346,  347,  348,   -1,   -1,   -1,
   -1,  353,  354,  355,  356,  357,  358,  359,   -1,   -1,
   -1,   -1,  364,  365,   -1,  367,  368,  369,  370,  371,
  372,  257,  258,  259,  260,  261,   -1,  379,   -1,  265,
  266,   -1,  384,  385,  386,  387,   -1,   -1,  262,  263,
  264,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  290,  291,  292,  293,  294,  295,
  296,  297,  298,   -1,  300,  301,  302,  303,   -1,   -1,
   -1,  307,  308,  309,   -1,  311,   -1,  313,   -1,   -1,
   -1,  317,  318,  319,  320,   -1,  322,   -1,  324,  325,
  326,   -1,   -1,  329,   -1,   -1,   -1,  333,  334,  335,
  336,   -1,  338,  339,  328,   -1,  342,   -1,   -1,  345,
  346,  347,  348,   -1,   -1,   -1,   -1,  353,  354,  355,
  356,  357,  358,  359,   -1,   -1,   -1,   -1,  364,  365,
   -1,  367,  368,  369,  370,  371,  372,   -1,   -1,  363,
   -1,   -1,   -1,  379,   -1,   -1,   -1,   -1,  384,  385,
  386,  387,   33,   34,   -1,   36,   -1,   -1,   -1,   40,
   -1,   -1,   43,   -1,   45,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   59,   -1,
   -1,   -1,   -1,   64,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   91,   -1,   -1,   -1,   -1,   96,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  123,   -1,  125,  126,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   33,   34,
   -1,   36,   -1,   -1,   -1,   40,   -1,   -1,   43,   -1,
   45,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   41,   -1,
   -1,   44,   -1,   -1,   59,   -1,   -1,   -1,   -1,   64,
   -1,   -1,   -1,   -1,   -1,   58,   59,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   91,   -1,   -1,   -1,
   -1,   96,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   93,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  123,   -1,
  125,  126,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  125,   -1,   -1,   -1,  257,  258,  259,  260,
  261,   -1,   -1,   -1,  265,  266,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  290,
  291,  292,  293,  294,  295,  296,  297,  298,   -1,  300,
  301,  302,  303,   -1,   -1,   -1,  307,  308,  309,   -1,
  311,   -1,  313,   -1,   -1,   -1,  317,  318,  319,  320,
   -1,  322,   -1,  324,   -1,  326,   -1,   -1,  329,   -1,
   -1,   -1,  333,  334,  335,  336,   -1,  338,  339,   -1,
   -1,  342,   -1,   -1,  345,  346,  347,  348,   -1,   -1,
   -1,   -1,  353,  354,  355,  356,  357,  358,  359,   -1,
   -1,   -1,   -1,  364,  365,   -1,  367,  368,  369,  370,
  371,  372,  257,  258,  259,  260,  261,   -1,  379,   -1,
  265,  266,   -1,  384,  385,  386,  387,   -1,   -1,  262,
  263,  264,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  290,  291,  292,  293,  294,
  295,  296,  297,  298,   -1,  300,  301,  302,  303,   -1,
   -1,   -1,  307,  308,  309,   -1,  311,   -1,  313,   -1,
   -1,   -1,  317,  318,  319,  320,   -1,  322,   -1,  324,
   -1,  326,   -1,   -1,  329,   -1,   -1,   -1,  333,  334,
  335,  336,   -1,  338,  339,  328,   -1,  342,   -1,   -1,
  345,  346,  347,  348,   -1,   -1,   -1,   -1,  353,  354,
  355,  356,  357,  358,  359,   -1,   -1,   -1,   -1,  364,
  365,   -1,  367,  368,  369,  370,  371,  372,   -1,   -1,
  363,   -1,   -1,   -1,  379,   -1,   -1,   -1,   -1,  384,
  385,  386,  387,   33,   34,   -1,   36,   -1,   -1,   -1,
   40,   -1,   -1,   43,   -1,   45,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   59,
   -1,   -1,   -1,   -1,   64,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   91,   -1,   -1,   -1,   -1,   96,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  123,   -1,  125,  126,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   33,
   34,   -1,   36,   -1,   -1,   -1,   40,   -1,   -1,   43,
   -1,   45,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   41,
   -1,   -1,   44,   -1,   -1,   59,   -1,   -1,   -1,   -1,
   64,   -1,   -1,   -1,   -1,   -1,   58,   59,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   91,   -1,   -1,
   -1,   -1,   96,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   93,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  123,
   -1,  125,  126,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  125,   -1,   -1,   -1,  257,  258,  259,
  260,  261,   -1,   -1,   -1,  265,  266,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  290,  291,  292,  293,  294,  295,  296,  297,  298,   -1,
  300,  301,  302,  303,   -1,   -1,   -1,  307,  308,  309,
   -1,  311,   -1,  313,   -1,   -1,   -1,  317,  318,  319,
  320,   -1,  322,   -1,  324,   -1,  326,   -1,   -1,  329,
   -1,   -1,   -1,  333,  334,  335,  336,   -1,  338,  339,
   -1,   -1,  342,   -1,   -1,  345,  346,  347,  348,   -1,
   -1,   -1,   -1,  353,  354,  355,  356,  357,  358,  359,
   -1,   -1,   -1,   -1,  364,  365,   -1,  367,  368,  369,
  370,  371,  372,  257,  258,  259,  260,  261,   -1,  379,
   -1,  265,  266,   -1,  384,  385,  386,  387,   -1,   -1,
  262,  263,  264,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  290,  291,  292,  293,
  294,  295,  296,  297,  298,   -1,  300,  301,  302,  303,
   -1,   -1,   -1,  307,  308,  309,   -1,  311,   -1,  313,
   -1,   -1,   -1,  317,  318,  319,  320,   -1,  322,   -1,
  324,   -1,  326,   -1,   -1,  329,   -1,   -1,   -1,  333,
  334,  335,  336,   -1,  338,  339,  328,   -1,  342,   -1,
   -1,  345,  346,  347,  348,   -1,   -1,   -1,   -1,  353,
  354,  355,  356,  357,  358,  359,   -1,   -1,   -1,   -1,
  364,  365,   -1,  367,  368,  369,  370,  371,  372,   -1,
   -1,  363,   -1,   -1,   -1,  379,   -1,   -1,   -1,   -1,
  384,  385,  386,  387,   33,   34,   -1,   36,   -1,   -1,
   -1,   40,   -1,   -1,   43,   -1,   45,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   59,   -1,   -1,   -1,   -1,   64,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   91,   -1,   -1,   -1,   -1,   96,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  123,   -1,   -1,  126,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   33,   34,   -1,   36,   -1,   -1,   -1,   40,   -1,   -1,
   43,   -1,   45,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   41,   -1,   -1,   44,   -1,   -1,   59,   -1,   -1,   -1,
   -1,   64,   -1,   -1,   -1,   -1,   -1,   58,   59,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   91,   -1,
   -1,   -1,   -1,   96,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   93,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  123,   -1,  125,  126,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  125,   -1,   -1,   -1,  257,  258,
  259,  260,  261,   -1,   -1,   -1,  265,  266,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  290,  291,  292,  293,  294,  295,  296,  297,  298,
   -1,  300,  301,  302,  303,   -1,   -1,   -1,  307,  308,
  309,   -1,  311,   -1,  313,   -1,   -1,   -1,  317,  318,
  319,  320,   -1,  322,  323,  324,   -1,  326,   -1,   -1,
  329,   -1,   -1,   -1,  333,  334,  335,  336,   -1,  338,
  339,   -1,   -1,  342,   -1,   -1,  345,  346,  347,  348,
   -1,   -1,   -1,   -1,  353,  354,  355,  356,  357,  358,
  359,   -1,   -1,   -1,   -1,  364,  365,   -1,  367,  368,
  369,  370,  371,  372,  257,  258,  259,  260,  261,   -1,
  379,   -1,  265,  266,   -1,  384,  385,  386,  387,   -1,
   -1,  262,  263,  264,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  290,  291,  292,
  293,  294,  295,  296,  297,  298,   -1,  300,  301,  302,
  303,   -1,   -1,   -1,  307,  308,  309,   -1,  311,   -1,
  313,   -1,   -1,   -1,  317,  318,  319,  320,   -1,  322,
   -1,  324,   -1,  326,   -1,   -1,  329,   -1,   -1,   -1,
  333,  334,  335,  336,   -1,  338,  339,  328,   -1,  342,
   -1,   -1,  345,  346,  347,  348,   -1,   -1,   -1,   -1,
  353,  354,  355,  356,  357,  358,  359,   -1,   -1,   -1,
   -1,  364,  365,   -1,  367,  368,  369,  370,  371,  372,
   -1,   -1,  363,   -1,   -1,   -1,  379,   -1,   -1,   -1,
   -1,  384,  385,  386,  387,   33,   34,   -1,   36,   -1,
   -1,   -1,   40,   -1,   -1,   43,   -1,   45,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   59,   -1,   -1,   -1,   -1,   64,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   91,   -1,   -1,   -1,   -1,   96,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  123,   -1,  125,  126,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   33,   34,   -1,   36,   -1,   -1,   -1,   40,   -1,
   -1,   43,   -1,   45,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   41,   -1,   -1,   44,   -1,   -1,   59,   -1,   -1,
   -1,   -1,   64,   -1,   -1,   -1,   -1,   -1,   58,   59,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   91,
   -1,   -1,   -1,   -1,   96,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   93,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  123,   -1,   -1,  126,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  125,   -1,   -1,   -1,  257,
  258,  259,  260,  261,   -1,   -1,   -1,  265,  266,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  290,  291,  292,  293,  294,  295,  296,  297,
  298,   -1,  300,  301,  302,  303,   -1,   -1,   -1,  307,
  308,  309,   -1,  311,   -1,  313,   -1,   -1,   -1,  317,
  318,  319,  320,   -1,  322,   -1,  324,   -1,  326,   -1,
   -1,  329,   -1,   -1,   -1,  333,  334,  335,  336,   -1,
  338,  339,   -1,   -1,  342,   -1,   -1,  345,  346,  347,
  348,   -1,   -1,   -1,   -1,  353,  354,  355,  356,  357,
  358,  359,   -1,   -1,   -1,   -1,  364,  365,   -1,  367,
  368,  369,  370,  371,  372,  257,  258,  259,  260,  261,
   -1,  379,   -1,  265,  266,   -1,  384,  385,  386,  387,
   -1,   -1,  262,  263,  264,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  290,  291,
  292,  293,  294,  295,  296,  297,  298,   -1,  300,  301,
  302,  303,   -1,   -1,   -1,  307,  308,  309,   -1,  311,
   -1,  313,   -1,   -1,   -1,  317,  318,  319,  320,   -1,
  322,   -1,  324,   -1,  326,   -1,   -1,  329,   -1,   -1,
   -1,  333,  334,  335,  336,   -1,  338,  339,  328,   -1,
  342,   -1,   -1,  345,  346,  347,  348,   -1,   -1,   -1,
   -1,  353,  354,  355,  356,  357,  358,  359,   -1,   -1,
   -1,   -1,  364,  365,   -1,  367,  368,  369,  370,  371,
  372,   -1,   -1,  363,   -1,   -1,   -1,  379,   -1,   -1,
   -1,   -1,  384,  385,  386,  387,   33,   34,   -1,   36,
   -1,   -1,   -1,   40,   -1,   -1,   43,   -1,   45,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   58,   59,   -1,   -1,   -1,   -1,   64,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   91,   -1,   -1,   -1,   -1,   96,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  123,   -1,   -1,  126,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   33,   34,   -1,   36,   -1,   -1,   -1,   40,
   -1,   -1,   43,   -1,   45,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   41,   -1,   -1,   44,   58,   59,   -1,
   -1,   -1,   -1,   64,   -1,   -1,   -1,   -1,   -1,   -1,
   58,   59,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   91,   -1,   -1,   -1,   -1,   96,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   93,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  123,   -1,   -1,  126,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  125,   -1,   -1,
  257,  258,  259,  260,  261,   37,   38,   -1,  265,  266,
   42,   43,   -1,   45,   46,   47,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   60,   -1,
   62,   -1,   -1,  290,  291,  292,  293,  294,  295,  296,
  297,  298,   -1,  300,  301,  302,  303,   -1,   -1,   -1,
  307,  308,  309,   -1,  311,   -1,  313,   -1,   -1,   91,
  317,  318,  319,  320,   -1,  322,   -1,  324,   -1,  326,
   -1,   -1,  329,   -1,   -1,   -1,  333,  334,  335,  336,
   -1,  338,  339,   -1,   -1,  342,   -1,   41,  345,  346,
   44,   -1,   -1,   -1,   -1,   -1,  353,  354,  355,   -1,
   -1,   -1,   -1,   -1,   58,   59,   -1,  364,  365,   -1,
  367,  368,  369,  370,  371,  372,  257,  258,  259,  260,
  261,   -1,  379,   41,  265,  266,   44,  384,  385,  386,
  387,   -1,   -1,   -1,  262,  263,  264,   -1,   -1,   93,
   58,   59,   -1,   -1,   -1,   63,   -1,   -1,   -1,  290,
  291,  292,  293,  294,  295,  296,  297,  298,   -1,  300,
  301,  302,  303,   -1,   -1,   -1,  307,  308,  309,   -1,
  311,  125,  313,   -1,   -1,   93,  317,  318,  319,  320,
   -1,  322,   -1,  324,   -1,  326,   -1,   -1,  329,   -1,
   -1,   -1,  333,  334,  335,  336,   -1,  338,  339,   -1,
  328,  342,   -1,   -1,  345,  346,  124,  125,   33,   34,
   -1,   36,  353,  354,  355,   40,   -1,   -1,   43,   -1,
   45,   -1,   -1,  364,  365,   -1,  367,  368,  369,  370,
  371,  372,   -1,   58,   59,  363,   -1,   -1,  379,   64,
   -1,   -1,   -1,  384,  385,  386,  387,   -1,   -1,  281,
  282,  283,  284,  285,  286,  287,  288,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   91,  299,   -1,   -1,
   -1,   96,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  123,   -1,
   -1,  126,   -1,   -1,   -1,   -1,   -1,   -1,  262,  263,
  264,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   33,   34,   -1,   36,   -1,   -1,
   -1,   40,   -1,   -1,   43,   -1,   45,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  262,  263,  264,   -1,   -1,   58,
   59,   -1,   -1,   -1,   -1,   64,   -1,   -1,   -1,   -1,
   -1,  279,  280,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  328,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   91,   -1,   -1,   -1,   -1,   96,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  363,
  328,   -1,   -1,   -1,  123,   -1,   -1,  126,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  257,  258,  259,  260,  261,   -1,   37,   -1,
  265,  266,   -1,   42,   43,  363,   45,   46,   47,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   60,   -1,   62,   -1,  290,  291,  292,  293,  294,
  295,  296,  297,  298,   -1,  300,  301,  302,  303,   -1,
   -1,   -1,  307,  308,  309,   -1,  311,   -1,  313,   -1,
   -1,   -1,  317,  318,  319,  320,   -1,  322,   -1,  324,
   -1,  326,   -1,   -1,  329,   -1,   -1,   -1,  333,  334,
  335,  336,   -1,  338,  339,   -1,   -1,  342,   -1,   41,
  345,  346,   44,   -1,   -1,   -1,   -1,   -1,  353,  354,
  355,   -1,   -1,   -1,   -1,   -1,   58,   59,   -1,  364,
  365,   -1,  367,  368,  369,  370,  371,  372,  257,  258,
  259,  260,  261,   -1,  379,   41,  265,  266,   44,  384,
  385,  386,  387,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   93,   58,   59,   -1,   -1,   -1,   63,   -1,   -1,
   -1,  290,  291,  292,  293,  294,  295,  296,  297,  298,
   -1,  300,  301,  302,  303,   -1,   -1,   -1,  307,  308,
  309,   -1,  311,  125,  313,   -1,   -1,   93,  317,  318,
  319,  320,   -1,  322,   -1,  324,   -1,  326,   -1,   -1,
  329,   -1,   -1,   -1,  333,  334,  335,  336,   -1,  338,
  339,   -1,   -1,  342,   -1,   -1,  345,  346,   -1,  125,
   33,   34,   -1,   36,  353,  354,  355,   40,   -1,   -1,
   43,   -1,   45,   -1,   -1,  364,  365,   -1,  367,  368,
  369,  370,  371,  372,   -1,   58,   59,   -1,   -1,   -1,
  379,   64,   -1,   -1,   -1,  384,  385,  386,  387,   -1,
   -1,   -1,  281,  282,  283,  284,  285,  286,  287,  288,
  289,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   91,   -1,
  299,   -1,   -1,   96,   -1,   -1,   37,   -1,   -1,   -1,
   -1,   42,   43,   -1,   45,   46,   47,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   60,
  123,   62,   -1,  126,   -1,   -1,   -1,   -1,   -1,   -1,
  262,  263,  264,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   33,   34,   -1,   36,
   91,   -1,   -1,   40,   -1,   -1,   43,   -1,   45,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  262,  263,  264,   -1,
   -1,   -1,   59,   -1,   -1,   -1,   -1,   64,   -1,   -1,
   -1,   -1,   -1,  279,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  328,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   91,   -1,   -1,   -1,   -1,   96,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  363,  328,   -1,   -1,   -1,  123,   -1,   -1,  126,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  257,  258,  259,  260,  261,   -1,
   -1,   -1,  265,  266,   -1,   -1,   -1,  363,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  290,  291,  292,
  293,  294,  295,  296,  297,  298,   -1,  300,  301,  302,
  303,   -1,   -1,   -1,  307,  308,  309,   -1,  311,   -1,
  313,   -1,   -1,   -1,  317,  318,  319,  320,   -1,  322,
   -1,  324,   -1,  326,   -1,   -1,  329,   -1,   -1,   -1,
  333,  334,  335,  336,   -1,  338,  339,   -1,   -1,  342,
   -1,   -1,  345,  346,  285,  286,  287,  288,   -1,   -1,
  353,  354,  355,   -1,   -1,   -1,   -1,   -1,  299,   -1,
   -1,  364,  365,   -1,  367,  368,  369,  370,  371,  372,
  257,  258,  259,  260,  261,   -1,  379,   -1,  265,  266,
   -1,  384,  385,  386,  387,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  290,  291,  292,  293,  294,  295,  296,
  297,  298,   -1,  300,  301,  302,  303,   -1,   -1,   -1,
  307,  308,  309,   -1,  311,   -1,  313,   -1,   -1,   -1,
  317,  318,  319,  320,   -1,  322,   -1,  324,   -1,  326,
   -1,   -1,  329,   -1,   -1,   -1,  333,  334,  335,  336,
   -1,  338,  339,   -1,   -1,  342,   -1,   -1,  345,  346,
   -1,   -1,   -1,   -1,   -1,   -1,  353,  354,  355,   41,
   38,   -1,   44,   41,   -1,   -1,   44,  364,  365,   -1,
  367,  368,  369,  370,  371,  372,   58,   59,   -1,   -1,
   58,   59,  379,   -1,   -1,   63,   -1,  384,  385,  386,
  387,   33,   34,   -1,   36,   -1,   38,   -1,   40,   -1,
   -1,   43,   -1,   45,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   93,   -1,   -1,   -1,   93,   94,   -1,   -1,   -1,
   -1,   -1,   64,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  125,   -1,   -1,  124,   -1,   -1,   91,
   -1,   -1,   -1,   -1,   96,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   38,   -1,   -1,   41,   -1,
   -1,   44,   -1,   38,   -1,   -1,   41,   -1,   -1,   44,
   -1,   -1,   -1,   -1,  126,   58,   59,   -1,   -1,   -1,
   63,   -1,   -1,   58,   59,   -1,   -1,   -1,   63,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   33,   34,   -1,
   36,   -1,   -1,   -1,   40,   -1,   -1,   43,   -1,   45,
   93,   94,   -1,   -1,   -1,   -1,   -1,   -1,   93,   94,
   -1,   -1,   -1,   59,   -1,   -1,   -1,   -1,   64,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  124,  125,   -1,   -1,   -1,   -1,   -1,   -1,  124,
  125,   -1,   -1,   -1,   -1,   91,   -1,   -1,   -1,   -1,
   96,   38,   -1,   -1,   41,   -1,   -1,   44,   -1,   -1,
  262,  263,  264,   -1,  262,  263,  264,   -1,   -1,   -1,
   -1,   58,   59,   -1,   -1,   -1,   63,   -1,   -1,   -1,
  126,  279,  280,  281,  282,  283,  284,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  257,  258,  259,  260,  261,
   -1,   -1,   -1,  265,  266,   -1,   93,   94,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  328,   -1,  290,  291,
  292,  293,  294,  295,  296,  297,  298,  124,  300,  301,
  302,   33,   34,   -1,   36,  307,  308,  309,   40,  311,
   -1,   43,   -1,   45,   -1,  317,   -1,   -1,   -1,   -1,
   -1,  363,   -1,   -1,   -1,  363,   -1,   59,   -1,  262,
  263,  264,   64,   -1,  336,   -1,   -1,  262,  263,  264,
   -1,   -1,   -1,   -1,  346,   -1,  279,  280,  281,  282,
  283,  284,  354,  355,  279,  280,   -1,   -1,   -1,   91,
   -1,   -1,  364,  365,   96,  367,  368,  369,  370,  371,
  372,  257,  258,  259,  260,  261,   -1,  379,   -1,  265,
  266,   -1,  384,  385,  386,  387,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  126,  328,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  328,  290,  291,  292,  293,  294,  295,
  296,  297,  298,   -1,  300,  301,  302,   33,   34,   -1,
   36,  307,  308,  309,   40,  311,   -1,   43,   -1,   45,
  363,  317,   -1,   -1,   -1,  262,  263,  264,  363,   -1,
   -1,   -1,   -1,   59,   -1,   -1,   -1,   -1,   64,   -1,
  336,   -1,  279,  280,  281,  282,  283,  284,   -1,   -1,
  346,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  354,  355,
   -1,   -1,   -1,   -1,   -1,   91,   -1,   -1,  364,  365,
   96,  367,  368,  369,  370,  371,  372,   -1,   -1,   -1,
   -1,   -1,   -1,  379,   -1,   -1,   -1,   -1,  384,  385,
  386,  387,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  126,   -1,   -1,   -1,   -1,   -1,   -1,   38,   -1,   -1,
   41,   -1,   -1,   44,   -1,  257,  258,  259,  260,  261,
   -1,   -1,   -1,  265,  266,   -1,  363,   58,   59,   -1,
   -1,   -1,   63,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  290,  291,
  292,  293,  294,  295,  296,  297,  298,   -1,  300,  301,
  302,   -1,   93,   94,   -1,  307,  308,  309,   -1,  311,
   -1,   -1,   -1,   -1,   -1,  317,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  124,  336,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  346,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  354,  355,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  364,  365,   -1,  367,  368,  369,  370,  371,
  372,  257,  258,  259,  260,  261,   -1,  379,   -1,  265,
  266,   -1,  384,  385,  386,  387,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  290,  291,  292,  293,  294,  295,
  296,  297,  298,   -1,  300,  301,  302,   -1,   -1,   -1,
   -1,  307,  308,  309,   -1,  311,   -1,   -1,   -1,   -1,
   -1,  317,   33,   34,   -1,   36,   -1,   -1,   -1,   40,
   41,   -1,   43,   -1,   45,   -1,   -1,   -1,   -1,   -1,
  336,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  346,   -1,   -1,   64,   -1,   -1,   -1,   -1,  354,  355,
   -1,  262,  263,  264,   -1,   -1,   -1,   -1,  364,  365,
   -1,  367,  368,  369,  370,  371,  372,   -1,  279,  280,
   91,   -1,   -1,  379,   -1,   96,   -1,   -1,  384,  385,
  386,  387,   -1,   -1,   -1,   -1,   38,   -1,   -1,   41,
   -1,   -1,   44,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  126,   58,   59,   -1,   -1,
   -1,   63,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   33,   34,
   -1,   36,   -1,   -1,   -1,   40,   -1,   -1,   43,   -1,
   45,   93,   94,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  363,   -1,   -1,   -1,   -1,   -1,   -1,   64,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  124,  125,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   91,   -1,   -1,   -1,
   -1,   96,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  126,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  257,  258,  259,  260,
  261,   37,   38,   -1,  265,  266,   42,   43,   -1,   45,
   46,   47,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   60,   -1,   62,   -1,   -1,  290,
  291,  292,  293,  294,  295,  296,  297,  298,   -1,  300,
  301,  302,   33,   34,   -1,   36,  307,  308,  309,   40,
  311,   -1,   43,   -1,   45,   -1,  317,   -1,   94,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   58,   -1,   -1,
  262,  263,  264,   64,   -1,  336,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  346,   -1,  279,  280,  281,
  282,  283,  284,  354,  355,   -1,   -1,   -1,   -1,   -1,
   91,   -1,   -1,  364,  365,   96,  367,  368,  369,  370,
  371,  372,  257,  258,  259,  260,  261,   -1,  379,   -1,
  265,  266,   -1,  384,  385,  386,  387,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  126,  328,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  290,  291,  292,  293,  294,
  295,  296,  297,  298,   -1,  300,  301,  302,   -1,   -1,
   -1,   -1,  307,  308,  309,  310,  311,   -1,   -1,   -1,
   -1,  363,  317,   38,   -1,   -1,   41,   -1,   -1,   44,
   33,   34,   -1,   36,   -1,   38,   -1,   40,   -1,   -1,
   43,  336,   45,   58,   59,   -1,   -1,   -1,   63,   -1,
   -1,  346,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  354,
  355,   64,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  364,
  365,   -1,  367,  368,  369,  370,  371,  372,   93,   94,
   -1,   -1,   -1,   -1,  379,   -1,   -1,   -1,   91,  384,
  385,  386,  387,   96,   -1,  281,  282,  283,  284,  285,
  286,  287,  288,  289,   -1,   -1,   -1,   -1,   -1,  124,
  125,   -1,   -1,  299,   -1,   -1,  257,  258,  259,  260,
  261,   -1,   -1,  126,  265,  266,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  290,
  291,  292,  293,  294,  295,  296,  297,  298,   -1,  300,
  301,  302,   -1,   -1,   -1,   -1,  307,  308,  309,   -1,
  311,   -1,   -1,   -1,   -1,   -1,  317,   33,   34,   -1,
   36,   -1,   38,   -1,   40,   -1,   -1,   43,   -1,   45,
   -1,   -1,   -1,   -1,   -1,  336,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  346,   -1,   -1,   64,   -1,
   -1,   -1,   -1,  354,  355,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  364,  365,   -1,  367,  368,  369,  370,
  371,  372,   -1,   -1,   -1,   91,   -1,   -1,  379,   -1,
   96,   -1,   -1,  384,  385,  386,  387,  262,  263,  264,
   -1,   -1,   -1,   -1,  257,  258,  259,  260,  261,   -1,
   -1,   -1,  265,  266,  279,  280,  281,  282,  283,  284,
  126,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  290,  291,  292,
  293,  294,  295,  296,  297,  298,   -1,  300,  301,  302,
   -1,   -1,   -1,   -1,  307,  308,  309,   -1,  311,   -1,
   -1,   -1,   -1,  328,  317,   33,   34,   -1,   36,   -1,
   -1,   -1,   40,   -1,   -1,   43,   -1,   45,   -1,   -1,
   -1,   -1,   -1,  336,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  346,   -1,   -1,   64,   -1,  363,   -1,
   -1,  354,  355,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  364,  365,   -1,  367,  368,  369,  370,  371,  372,
   -1,   38,   -1,   91,   41,   -1,  379,   44,   96,   -1,
   -1,  384,  385,  386,  387,   -1,   -1,   -1,   -1,   -1,
   -1,   58,   59,   -1,   -1,   -1,   63,   -1,   -1,   -1,
   -1,  257,  258,  259,  260,  261,   -1,   -1,  126,  265,
  266,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   93,   94,   -1,   -1,
   -1,   -1,   -1,   -1,  290,  291,  292,  293,  294,  295,
  296,  297,  298,   -1,  300,  301,  302,   -1,   -1,   -1,
   -1,  307,  308,  309,   -1,  311,   -1,  124,   -1,   -1,
   -1,  317,   33,   34,   -1,   36,   -1,   -1,   -1,   40,
   -1,   -1,   43,   -1,   45,   -1,   -1,   -1,   -1,   -1,
  336,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  346,   -1,   -1,   64,   -1,   -1,   -1,   -1,  354,  355,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  364,  365,
   -1,  367,  368,  369,  370,  371,  372,   -1,   -1,   -1,
   91,   -1,   -1,  379,   -1,   96,   -1,   -1,  384,  385,
  386,  387,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  257,
  258,  259,  260,  261,   -1,   -1,   -1,  265,  266,   -1,
   -1,   -1,   -1,   -1,   -1,  126,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  290,  291,  292,  293,  294,  295,  296,  297,
  298,   -1,  300,  301,  302,   -1,   -1,   -1,   -1,  307,
  308,  309,   -1,  311,   -1,  262,  263,  264,   -1,  317,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  279,  280,  281,  282,  283,  284,  336,   -1,
   38,   -1,   -1,   41,   -1,   -1,   44,   -1,  346,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  354,  355,   -1,   -1,
   58,   59,   60,   -1,   62,   63,  364,  365,   -1,  367,
  368,  369,  370,  371,  372,   -1,   -1,   -1,   -1,   -1,
   -1,  379,   -1,   -1,   -1,   -1,  384,  385,  386,  387,
   -1,   -1,   -1,   -1,   37,   93,   94,   -1,   -1,   42,
   43,   -1,   45,   46,   47,   -1,  257,  258,  259,  260,
  261,   -1,   -1,   -1,  265,  266,  363,   60,   -1,   62,
   -1,   -1,   -1,   -1,   -1,   -1,  124,  125,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  290,
  291,  292,  293,  294,  295,  296,  297,  298,   91,  300,
  301,  302,   -1,   -1,   -1,   -1,  307,  308,  309,   -1,
  311,   -1,   -1,   -1,   -1,   -1,  317,   -1,   37,   38,
   -1,   40,   41,   42,   43,   44,   45,   46,   47,   -1,
   -1,   -1,   -1,   -1,   -1,  336,   -1,   -1,   -1,   58,
   59,   60,   -1,   62,   63,  346,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  354,  355,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  364,  365,   -1,  367,  368,  369,  370,
  371,  372,   91,   -1,   93,   94,   -1,   -1,  379,   -1,
   -1,   -1,   -1,  384,  385,  386,  387,   37,   38,   -1,
   40,   41,   42,   43,   44,   45,   46,   47,   -1,   -1,
   -1,   -1,   -1,   -1,  123,  124,  125,   -1,   58,   59,
   60,   -1,   62,   63,  262,  263,  264,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  279,  280,  281,  282,  283,  284,  285,  286,  287,
  288,   91,   -1,   93,   94,   37,   38,   -1,   40,   41,
   42,   43,   44,   45,   46,   47,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   58,   59,   60,   -1,
   62,   63,   -1,  123,  124,  125,   -1,   -1,   -1,   -1,
  328,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  281,  282,
  283,  284,  285,  286,  287,  288,   -1,   -1,   -1,   91,
   -1,   93,   94,   -1,   -1,   -1,  299,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  363,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  123,  124,  125,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  262,  263,  264,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  279,  280,  281,  282,  283,  284,  285,  286,  287,  288,
  289,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  299,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  311,   -1,   37,   38,   -1,   40,   41,   42,
   43,   44,   45,   46,   47,   -1,   -1,   -1,   -1,  328,
   -1,   -1,  262,  263,  264,   58,   59,   60,   61,   62,
   63,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  279,
  280,  281,  282,  283,  284,  285,  286,  287,  288,  289,
   -1,   -1,  361,   -1,  363,   -1,   -1,   -1,   -1,  299,
   93,   94,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  311,   -1,   -1,  383,   -1,   -1,   -1,   -1,  388,
  262,  263,  264,   -1,   -1,   -1,   -1,   -1,  328,   -1,
   -1,  124,  125,   -1,   -1,   -1,   -1,  279,  280,  281,
  282,  283,  284,  285,  286,  287,  288,  289,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  299,   -1,   -1,
   -1,  361,   -1,  363,   -1,   -1,   -1,   -1,   -1,  311,
   37,   38,   -1,   40,   41,   42,   43,   44,   45,   46,
   47,   -1,   -1,  383,   -1,   -1,  328,   -1,  388,   -1,
   -1,   58,   59,   60,   -1,   62,   63,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   38,   -1,  361,
   41,  363,   -1,   44,   -1,   -1,   93,   94,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   58,   59,   -1,
   -1,  383,   63,   -1,   -1,   -1,  388,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  124,  125,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  262,
  263,  264,   93,   94,  267,  268,  269,  270,  271,  272,
  273,  274,  275,  276,  277,  278,  279,  280,  281,  282,
  283,  284,  285,  286,  287,  288,  289,  290,  291,   -1,
   -1,   -1,   -1,  124,   37,   38,  299,   -1,   41,   42,
   43,   44,   45,   46,   47,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   58,   59,   60,   -1,   62,
   63,   -1,   -1,   -1,   -1,  328,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   93,   94,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  362,
  363,   -1,   -1,   -1,   -1,   -1,   -1,   37,   38,   -1,
   -1,   41,   42,   43,   44,   45,   46,   47,   -1,   -1,
  383,  124,  125,   -1,   -1,  262,  263,  264,   58,   59,
   60,   -1,   62,   63,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  279,  280,  281,  282,  283,  284,  285,  286,
  287,  288,  289,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   91,  299,   93,   94,   -1,   -1,   -1,   -1,   -1,
   -1,  262,  263,  264,   -1,   -1,   37,   38,   -1,   -1,
   41,   42,   43,   44,   45,   46,   47,   -1,  279,  280,
   -1,  328,   -1,   -1,  124,   -1,   -1,   58,   59,   60,
   61,   62,   63,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  363,   -1,   -1,   -1,
   91,   -1,   93,   94,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  383,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  262,
  263,  264,  123,  124,  125,   37,   38,   -1,   -1,   -1,
   42,   43,  363,   45,   46,   47,  279,  280,  281,  282,
  283,  284,  285,  286,  287,  288,  289,   -1,   60,   -1,
   62,   -1,   -1,   -1,   -1,   -1,  299,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   37,   38,   -1,   40,   41,
   42,   43,   44,   45,   46,   47,   -1,   -1,   -1,   91,
   -1,   -1,   94,   -1,   -1,  328,   58,   59,   60,   61,
   62,   63,  262,  263,  264,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  279,
  280,  281,  282,  283,  284,  285,  286,  287,  288,   -1,
  363,   93,   94,   -1,   -1,   -1,   -1,   -1,   -1,  299,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  383,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  124,  125,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  262,  263,  264,   -1,   -1,  267,  268,  269,  270,
  271,  272,  273,  274,  275,  276,  277,  278,  279,  280,
  281,  282,  283,  284,  285,  286,  287,  288,  289,  290,
  291,   -1,   -1,  363,   -1,   -1,   37,   38,  299,   40,
   41,   42,   43,   44,   45,   46,   47,   -1,   -1,   -1,
   -1,   -1,   -1,  383,   -1,   -1,   -1,   58,   59,   60,
   61,   62,   63,   -1,   -1,   -1,   -1,  328,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   93,   94,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  362,  363,   -1,   -1,   -1,   -1,   -1,   -1,  281,
  282,  283,  284,  285,  286,  287,  288,   -1,   -1,   -1,
   -1,   -1,   -1,  124,  125,   -1,   -1,  299,   -1,   -1,
  262,  263,  264,   -1,   -1,  267,  268,  269,  270,  271,
  272,  273,  274,  275,  276,  277,  278,  279,  280,  281,
  282,  283,  284,  285,  286,  287,  288,  289,  290,  291,
   -1,   -1,   -1,   -1,   -1,   37,   38,  299,   40,   41,
   42,   43,   44,   45,   46,   47,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   58,   59,   60,   61,
   62,   63,   -1,   -1,   -1,   -1,  328,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   93,   94,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  362,  363,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  124,  125,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  262,  263,  264,   -1,   -1,  267,  268,  269,  270,
  271,  272,  273,  274,  275,  276,  277,  278,  279,  280,
  281,  282,  283,  284,  285,  286,  287,  288,  289,  290,
  291,   -1,   -1,   -1,   -1,   37,   38,   -1,  299,   41,
   42,   43,   44,   45,   46,   47,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   58,   59,   60,   61,
   62,   63,   -1,   -1,   -1,   -1,   -1,  328,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   93,   94,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  362,  363,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  124,  125,   -1,   -1,   -1,   -1,   -1,   -1,
  262,  263,  264,   -1,   -1,  267,  268,  269,  270,  271,
  272,  273,  274,  275,  276,  277,  278,  279,  280,  281,
  282,  283,  284,  285,  286,  287,  288,  289,  290,  291,
   -1,   -1,   -1,   -1,   37,   38,   -1,  299,   41,   42,
   43,   44,   45,   46,   47,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   58,   59,   60,   61,   62,
   63,   -1,   -1,   -1,   -1,   -1,  328,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   93,   94,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  362,  363,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  124,  125,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  262,  263,  264,   -1,   -1,  267,  268,  269,  270,  271,
  272,  273,  274,  275,  276,  277,  278,  279,  280,  281,
  282,  283,  284,  285,  286,  287,  288,  289,  290,  291,
   -1,   -1,   -1,   -1,   37,   38,   -1,  299,   41,   42,
   43,   44,   45,   46,   47,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   58,   59,   60,   61,   62,
   63,   -1,   -1,   -1,   -1,   -1,  328,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   93,   94,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  362,  363,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  124,  125,   -1,   -1,   -1,   -1,   -1,   -1,  262,
  263,  264,   -1,   -1,  267,  268,  269,  270,  271,  272,
  273,  274,  275,  276,  277,  278,  279,  280,  281,  282,
  283,  284,  285,  286,  287,  288,  289,  290,  291,   -1,
   -1,   -1,   -1,   37,   38,   -1,  299,   41,   42,   43,
   44,   45,   46,   47,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   58,   59,   60,   61,   62,   63,
   -1,   -1,   -1,   -1,   -1,  328,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   93,
   94,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  362,
  363,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  124,  125,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  262,
  263,  264,   -1,   -1,  267,  268,  269,  270,  271,  272,
  273,  274,  275,  276,  277,  278,  279,  280,  281,  282,
  283,  284,  285,  286,  287,  288,  289,  290,  291,   -1,
   -1,   -1,   -1,   37,   38,   -1,  299,   41,   42,   43,
   44,   45,   46,   47,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   58,   59,   60,   61,   62,   63,
   -1,   -1,   -1,   -1,   -1,  328,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   93,
   94,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  362,
  363,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  124,  125,   -1,   -1,   -1,   -1,   -1,   -1,  262,  263,
  264,   -1,   -1,  267,  268,  269,  270,  271,  272,  273,
  274,  275,  276,  277,  278,  279,  280,  281,  282,  283,
  284,  285,  286,  287,  288,  289,  290,  291,   -1,   -1,
   -1,   -1,   -1,   37,   38,  299,   40,   41,   42,   43,
   44,   45,   46,   47,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   58,   59,   60,   -1,   62,   63,
   -1,   -1,   -1,   -1,  328,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   91,   -1,   93,
   94,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  362,  363,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  123,
  124,  125,   -1,   -1,   -1,   -1,   -1,   -1,  262,  263,
  264,   -1,   -1,  267,  268,  269,  270,  271,  272,  273,
  274,  275,  276,  277,  278,  279,  280,  281,  282,  283,
  284,  285,  286,  287,  288,  289,  290,  291,   -1,   -1,
   -1,   -1,   37,   38,   -1,  299,   41,   42,   43,   44,
   45,   46,   47,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   58,   59,   60,   -1,   62,   63,   -1,
   -1,   -1,   -1,   -1,  328,   -1,   -1,   -1,   -1,   -1,
   37,   38,   -1,   -1,   41,   42,   43,   44,   45,   46,
   47,   -1,   -1,   -1,   -1,   -1,   91,   -1,   93,   94,
   -1,   58,   59,   60,   -1,   62,   63,   -1,  362,  363,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  123,  124,
  125,   -1,   -1,   -1,   -1,   -1,   93,   94,  262,  263,
  264,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  279,  280,  281,  282,  283,
  284,  285,  286,  287,  288,  289,   -1,  124,  125,   -1,
   -1,   -1,   37,   38,   -1,  299,   41,   42,   43,   44,
   45,   46,   47,   -1,   -1,   38,   -1,   -1,   41,   -1,
   -1,   44,   -1,   58,   59,   60,   -1,   62,   63,   -1,
   -1,   -1,   -1,   -1,  328,   58,   59,   -1,   -1,   -1,
   63,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   37,   38,   93,   94,
   41,   42,   43,   44,   45,   46,   47,   -1,  362,  363,
   93,   94,   -1,   -1,   -1,   -1,   -1,   58,   59,   60,
   -1,   62,   63,   -1,   -1,   -1,   -1,   -1,   -1,  124,
  125,   -1,   -1,   -1,   -1,   -1,   -1,  262,  263,  264,
   -1,  124,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   93,   94,  279,  280,  281,  282,  283,  284,
  285,  286,  287,  288,  289,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  299,  262,  263,  264,   -1,   -1,
   -1,   -1,   -1,  124,  125,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  279,  280,  281,  282,  283,  284,  285,  286,
  287,  288,  289,  328,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  299,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   37,   38,   -1,   40,   41,   42,   43,   44,   45,
   46,   47,   -1,   -1,   -1,   -1,   -1,  362,  363,   -1,
   -1,  328,   58,   59,   60,   -1,   62,   63,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  262,  263,  264,
   -1,   -1,   -1,   -1,   -1,  362,  363,   93,   94,  262,
  263,  264,   -1,   -1,  279,  280,  281,  282,  283,  284,
  285,  286,  287,  288,  289,   -1,  279,  280,   -1,   -1,
   -1,   -1,   -1,   -1,  299,   -1,   -1,   -1,  124,  125,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  262,  263,  264,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  328,   -1,   -1,   -1,   -1,  279,  280,
  281,  282,  283,  284,  285,  286,  287,  288,  289,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   37,   38,  299,   40,
   41,   42,   43,   44,   45,   46,   47,  362,  363,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   58,   59,   60,
  363,   62,   63,   -1,   -1,   -1,   -1,  328,   -1,   -1,
   -1,   -1,   -1,   -1,   37,   38,   -1,   -1,   41,   42,
   43,   44,   45,   46,   47,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   93,   94,   -1,   58,   59,   60,   -1,   62,
   63,  362,  363,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  124,  125,   -1,  262,  263,  264,   -1,
   93,   94,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  279,  280,  281,  282,  283,  284,  285,
  286,  287,  288,  289,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  124,  125,  299,   37,   38,   -1,   -1,   41,   42,
   43,   44,   45,   46,   47,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   58,   59,   60,   -1,   62,
   63,   -1,  328,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   37,   38,   -1,   -1,   -1,   42,   43,
   -1,   45,   46,   47,   -1,   -1,   -1,   -1,   -1,   -1,
   93,   94,   -1,   -1,   -1,   -1,   60,  363,   62,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  124,  125,   -1,   -1,   -1,   -1,   91,   -1,   -1,
   94,  262,  263,  264,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  279,  280,
  281,  282,  283,  284,  285,  286,  287,  288,  289,   -1,
  124,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  299,  262,
  263,  264,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  279,  280,  281,  282,
  283,  284,  285,  286,  287,  288,  289,  328,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  299,   -1,   38,   -1,
   -1,   41,   -1,   -1,   44,   37,   38,   -1,   -1,   41,
   42,   43,   44,   45,   46,   47,   -1,   -1,   58,   59,
   -1,   -1,  363,   63,   -1,  328,   58,   59,   60,   -1,
   62,   63,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  262,
  263,  264,   -1,   93,   94,   -1,   -1,   -1,   -1,  362,
  363,   93,   94,   -1,   -1,   -1,  279,  280,  281,  282,
  283,  284,  285,  286,  287,  288,  289,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  124,   -1,  299,   -1,   -1,   -1,
   -1,   -1,  124,  125,   -1,   37,   38,   -1,   -1,   41,
   42,   43,   44,   45,   46,   47,  280,  281,  282,  283,
  284,  285,  286,  287,  288,  328,   58,   59,   60,   -1,
   62,   63,   -1,   -1,   -1,  299,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   37,   38,   -1,   -1,   41,   42,   43,
   44,   45,   46,   47,   -1,   -1,   -1,   -1,   -1,  362,
  363,   93,   94,   -1,   58,   59,   60,   -1,   62,   63,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  124,  125,   -1,   -1,   -1,   37,   38,   93,
   94,   41,   42,   43,   44,   45,   46,   47,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   58,   59,
   60,   -1,   62,   63,   -1,   -1,   -1,   -1,   -1,   -1,
  124,  125,  262,  263,  264,   -1,   -1,   -1,   -1,   -1,
  262,  263,  264,   -1,   -1,   -1,   -1,   -1,   -1,  279,
  280,   -1,   41,   93,   94,   44,   -1,  279,  280,  281,
  282,  283,  284,  285,  286,  287,  288,  289,   -1,   58,
   59,   -1,   -1,   -1,   63,   -1,   -1,  299,   -1,   -1,
   -1,   -1,   -1,   -1,  124,  125,   37,   38,   -1,   -1,
   41,   42,   43,   44,   45,   46,   47,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   93,   94,  328,   58,   59,   60,
   -1,   62,   63,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  262,  263,  264,  363,   -1,  124,  125,   -1,   -1,   -1,
   -1,  363,   93,   94,   -1,   -1,   -1,  279,  280,  281,
  282,  283,  284,  285,  286,  287,  288,  289,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  299,  262,  263,
  264,   -1,   -1,  124,  125,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  279,  280,  281,  282,  283,
  284,  285,  286,  287,  288,  289,  328,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  299,   -1,   37,   38,   -1,
   -1,   41,   42,   43,   44,   45,   46,   47,   -1,   -1,
   -1,   -1,  262,  263,  264,   -1,   -1,   -1,   58,   59,
   60,  363,   62,   63,  328,   -1,   -1,   -1,   -1,  279,
  280,  281,  282,  283,  284,  285,  286,  287,  288,  289,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  299,
   -1,   -1,   -1,   93,   94,   -1,   -1,   -1,   -1,  363,
   -1,   -1,   -1,  262,  263,  264,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  328,   -1,
  279,  280,   -1,   -1,  124,  125,   37,   38,   -1,   -1,
   41,   42,   43,   44,   45,   46,   47,   -1,   -1,   -1,
   -1,  262,  263,  264,   -1,   -1,   -1,   58,   59,   60,
   -1,   62,   63,  363,   -1,   -1,   -1,   -1,  279,  280,
  281,  282,  283,  284,  285,  286,  287,  288,  289,  328,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  299,   -1,
   37,   38,   93,   94,   41,   42,   43,   44,   45,   46,
   47,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   58,   59,   60,  363,   62,   63,  328,   -1,   -1,
   -1,   -1,   -1,  124,  125,   -1,   -1,   -1,   37,   38,
   -1,   -1,   41,   42,   43,   44,   45,   46,   47,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   93,   94,   -1,   58,
   59,   60,  363,   62,   63,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  262,  263,  264,   -1,   -1,  124,  125,   -1,
   -1,   -1,   -1,   -1,   93,   94,   -1,   -1,   -1,  279,
  280,  281,  282,  283,  284,  285,  286,  287,  288,  289,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  299,
   -1,   -1,   -1,   -1,   -1,  124,  125,   -1,   37,   38,
   -1,   -1,   41,   42,   43,   44,   45,   46,   47,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  328,   58,
   59,   60,   -1,   62,   63,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  262,  263,  264,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  363,   93,   94,   -1,   -1,  279,  280,
  281,  282,  283,  284,  285,  286,  287,  288,  289,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   37,   38,  124,  125,   41,   42,   43,
   44,   45,   46,   47,   -1,  262,  263,  264,   -1,   -1,
   -1,   -1,   -1,   -1,   58,   59,   60,  328,   62,   63,
   -1,   -1,  279,  280,  281,  282,  283,  284,  285,  286,
  287,  288,  289,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  262,  263,  264,   -1,   -1,   -1,   93,
   94,   -1,  363,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  279,  280,  281,  282,  283,  284,  285,  286,  287,  288,
  289,  328,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  124,  125,   37,   38,   -1,   -1,   41,   42,   43,   44,
   45,   46,   47,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   58,   59,   60,  363,   62,   63,  328,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   37,   38,   -1,   -1,   41,   42,   43,   44,   45,   46,
   47,   -1,   -1,  262,  263,  264,   -1,   -1,   93,   94,
   -1,   58,   59,   60,  363,   62,   63,   -1,   -1,   -1,
  279,  280,  281,  282,  283,  284,  285,  286,  287,  288,
  289,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  124,
  125,   -1,   -1,   -1,   -1,   -1,   93,   94,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  328,
   -1,   -1,   -1,   -1,   -1,   37,   38,  124,  125,   41,
   42,   43,   44,   45,   46,   47,   -1,   -1,  262,  263,
  264,   -1,   -1,   -1,   -1,   -1,   58,   59,   60,   -1,
   62,   63,   -1,   -1,  363,  279,  280,  281,  282,  283,
  284,  285,  286,  287,  288,  289,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   93,   94,   -1,   37,   38,   -1,   -1,   41,   42,
   43,   44,   45,   46,   47,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  328,   58,   59,   60,   -1,   62,
   63,   -1,  124,  125,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  262,  263,  264,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  363,
   93,   94,   -1,   -1,  279,  280,  281,  282,  283,  284,
  285,  286,  287,  288,  289,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  262,  263,  264,   -1,   -1,
   -1,  124,  125,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  279,  280,  281,  282,  283,  284,  285,  286,
  287,  288,  289,  328,   -1,   -1,   -1,   37,   38,   -1,
   -1,   41,   42,   43,   44,   45,   46,   47,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   58,   59,
   60,   -1,   62,   63,   -1,   -1,   -1,   -1,  363,   -1,
   -1,  328,   -1,   -1,   37,   38,   -1,   -1,   41,   42,
   43,   44,   45,   46,   47,   -1,   -1,   -1,   -1,   -1,
  262,  263,  264,   93,   94,   58,   59,   60,   -1,   62,
   63,   -1,   -1,   -1,   -1,   -1,  363,  279,  280,  281,
  282,  283,  284,  285,  286,  287,  288,  289,   -1,   -1,
   -1,   -1,   -1,   -1,  124,  125,   -1,   -1,   -1,   -1,
   93,   94,   37,   38,   -1,   -1,   41,   42,   43,   44,
   45,   46,   47,   -1,   -1,   -1,   -1,   -1,   -1,  262,
  263,  264,   -1,   58,   59,   60,  328,   62,   63,   -1,
   -1,  124,  125,   -1,   -1,   -1,  279,  280,  281,  282,
  283,  284,  285,  286,  287,  288,  289,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   93,   94,
   -1,  363,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   37,   38,   -1,   -1,   41,   42,   43,
   44,   45,   46,   47,   -1,  328,   -1,   -1,   -1,  124,
  125,   -1,   -1,   -1,   58,   59,   60,   -1,   62,   63,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  363,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   93,
   94,   -1,  262,  263,  264,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  279,
  280,  281,  282,  283,  284,  285,  286,  287,  288,  289,
  124,  125,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  262,
  263,  264,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  279,  280,  281,  282,
  283,  284,  285,  286,  287,  288,  289,   -1,  328,   37,
   38,   -1,   -1,   41,   42,   43,   44,   45,   46,   47,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   58,   59,   60,   -1,   62,   63,   -1,  262,  263,  264,
   -1,   -1,   -1,  363,   -1,  328,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  279,  280,  281,  282,  283,  284,
  285,  286,  287,  288,  289,   93,   94,   37,   38,   -1,
   -1,   41,   42,   43,   44,   45,   46,   47,   -1,   -1,
  363,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   58,   59,
   60,   -1,   62,   63,   -1,   -1,  124,  125,   -1,   -1,
   -1,   -1,   -1,  328,   -1,   -1,   -1,   -1,  262,  263,
  264,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   93,   94,  279,  280,  281,  282,  283,
  284,  285,  286,  287,  288,   37,   38,   -1,  363,   41,
   42,   43,   44,   45,   46,   47,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  124,  125,   58,   59,   60,   -1,
   62,   63,   37,   38,   -1,   -1,   41,   42,   43,   44,
   45,   46,   47,   -1,  328,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   58,   59,   60,   -1,   62,   63,   37,
   38,   93,   94,   41,   42,   43,   44,   45,   46,   47,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  363,
   58,   59,   60,   -1,   62,   63,   -1,   -1,   93,   94,
   -1,   -1,  124,  125,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  262,  263,  264,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   93,   94,   -1,   -1,  124,
   -1,  279,  280,  281,  282,  283,  284,  285,  286,  287,
  288,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  124,   -1,   -1,   -1,
   37,   38,   -1,   -1,   41,   42,   43,   44,   45,   46,
   47,   -1,  262,  263,  264,   -1,   -1,   -1,   -1,   -1,
  328,   58,   59,   60,   -1,   62,   63,   -1,   -1,  279,
  280,  281,  282,  283,  284,  285,  286,  287,  288,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  363,   93,   94,   -1,   -1,
   -1,   -1,   -1,   37,   38,   -1,   -1,   41,   42,   43,
   44,   45,   46,   47,   -1,   -1,   -1,   -1,  328,   -1,
  262,  263,  264,   -1,   58,   59,   60,  124,   62,   63,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  279,  280,  281,
  282,  283,  284,  285,  286,  287,  288,  262,  263,  264,
   -1,   -1,   -1,  363,   -1,   -1,   -1,   -1,   -1,   93,
   94,   -1,   -1,   -1,  279,  280,  281,  282,  283,  284,
  285,  286,  287,  288,  262,  263,  264,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  328,   -1,   -1,   -1,
  124,  279,  280,  281,  282,  283,  284,  285,  286,  287,
  288,   -1,   -1,   -1,   -1,   37,   38,   -1,   -1,   41,
   42,   43,   44,   45,   46,   47,   -1,   -1,   -1,   -1,
   -1,  363,   -1,   -1,   -1,   -1,   58,   59,   60,   -1,
   62,   63,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   37,   38,   -1,  363,   -1,
   42,   43,   -1,   45,   46,   47,   -1,   -1,   -1,   -1,
   -1,   93,   94,   -1,   -1,  262,  263,  264,   60,   -1,
   62,   63,   -1,   -1,   -1,  363,   -1,   -1,   -1,   -1,
   -1,   -1,  279,  280,  281,  282,  283,  284,  285,  286,
  287,  288,  124,   -1,   -1,   -1,   -1,   -1,   -1,   37,
   38,   -1,   94,   41,   42,   43,   44,   45,   46,   47,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   58,   59,   60,   -1,   62,   63,   -1,   -1,  262,  263,
  264,   -1,  124,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  279,  280,  281,  282,  283,
  284,  285,  286,  287,  288,   93,   94,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  363,   -1,   -1,   -1,
   37,   38,   -1,   -1,   41,   42,   43,   44,   45,   46,
   47,   -1,   -1,   -1,   -1,   -1,  124,   -1,   -1,   -1,
   -1,   58,   59,   60,   -1,   62,   63,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   37,   38,   -1,   -1,   41,   42,   43,   44,
   45,   46,   47,   -1,   -1,   -1,   93,   94,   -1,  363,
  262,  263,  264,   58,   59,   60,   -1,   62,   63,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  279,  280,  281,
  282,  283,  284,  285,  286,  287,  288,  124,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   93,   94,
  262,  263,  264,   -1,   -1,   37,   38,   -1,   -1,   -1,
   42,   43,   -1,   45,   46,   47,   -1,  279,  280,  281,
  282,  283,  284,  285,  286,  287,  288,  289,   60,  124,
   62,   63,   -1,   -1,   37,   38,   -1,  299,   -1,   42,
   43,   -1,   45,   46,   47,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  262,  263,  264,   60,   -1,   62,
   63,  363,   94,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  279,  280,  281,  282,  283,  284,  285,  286,  287,
  288,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   91,   -1,
   -1,   94,  124,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  363,   -1,   -1,   -1,   -1,   -1,   -1,   38,   -1,
   -1,   41,   -1,   43,   44,   45,   46,   -1,   -1,   -1,
   -1,  124,   -1,   -1,   -1,  262,  263,  264,   58,   59,
   60,   -1,   62,   63,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  279,  280,  281,  282,  283,  284,  285,  286,
  287,  288,   -1,   -1,   -1,  363,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   93,   94,   -1,   -1,  262,  263,  264,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  279,  280,  281,  282,  283,  284,
  285,  286,  287,  288,  124,  125,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   38,   -1,   -1,   41,   -1,   43,
   44,   45,   46,   -1,   -1,   -1,  363,   -1,   -1,   -1,
  262,  263,  264,   -1,   58,   59,   60,   -1,   62,   63,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  279,  280,  281,
  282,  283,  284,  285,  286,  287,  288,  289,   -1,  262,
  263,  264,   -1,   -1,   -1,   -1,   -1,  299,  363,   93,
   94,   -1,   -1,   -1,   -1,   -1,  279,  280,  281,  282,
  283,  284,  285,  286,  287,  288,   38,   -1,   -1,   41,
   -1,   43,   44,   45,   46,   -1,  299,   -1,   -1,   -1,
  124,  125,   -1,   -1,   -1,   -1,   58,   59,   60,   -1,
   62,   63,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   37,   38,   -1,   -1,   -1,   42,   43,   -1,   45,   46,
   47,  363,  262,  263,  264,   -1,   -1,   -1,   -1,   -1,
   -1,   93,   94,   60,   -1,   62,   -1,   -1,   -1,  279,
  280,  281,  282,  283,  284,  285,  286,  287,  288,   38,
  363,   -1,   41,   -1,   43,   44,   45,   46,   -1,   -1,
   -1,   -1,  124,  125,   -1,   -1,   -1,   94,   -1,   58,
   59,   60,   -1,   62,   63,   -1,   -1,   -1,   38,   -1,
   -1,   41,   -1,   43,   44,   45,   46,   -1,  328,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  124,   58,   59,
   60,   -1,   62,   63,   93,   94,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   38,
   -1,   -1,   41,  363,   43,   44,   45,   46,  262,  263,
  264,   -1,   -1,   93,   94,  124,   -1,   -1,   -1,   58,
   59,   60,   -1,   62,   63,  279,  280,  281,  282,  283,
  284,  285,  286,  287,  288,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  124,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   93,   94,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   38,   -1,   -1,   41,  328,   -1,   44,   -1,   -1,   -1,
  262,  263,  264,   -1,   -1,  124,   -1,   -1,   -1,   -1,
   58,   59,   60,   -1,   62,   63,   -1,  279,  280,  281,
  282,  283,  284,  285,  286,  287,  288,   38,   -1,  363,
   41,   -1,   -1,   44,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   93,   94,   58,   59,   60,
   -1,   62,   63,  280,  281,  282,  283,  284,  285,  286,
  287,  288,  289,   -1,   -1,   -1,  328,   -1,   -1,   -1,
   -1,   -1,  299,  262,  263,  264,  124,  125,   -1,   -1,
   -1,   -1,   93,   94,   -1,   -1,   -1,   -1,   -1,   -1,
  279,  280,  281,  282,  283,  284,  285,  286,  287,  288,
   -1,  363,  262,  263,  264,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  124,   -1,   -1,   -1,   -1,   -1,  279,
  280,  281,  282,  283,  284,  285,  286,  287,  288,   -1,
   -1,   38,   -1,   -1,   41,   -1,   -1,   44,   -1,   -1,
   -1,   -1,   -1,  262,  263,  264,   -1,   -1,   -1,   -1,
   -1,   58,   59,   60,   -1,   62,   63,   -1,   -1,   -1,
  279,  280,  281,  282,  283,  284,  285,  286,  287,  288,
   37,   38,   -1,   -1,  363,   42,   43,   -1,   45,   46,
   47,   -1,   -1,   -1,   -1,   -1,   93,   94,   -1,   -1,
   -1,   -1,   -1,   60,   -1,   62,   63,   -1,   -1,   -1,
   -1,   -1,   -1,  363,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  262,  263,  264,  124,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   94,   -1,   -1,
   -1,  279,  280,  281,  282,  283,  284,  285,  286,  287,
  288,   -1,   -1,   -1,  363,   -1,   -1,   -1,   -1,   -1,
   -1,  262,  263,  264,   -1,   -1,   -1,  124,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  279,  280,
  281,  282,  283,  284,  285,  286,  287,  288,   37,   38,
  328,   -1,   -1,   42,   43,   -1,   45,   46,   47,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   58,
   59,   60,   -1,   62,   63,   -1,   -1,   -1,   -1,   -1,
   -1,   37,   38,   -1,   -1,  363,   42,   43,   -1,   45,
   46,   47,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   59,   60,   94,   62,   63,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  363,   -1,   -1,  262,  263,  264,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  124,   -1,   -1,   94,   -1,
   -1,   -1,  279,  280,  281,  282,  283,  284,  285,  286,
  287,  288,   37,   38,   -1,   -1,   -1,   42,   43,   -1,
   45,   46,   47,   -1,   -1,  262,  263,  264,  124,   -1,
   -1,   -1,   -1,   -1,   59,   60,   -1,   62,   63,   -1,
   -1,   -1,  279,  280,  281,  282,  283,  284,  285,  286,
  287,  288,  289,   -1,   -1,   37,   38,   -1,   -1,   -1,
   42,   43,  299,   45,   46,   47,   -1,   -1,   -1,   94,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   59,   60,   -1,
   62,   63,   -1,   -1,   37,   38,  363,   -1,   -1,   42,
   43,  328,   45,   46,   47,   -1,   -1,   -1,   -1,  124,
   -1,   -1,   -1,   -1,   -1,   -1,   59,   60,   -1,   62,
   63,   -1,   94,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   37,   38,   -1,   -1,   -1,   42,   43,   -1,
   45,   46,   47,  262,  263,  264,   -1,   -1,   -1,   -1,
   -1,   94,  124,   -1,   59,   60,   -1,   62,   63,   -1,
  279,  280,  281,  282,  283,  284,  285,  286,  287,  288,
  289,   -1,   -1,   -1,   -1,   -1,  262,  263,  264,   -1,
  299,  124,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   94,
   -1,   -1,   -1,  279,  280,  281,  282,  283,  284,  285,
  286,  287,  288,  289,   -1,   -1,   37,   38,   -1,   -1,
   41,   42,   43,  299,   45,   46,   47,   -1,   -1,  124,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   60,
   -1,   62,   63,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  262,  263,  264,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   94,  279,  280,  281,  282,  283,  284,
  285,  286,  287,  288,  289,   -1,   -1,   37,   38,   -1,
   -1,   41,   42,   43,  299,   45,   46,   47,   -1,   -1,
  262,  263,  264,  124,   -1,   -1,   -1,   -1,   -1,   -1,
   60,   -1,   62,   63,   -1,   -1,   -1,  279,  280,  281,
  282,  283,  284,  285,  286,  287,  288,  289,   -1,  262,
  263,  264,   -1,   -1,   -1,   -1,   -1,  299,   -1,   -1,
   -1,   -1,   -1,   -1,   94,   -1,  279,  280,  281,  282,
  283,  284,  285,  286,  287,  288,  289,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  299,  262,  263,  264,
   -1,   -1,   -1,   -1,  124,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  279,  280,  281,  282,  283,  284,
  285,  286,  287,  288,  289,   -1,   -1,   37,   38,   -1,
   -1,   -1,   42,   43,  299,   45,   46,   47,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   60,   -1,   62,   63,   -1,   -1,   -1,   -1,   -1,   -1,
   37,   38,   -1,   -1,   -1,   42,   43,   -1,   45,   46,
   47,  262,  263,  264,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   60,   94,   62,   63,   -1,  279,  280,
  281,  282,  283,  284,  285,  286,  287,  288,  289,   -1,
   -1,   37,   38,   -1,   -1,   -1,   42,   43,  299,   45,
   46,   47,   -1,   -1,  124,  125,   -1,   94,   -1,   -1,
   -1,   -1,   58,   -1,   60,   -1,   62,   63,   -1,   37,
   38,   -1,   -1,   -1,   42,   43,   -1,   45,   46,   47,
   -1,   -1,  262,  263,  264,   -1,   -1,  124,  125,   -1,
   -1,   -1,   60,   -1,   62,   63,   -1,   -1,   94,  279,
  280,  281,  282,  283,  284,  285,  286,  287,  288,  289,
   -1,   -1,   37,   38,   -1,   -1,   -1,   42,   43,  299,
   45,   46,   47,   -1,   -1,   -1,   94,   -1,  124,   -1,
   -1,   -1,   -1,   -1,   -1,   60,   -1,   62,   63,   -1,
   -1,   -1,   -1,   -1,   -1,   37,   38,   -1,   -1,   -1,
   42,   43,   -1,   45,   46,   47,  124,  125,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   60,   94,
   62,   63,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  262,  263,  264,   -1,   -1,   -1,   -1,  124,
  125,   -1,   94,   -1,   -1,   -1,   -1,   -1,   -1,  279,
  280,  281,  282,  283,  284,  285,  286,  287,  288,  289,
   -1,   -1,   -1,   -1,   -1,  262,  263,  264,   -1,  299,
   -1,   -1,  124,  125,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  279,  280,  281,  282,  283,  284,  285,  286,
  287,  288,  289,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  299,   -1,   -1,   -1,  262,  263,  264,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  279,  280,  281,  282,  283,  284,  285,
  286,  287,  288,  289,  262,  263,  264,   -1,   -1,   -1,
   -1,   -1,   -1,  299,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  279,  280,  281,  282,  283,  284,  285,  286,  287,
  288,  289,   -1,   -1,   37,   38,   -1,   -1,   -1,   42,
   43,  299,   45,   46,   47,   -1,   -1,  262,  263,  264,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   60,   -1,   62,
   63,   -1,   -1,   -1,  279,  280,  281,  282,  283,  284,
  285,  286,  287,  288,  289,   -1,   -1,   -1,   -1,   -1,
  262,  263,  264,   -1,  299,   -1,   -1,   -1,   -1,   -1,
   -1,   94,   -1,   -1,   -1,   -1,   -1,  279,  280,  281,
  282,  283,  284,  285,  286,  287,  288,  289,   -1,   -1,
   37,   38,   -1,   -1,   -1,   42,   43,  299,   45,   46,
   47,  124,  125,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   60,   -1,   62,   63,   -1,   37,   38,
   -1,   -1,   -1,   42,   43,   -1,   45,   46,   47,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   60,   -1,   62,   63,   -1,   -1,   94,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   37,   38,   -1,   -1,
   -1,   42,   43,   -1,   45,   46,   47,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   94,   -1,  124,  125,   60,
   -1,   62,   63,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   37,   38,   -1,   -1,   41,   42,
   43,   -1,   45,   46,   47,  124,  125,   -1,   -1,   -1,
   -1,   -1,   -1,   94,   -1,   -1,   -1,   60,   -1,   62,
   63,   -1,   -1,   -1,   -1,   -1,   -1,   37,   38,   -1,
   -1,   -1,   42,   43,   -1,   45,   46,   47,   -1,  262,
  263,  264,   -1,  124,  125,   -1,   -1,   -1,   91,   -1,
   60,   94,   62,   63,   -1,   -1,  279,  280,  281,  282,
  283,  284,  285,  286,  287,  288,  289,   -1,   -1,   37,
   38,   -1,   -1,   -1,   42,   43,  299,   45,   46,   47,
   -1,  124,   -1,   93,   94,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   60,   -1,   62,   63,   -1,   37,   38,   -1,
   -1,   -1,   42,   43,   -1,   45,   46,   47,   -1,   -1,
   -1,   -1,   -1,   -1,  124,  262,  263,  264,   58,   -1,
   60,   -1,   62,   63,   -1,   -1,   94,   -1,   -1,   -1,
   -1,   -1,  279,  280,  281,  282,  283,  284,  285,  286,
  287,  288,  289,  262,  263,  264,   -1,   -1,   -1,   -1,
   -1,   91,  299,   -1,   94,   -1,  124,  125,   -1,   -1,
  279,  280,  281,  282,  283,  284,  285,  286,  287,  288,
  289,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  299,  262,  263,  264,  124,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  279,  280,
  281,  282,  283,  284,  285,  286,  287,  288,  289,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  299,  262,
  263,  264,   -1,   37,   38,   -1,   -1,   -1,   42,   43,
   -1,   45,   46,   47,   -1,   -1,  279,  280,  281,  282,
  283,  284,  285,  286,  287,  288,   60,   -1,   62,   63,
   -1,   -1,  262,  263,  264,   -1,  299,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  279,
  280,  281,  282,  283,  284,  285,  286,  287,  288,  289,
   94,   37,   38,   -1,   -1,   41,   42,   -1,   44,  299,
   46,   47,   -1,   -1,  262,  263,  264,   -1,   -1,   -1,
   -1,   -1,   -1,   59,   60,   -1,   62,   63,   -1,   -1,
  124,  279,  280,  281,  282,  283,  284,  285,  286,  287,
  288,  289,  262,  263,  264,   -1,   -1,   37,   38,   -1,
   -1,  299,   42,   43,   -1,   45,   46,   47,   94,  279,
  280,  281,  282,  283,  284,  285,  286,  287,  288,   -1,
   60,   -1,   62,   63,   -1,   -1,   -1,   -1,   -1,  299,
   -1,   -1,   -1,   -1,   -1,   37,   38,   -1,  124,   -1,
   42,   43,   -1,   45,   46,   47,   -1,   -1,   -1,   -1,
   -1,   91,   -1,   93,   94,   -1,   -1,   -1,   60,   -1,
   62,   63,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   37,   38,   -1,   -1,   -1,   42,   43,
   -1,   45,   46,   47,  124,   -1,   -1,   -1,   -1,   91,
   -1,   -1,   94,   -1,   -1,   -1,   60,   -1,   62,   63,
   37,   38,   -1,   -1,   -1,   42,   43,   -1,   45,   46,
   47,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  262,  263,
  264,   -1,  124,   60,   -1,   62,   63,   -1,   -1,   -1,
   94,   -1,   -1,   -1,   -1,  279,  280,  281,  282,  283,
  284,  285,  286,  287,  288,  289,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  299,   -1,   94,   -1,   -1,
  124,   -1,   -1,   37,   38,   -1,   -1,   -1,   42,   43,
   -1,   45,   46,   47,   -1,   -1,  262,  263,  264,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   60,  124,   62,   63,
   -1,   -1,   -1,  279,  280,  281,  282,  283,  284,  285,
  286,  287,  288,  289,   -1,   -1,   37,   38,   -1,   -1,
   -1,   42,   43,  299,   45,   46,   47,   91,   -1,   -1,
   94,   -1,  262,  263,  264,   -1,   -1,   -1,   -1,   60,
   -1,   62,   63,   -1,   -1,   -1,   -1,   -1,   -1,  279,
  280,  281,  282,  283,  284,  285,  286,  287,  288,   -1,
  124,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  299,
  262,  263,  264,   94,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  279,  280,  281,
  282,  283,  284,  285,  286,  287,  288,   -1,   -1,   -1,
   -1,   -1,   -1,  124,   -1,   -1,   -1,  299,  262,  263,
  264,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  279,  280,  281,  282,  283,
  284,  285,  286,  287,  288,  289,  263,  264,   -1,   -1,
   -1,   37,   38,   -1,   -1,  299,   42,   43,   -1,   45,
   46,   47,  279,  280,  281,  282,  283,  284,  285,  286,
  287,  288,  289,   -1,   60,   -1,   62,   63,   37,   38,
   -1,   -1,  299,   42,   43,   -1,   45,   46,   47,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   60,   -1,   62,   63,   91,   -1,   -1,   94,  263,
  264,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  279,  280,  281,  282,  283,
  284,  285,  286,  287,  288,   94,   -1,   -1,  124,   -1,
   -1,   37,   38,   -1,   -1,  299,   42,   43,   -1,   45,
   46,   47,   -1,  264,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   60,  124,   62,   63,  279,  280,
  281,  282,  283,  284,  285,  286,  287,  288,  289,   -1,
   -1,   37,   38,   -1,   -1,   -1,   42,   43,  299,   45,
   46,   47,   -1,   -1,   -1,   91,   -1,   -1,   94,   -1,
   -1,   -1,   37,   38,   60,   -1,   62,   42,   43,   -1,
   45,   46,   47,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   60,   -1,   62,  124,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   94,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   37,   38,   -1,   -1,   91,   42,   43,   94,
   45,   46,   47,   -1,   -1,   -1,   -1,   -1,  124,   -1,
   -1,   -1,   -1,   -1,   -1,   60,   -1,   62,  264,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  124,
   -1,   -1,   -1,  279,  280,  281,  282,  283,  284,  285,
  286,  287,  288,   -1,   -1,   -1,   -1,   -1,   -1,   94,
   -1,   -1,   -1,  299,   -1,   -1,   -1,   -1,   -1,   -1,
  279,  280,  281,  282,  283,  284,  285,  286,  287,  288,
  289,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  124,
  299,   -1,   -1,   -1,   -1,   -1,   -1,   37,   38,   -1,
   -1,   -1,   42,   43,   -1,   45,   46,   47,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   60,   -1,   62,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  279,  280,  281,  282,  283,  284,  285,
  286,  287,  288,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   91,   -1,  299,   94,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  279,  280,  281,  282,  283,  284,  285,
  286,  287,  288,  289,  124,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  299,  279,  280,  281,  282,  283,  284,
  285,  286,  287,  288,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  299,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  281,  282,  283,  284,
  285,  286,  287,  288,  289,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  299,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  281,  282,  283,  284,  285,  286,  287,  288,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  299,
};
}
final static short YYFINAL=1;
final static short YYMAXTOKEN=388;
final static String yyname[] = {
"end-of-file",null,null,null,null,null,null,null,null,null,null,null,null,null,
null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,
null,null,null,"'!'","'\"'",null,"'$'","'%'","'&'",null,"'('","')'","'*'","'+'",
"','","'-'","'.'","'/'",null,null,null,null,null,null,null,null,null,null,"':'",
"';'","'<'","'='","'>'","'?'","'@'",null,null,null,null,null,null,null,null,
null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,
null,null,"'['",null,"']'","'^'",null,"'`'",null,null,null,null,null,null,null,
null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,
null,null,null,"'{'","'|'","'}'","'~'",null,null,null,null,null,null,null,null,
null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,
null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,
null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,
null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,
null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,
null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,
null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,
null,null,null,null,null,null,null,null,null,null,"T_INCLUDE","T_INCLUDE_ONCE",
"T_EVAL","T_REQUIRE","T_REQUIRE_ONCE","T_LOGICAL_OR","T_LOGICAL_XOR",
"T_LOGICAL_AND","T_PRINT","T_YIELD","T_PLUS_EQUAL","T_MINUS_EQUAL",
"T_MUL_EQUAL","T_DIV_EQUAL","T_CONCAT_EQUAL","T_MOD_EQUAL","T_AND_EQUAL",
"T_OR_EQUAL","T_XOR_EQUAL","T_SL_EQUAL","T_SR_EQUAL","T_POW_EQUAL",
"T_BOOLEAN_OR","T_BOOLEAN_AND","T_IS_EQUAL","T_IS_NOT_EQUAL","T_IS_IDENTICAL",
"T_IS_NOT_IDENTICAL","T_IS_SMALLER_OR_EQUAL","T_IS_GREATER_OR_EQUAL","T_SL",
"T_SR","T_INSTANCEOF","T_INC","T_DEC","T_INT_CAST","T_DOUBLE_CAST",
"T_STRING_CAST","T_ARRAY_CAST","T_OBJECT_CAST","T_BOOL_CAST","T_UNSET_CAST",
"T_POW","T_NEW","T_CLONE","T_EXIT","T_IF","T_ELSEIF","T_ELSE","T_ENDIF",
"T_LNUMBER","T_DNUMBER","T_STRING","T_STRING_VARNAME","T_VARIABLE",
"T_NUM_STRING","T_INLINE_HTML","T_CHARACTER","T_BAD_CHARACTER",
"T_ENCAPSED_AND_WHITESPACE","T_CONSTANT_ENCAPSED_STRING","T_ECHO","T_DO",
"T_WHILE","T_ENDWHILE","T_FOR","T_ENDFOR","T_FOREACH","T_ENDFOREACH",
"T_DECLARE","T_ENDDECLARE","T_AS","T_SWITCH","T_ENDSWITCH","T_CASE","T_DEFAULT",
"T_BREAK","T_CONTINUE","T_GOTO","T_FUNCTION","T_CONST","T_RETURN","T_TRY",
"T_CATCH","T_FINALLY","T_THROW","T_USE","T_INSTEADOF","T_GLOBAL","T_STATIC",
"T_ABSTRACT","T_FINAL","T_PRIVATE","T_PROTECTED","T_PUBLIC","T_VAR","T_UNSET",
"T_ISSET","T_EMPTY","T_HALT_COMPILER","T_CLASS","T_TRAIT","T_INTERFACE",
"T_EXTENDS","T_IMPLEMENTS","T_OBJECT_OPERATOR","T_DOUBLE_ARROW","T_LIST",
"T_ARRAY","T_CALLABLE","T_CLASS_C","T_TRAIT_C","T_METHOD_C","T_FUNC_C","T_LINE",
"T_FILE","T_COMMENT","T_DOC_COMMENT","T_OPEN_TAG","T_OPEN_TAG_WITH_ECHO",
"T_CLOSE_TAG","T_WHITESPACE","T_START_HEREDOC","T_END_HEREDOC",
"T_DOLLAR_OPEN_CURLY_BRACES","T_CURLY_OPEN","T_PAAMAYIM_NEKUDOTAYIM",
"T_NAMESPACE","T_NS_C","T_DIR","T_NS_SEPARATOR","T_ELLIPSIS",
};
final static String yyrule[] = {
"$accept : start",
"start : top_statement_list",
"top_statement_list : top_statement_list top_statement",
"top_statement_list :",
"namespace_name_parts : T_STRING",
"namespace_name_parts : namespace_name_parts T_NS_SEPARATOR T_STRING",
"namespace_name : namespace_name_parts",
"top_statement : statement",
"top_statement : function_declaration_statement",
"top_statement : class_declaration_statement",
"top_statement : T_HALT_COMPILER",
"top_statement : T_NAMESPACE namespace_name ';'",
"top_statement : T_NAMESPACE namespace_name '{' top_statement_list '}'",
"top_statement : T_NAMESPACE '{' top_statement_list '}'",
"top_statement : T_USE use_declarations ';'",
"top_statement : T_USE T_FUNCTION use_declarations ';'",
"top_statement : T_USE T_CONST use_declarations ';'",
"top_statement : T_CONST constant_declaration_list ';'",
"use_declarations : use_declarations ',' use_declaration",
"use_declarations : use_declaration",
"use_declaration : namespace_name",
"use_declaration : namespace_name T_AS T_STRING",
"use_declaration : T_NS_SEPARATOR namespace_name",
"use_declaration : T_NS_SEPARATOR namespace_name T_AS T_STRING",
"constant_declaration_list : constant_declaration_list ',' constant_declaration",
"constant_declaration_list : constant_declaration",
"constant_declaration : T_STRING '=' static_scalar",
"inner_statement_list : inner_statement_list inner_statement",
"inner_statement_list :",
"inner_statement : statement",
"inner_statement : function_declaration_statement",
"inner_statement : class_declaration_statement",
"inner_statement : T_HALT_COMPILER",
"statement : '{' inner_statement_list '}'",
"statement : T_IF parentheses_expr statement elseif_list else_single",
"statement : T_IF parentheses_expr ':' inner_statement_list new_elseif_list new_else_single T_ENDIF ';'",
"statement : T_WHILE parentheses_expr while_statement",
"statement : T_DO statement T_WHILE parentheses_expr ';'",
"statement : T_FOR '(' for_expr ';' for_expr ';' for_expr ')' for_statement",
"statement : T_SWITCH parentheses_expr switch_case_list",
"statement : T_BREAK ';'",
"statement : T_BREAK expr ';'",
"statement : T_CONTINUE ';'",
"statement : T_CONTINUE expr ';'",
"statement : T_RETURN ';'",
"statement : T_RETURN expr ';'",
"statement : yield_expr ';'",
"statement : T_GLOBAL global_var_list ';'",
"statement : T_STATIC static_var_list ';'",
"statement : T_ECHO expr_list ';'",
"statement : T_INLINE_HTML",
"statement : expr ';'",
"statement : T_UNSET '(' variables_list ')' ';'",
"statement : T_FOREACH '(' expr T_AS foreach_variable ')' foreach_statement",
"statement : T_FOREACH '(' expr T_AS variable T_DOUBLE_ARROW foreach_variable ')' foreach_statement",
"statement : T_DECLARE '(' declare_list ')' declare_statement",
"statement : ';'",
"statement : T_TRY '{' inner_statement_list '}' catches optional_finally",
"statement : T_THROW expr ';'",
"statement : T_GOTO T_STRING ';'",
"statement : T_STRING ':'",
"catches :",
"catches : catches catch",
"catch : T_CATCH '(' name T_VARIABLE ')' '{' inner_statement_list '}'",
"optional_finally :",
"optional_finally : T_FINALLY '{' inner_statement_list '}'",
"variables_list : variable",
"variables_list : variables_list ',' variable",
"optional_ref :",
"optional_ref : '&'",
"optional_ellipsis :",
"optional_ellipsis : T_ELLIPSIS",
"function_declaration_statement : T_FUNCTION optional_ref T_STRING '(' parameter_list ')' '{' inner_statement_list '}'",
"class_declaration_statement : class_entry_type T_STRING extends_from implements_list '{' class_statement_list '}'",
"class_declaration_statement : T_INTERFACE T_STRING interface_extends_list '{' class_statement_list '}'",
"class_declaration_statement : T_TRAIT T_STRING '{' class_statement_list '}'",
"class_entry_type : T_CLASS",
"class_entry_type : T_ABSTRACT T_CLASS",
"class_entry_type : T_FINAL T_CLASS",
"extends_from :",
"extends_from : T_EXTENDS name",
"interface_extends_list :",
"interface_extends_list : T_EXTENDS name_list",
"implements_list :",
"implements_list : T_IMPLEMENTS name_list",
"name_list : name",
"name_list : name_list ',' name",
"for_statement : statement",
"for_statement : ':' inner_statement_list T_ENDFOR ';'",
"foreach_statement : statement",
"foreach_statement : ':' inner_statement_list T_ENDFOREACH ';'",
"declare_statement : statement",
"declare_statement : ':' inner_statement_list T_ENDDECLARE ';'",
"declare_list : declare_list_element",
"declare_list : declare_list ',' declare_list_element",
"declare_list_element : T_STRING '=' static_scalar",
"switch_case_list : '{' case_list '}'",
"switch_case_list : '{' ';' case_list '}'",
"switch_case_list : ':' case_list T_ENDSWITCH ';'",
"switch_case_list : ':' ';' case_list T_ENDSWITCH ';'",
"case_list :",
"case_list : case_list case",
"case : T_CASE expr case_separator inner_statement_list",
"case : T_DEFAULT case_separator inner_statement_list",
"case_separator : ':'",
"case_separator : ';'",
"while_statement : statement",
"while_statement : ':' inner_statement_list T_ENDWHILE ';'",
"elseif_list :",
"elseif_list : elseif_list elseif",
"elseif : T_ELSEIF parentheses_expr statement",
"new_elseif_list :",
"new_elseif_list : new_elseif_list new_elseif",
"new_elseif : T_ELSEIF parentheses_expr ':' inner_statement_list",
"else_single :",
"else_single : T_ELSE statement",
"new_else_single :",
"new_else_single : T_ELSE ':' inner_statement_list",
"foreach_variable : variable",
"foreach_variable : '&' variable",
"foreach_variable : list_expr",
"parameter_list : non_empty_parameter_list",
"parameter_list :",
"non_empty_parameter_list : parameter",
"non_empty_parameter_list : non_empty_parameter_list ',' parameter",
"parameter : optional_class_type optional_ref optional_ellipsis T_VARIABLE",
"parameter : optional_class_type optional_ref optional_ellipsis T_VARIABLE '=' static_scalar",
"optional_class_type :",
"optional_class_type : name",
"optional_class_type : T_ARRAY",
"optional_class_type : T_CALLABLE",
"argument_list : '(' ')'",
"argument_list : '(' non_empty_argument_list ')'",
"argument_list : '(' yield_expr ')'",
"non_empty_argument_list : argument",
"non_empty_argument_list : non_empty_argument_list ',' argument",
"argument : expr",
"argument : '&' variable",
"argument : T_ELLIPSIS expr",
"global_var_list : global_var_list ',' global_var",
"global_var_list : global_var",
"global_var : T_VARIABLE",
"global_var : '$' variable",
"global_var : '$' '{' expr '}'",
"static_var_list : static_var_list ',' static_var",
"static_var_list : static_var",
"static_var : T_VARIABLE",
"static_var : T_VARIABLE '=' static_scalar",
"class_statement_list : class_statement_list class_statement",
"class_statement_list :",
"class_statement : variable_modifiers property_declaration_list ';'",
"class_statement : T_CONST constant_declaration_list ';'",
"class_statement : method_modifiers T_FUNCTION optional_ref T_STRING '(' parameter_list ')' method_body",
"class_statement : T_USE name_list trait_adaptations",
"trait_adaptations : ';'",
"trait_adaptations : '{' trait_adaptation_list '}'",
"trait_adaptation_list :",
"trait_adaptation_list : trait_adaptation_list trait_adaptation",
"trait_adaptation : trait_method_reference_fully_qualified T_INSTEADOF name_list ';'",
"trait_adaptation : trait_method_reference T_AS member_modifier T_STRING ';'",
"trait_adaptation : trait_method_reference T_AS member_modifier ';'",
"trait_adaptation : trait_method_reference T_AS T_STRING ';'",
"trait_method_reference_fully_qualified : name T_PAAMAYIM_NEKUDOTAYIM T_STRING",
"trait_method_reference : trait_method_reference_fully_qualified",
"trait_method_reference : T_STRING",
"method_body : ';'",
"method_body : '{' inner_statement_list '}'",
"variable_modifiers : non_empty_member_modifiers",
"variable_modifiers : T_VAR",
"method_modifiers :",
"method_modifiers : non_empty_member_modifiers",
"non_empty_member_modifiers : member_modifier",
"non_empty_member_modifiers : non_empty_member_modifiers member_modifier",
"member_modifier : T_PUBLIC",
"member_modifier : T_PROTECTED",
"member_modifier : T_PRIVATE",
"member_modifier : T_STATIC",
"member_modifier : T_ABSTRACT",
"member_modifier : T_FINAL",
"property_declaration_list : property_declaration",
"property_declaration_list : property_declaration_list ',' property_declaration",
"property_declaration : T_VARIABLE",
"property_declaration : T_VARIABLE '=' static_scalar",
"expr_list : expr_list ',' expr",
"expr_list : expr",
"for_expr :",
"for_expr : expr_list",
"expr : variable",
"expr : list_expr '=' expr",
"expr : variable '=' expr",
"expr : variable '=' '&' variable",
"expr : variable '=' '&' new_expr",
"expr : new_expr",
"expr : T_CLONE expr",
"expr : variable T_PLUS_EQUAL expr",
"expr : variable T_MINUS_EQUAL expr",
"expr : variable T_MUL_EQUAL expr",
"expr : variable T_DIV_EQUAL expr",
"expr : variable T_CONCAT_EQUAL expr",
"expr : variable T_MOD_EQUAL expr",
"expr : variable T_AND_EQUAL expr",
"expr : variable T_OR_EQUAL expr",
"expr : variable T_XOR_EQUAL expr",
"expr : variable T_SL_EQUAL expr",
"expr : variable T_SR_EQUAL expr",
"expr : variable T_POW_EQUAL expr",
"expr : variable T_INC",
"expr : T_INC variable",
"expr : variable T_DEC",
"expr : T_DEC variable",
"expr : expr T_BOOLEAN_OR expr",
"expr : expr T_BOOLEAN_AND expr",
"expr : expr T_LOGICAL_OR expr",
"expr : expr T_LOGICAL_AND expr",
"expr : expr T_LOGICAL_XOR expr",
"expr : expr '|' expr",
"expr : expr '&' expr",
"expr : expr '^' expr",
"expr : expr '.' expr",
"expr : expr '+' expr",
"expr : expr '-' expr",
"expr : expr '*' expr",
"expr : expr '/' expr",
"expr : expr '%' expr",
"expr : expr T_SL expr",
"expr : expr T_SR expr",
"expr : expr T_POW expr",
"expr : '+' expr",
"expr : '-' expr",
"expr : '!' expr",
"expr : '~' expr",
"expr : expr T_IS_IDENTICAL expr",
"expr : expr T_IS_NOT_IDENTICAL expr",
"expr : expr T_IS_EQUAL expr",
"expr : expr T_IS_NOT_EQUAL expr",
"expr : expr '<' expr",
"expr : expr T_IS_SMALLER_OR_EQUAL expr",
"expr : expr '>' expr",
"expr : expr T_IS_GREATER_OR_EQUAL expr",
"expr : expr T_INSTANCEOF class_name_reference",
"expr : parentheses_expr",
"expr : '(' new_expr ')'",
"expr : expr '?' expr ':' expr",
"expr : expr '?' ':' expr",
"expr : T_ISSET '(' variables_list ')'",
"expr : T_EMPTY '(' expr ')'",
"expr : T_INCLUDE expr",
"expr : T_INCLUDE_ONCE expr",
"expr : T_EVAL parentheses_expr",
"expr : T_REQUIRE expr",
"expr : T_REQUIRE_ONCE expr",
"expr : T_INT_CAST expr",
"expr : T_DOUBLE_CAST expr",
"expr : T_STRING_CAST expr",
"expr : T_ARRAY_CAST expr",
"expr : T_OBJECT_CAST expr",
"expr : T_BOOL_CAST expr",
"expr : T_UNSET_CAST expr",
"expr : T_EXIT exit_expr",
"expr : '@' expr",
"expr : scalar",
"expr : array_expr",
"expr : scalar_dereference",
"expr : '`' backticks_expr '`'",
"expr : T_PRINT expr",
"expr : T_YIELD",
"expr : T_FUNCTION optional_ref '(' parameter_list ')' lexical_vars '{' inner_statement_list '}'",
"expr : T_STATIC T_FUNCTION optional_ref '(' parameter_list ')' lexical_vars '{' inner_statement_list '}'",
"parentheses_expr : '(' expr ')'",
"parentheses_expr : '(' yield_expr ')'",
"yield_expr : T_YIELD expr",
"yield_expr : T_YIELD expr T_DOUBLE_ARROW expr",
"array_expr : T_ARRAY '(' array_pair_list ')'",
"array_expr : '[' array_pair_list ']'",
"scalar_dereference : array_expr '[' dim_offset ']'",
"scalar_dereference : T_CONSTANT_ENCAPSED_STRING '[' dim_offset ']'",
"scalar_dereference : scalar_dereference '[' dim_offset ']'",
"new_expr : T_NEW class_name_reference ctor_arguments",
"lexical_vars :",
"lexical_vars : T_USE '(' lexical_var_list ')'",
"lexical_var_list : lexical_var",
"lexical_var_list : lexical_var_list ',' lexical_var",
"lexical_var : optional_ref T_VARIABLE",
"function_call : name argument_list",
"function_call : class_name_or_var T_PAAMAYIM_NEKUDOTAYIM T_STRING argument_list",
"function_call : class_name_or_var T_PAAMAYIM_NEKUDOTAYIM '{' expr '}' argument_list",
"function_call : static_property argument_list",
"function_call : variable_without_objects argument_list",
"function_call : function_call '[' dim_offset ']'",
"class_name : T_STATIC",
"class_name : name",
"name : namespace_name_parts",
"name : T_NS_SEPARATOR namespace_name_parts",
"name : T_NAMESPACE T_NS_SEPARATOR namespace_name_parts",
"class_name_reference : class_name",
"class_name_reference : dynamic_class_name_reference",
"dynamic_class_name_reference : object_access_for_dcnr",
"dynamic_class_name_reference : base_variable",
"class_name_or_var : class_name",
"class_name_or_var : reference_variable",
"object_access_for_dcnr :",
"object_access_for_dcnr : base_variable T_OBJECT_OPERATOR object_property",
"object_access_for_dcnr : object_access_for_dcnr T_OBJECT_OPERATOR object_property",
"object_access_for_dcnr : object_access_for_dcnr '[' dim_offset ']'",
"object_access_for_dcnr : object_access_for_dcnr '{' expr '}'",
"exit_expr :",
"exit_expr : '(' ')'",
"exit_expr : parentheses_expr",
"backticks_expr :",
"backticks_expr : T_ENCAPSED_AND_WHITESPACE",
"backticks_expr : encaps_list",
"ctor_arguments :",
"ctor_arguments : argument_list",
"common_scalar : T_LNUMBER",
"common_scalar : T_DNUMBER",
"common_scalar : T_CONSTANT_ENCAPSED_STRING",
"common_scalar : T_LINE",
"common_scalar : T_FILE",
"common_scalar : T_DIR",
"common_scalar : T_CLASS_C",
"common_scalar : T_TRAIT_C",
"common_scalar : T_METHOD_C",
"common_scalar : T_FUNC_C",
"common_scalar : T_NS_C",
"common_scalar : T_START_HEREDOC T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC",
"common_scalar : T_START_HEREDOC T_END_HEREDOC",
"common_scalar : name",
"static_scalar : common_scalar",
"static_scalar : class_name T_PAAMAYIM_NEKUDOTAYIM class_const_name",
"static_scalar : T_ARRAY '(' static_array_pair_list ')'",
"static_scalar : '[' static_array_pair_list ']'",
"static_scalar : static_operation",
"static_operation : static_scalar T_BOOLEAN_OR static_scalar",
"static_operation : static_scalar T_BOOLEAN_AND static_scalar",
"static_operation : static_scalar T_LOGICAL_OR static_scalar",
"static_operation : static_scalar T_LOGICAL_AND static_scalar",
"static_operation : static_scalar T_LOGICAL_XOR static_scalar",
"static_operation : static_scalar '|' static_scalar",
"static_operation : static_scalar '&' static_scalar",
"static_operation : static_scalar '^' static_scalar",
"static_operation : static_scalar '.' static_scalar",
"static_operation : static_scalar '+' static_scalar",
"static_operation : static_scalar '-' static_scalar",
"static_operation : static_scalar '*' static_scalar",
"static_operation : static_scalar '/' static_scalar",
"static_operation : static_scalar '%' static_scalar",
"static_operation : static_scalar T_SL static_scalar",
"static_operation : static_scalar T_SR static_scalar",
"static_operation : static_scalar T_POW static_scalar",
"static_operation : '+' static_scalar",
"static_operation : '-' static_scalar",
"static_operation : '!' static_scalar",
"static_operation : '~' static_scalar",
"static_operation : static_scalar T_IS_IDENTICAL static_scalar",
"static_operation : static_scalar T_IS_NOT_IDENTICAL static_scalar",
"static_operation : static_scalar T_IS_EQUAL static_scalar",
"static_operation : static_scalar T_IS_NOT_EQUAL static_scalar",
"static_operation : static_scalar '<' static_scalar",
"static_operation : static_scalar T_IS_SMALLER_OR_EQUAL static_scalar",
"static_operation : static_scalar '>' static_scalar",
"static_operation : static_scalar T_IS_GREATER_OR_EQUAL static_scalar",
"static_operation : static_scalar '?' static_scalar ':' static_scalar",
"static_operation : static_scalar '?' ':' static_scalar",
"static_operation : static_scalar '[' static_scalar ']'",
"static_operation : '(' static_scalar ')'",
"scalar : common_scalar",
"scalar : class_name_or_var T_PAAMAYIM_NEKUDOTAYIM class_const_name",
"scalar : '\"' encaps_list '\"'",
"scalar : T_START_HEREDOC encaps_list T_END_HEREDOC",
"class_const_name : T_STRING",
"class_const_name : T_CLASS",
"static_array_pair_list :",
"static_array_pair_list : non_empty_static_array_pair_list optional_comma",
"optional_comma :",
"optional_comma : ','",
"non_empty_static_array_pair_list : non_empty_static_array_pair_list ',' static_array_pair",
"non_empty_static_array_pair_list : static_array_pair",
"static_array_pair : static_scalar T_DOUBLE_ARROW static_scalar",
"static_array_pair : static_scalar",
"variable : object_access",
"variable : base_variable",
"variable : function_call",
"variable : new_expr_array_deref",
"new_expr_array_deref : '(' new_expr ')' '[' dim_offset ']'",
"new_expr_array_deref : new_expr_array_deref '[' dim_offset ']'",
"object_access : variable_or_new_expr T_OBJECT_OPERATOR object_property",
"object_access : variable_or_new_expr T_OBJECT_OPERATOR object_property argument_list",
"object_access : object_access argument_list",
"object_access : object_access '[' dim_offset ']'",
"object_access : object_access '{' expr '}'",
"variable_or_new_expr : variable",
"variable_or_new_expr : '(' new_expr ')'",
"variable_without_objects : reference_variable",
"variable_without_objects : '$' variable_without_objects",
"base_variable : variable_without_objects",
"base_variable : static_property",
"static_property : class_name_or_var T_PAAMAYIM_NEKUDOTAYIM '$' reference_variable",
"static_property : static_property_with_arrays",
"static_property_with_arrays : class_name_or_var T_PAAMAYIM_NEKUDOTAYIM T_VARIABLE",
"static_property_with_arrays : class_name_or_var T_PAAMAYIM_NEKUDOTAYIM '$' '{' expr '}'",
"static_property_with_arrays : static_property_with_arrays '[' dim_offset ']'",
"static_property_with_arrays : static_property_with_arrays '{' expr '}'",
"reference_variable : reference_variable '[' dim_offset ']'",
"reference_variable : reference_variable '{' expr '}'",
"reference_variable : T_VARIABLE",
"reference_variable : '$' '{' expr '}'",
"dim_offset :",
"dim_offset : expr",
"object_property : T_STRING",
"object_property : '{' expr '}'",
"object_property : variable_without_objects",
"list_expr : T_LIST '(' list_expr_elements ')'",
"list_expr_elements : list_expr_elements ',' list_expr_element",
"list_expr_elements : list_expr_element",
"list_expr_element : variable",
"list_expr_element : list_expr",
"list_expr_element :",
"array_pair_list :",
"array_pair_list : non_empty_array_pair_list optional_comma",
"non_empty_array_pair_list : non_empty_array_pair_list ',' array_pair",
"non_empty_array_pair_list : array_pair",
"array_pair : expr T_DOUBLE_ARROW expr",
"array_pair : expr",
"array_pair : expr T_DOUBLE_ARROW '&' variable",
"array_pair : '&' variable",
"encaps_list : encaps_list encaps_var",
"encaps_list : encaps_list T_ENCAPSED_AND_WHITESPACE",
"encaps_list : encaps_var",
"encaps_list : T_ENCAPSED_AND_WHITESPACE encaps_var",
"encaps_var : T_VARIABLE",
"encaps_var : T_VARIABLE '[' encaps_var_offset ']'",
"encaps_var : T_VARIABLE T_OBJECT_OPERATOR T_STRING",
"encaps_var : T_DOLLAR_OPEN_CURLY_BRACES expr '}'",
"encaps_var : T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '}'",
"encaps_var : T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '[' expr ']' '}'",
"encaps_var : T_CURLY_OPEN variable '}'",
"encaps_var_offset : T_STRING",
"encaps_var_offset : T_NUM_STRING",
"encaps_var_offset : T_VARIABLE",
};

//###############################################################
// method: yylexdebug : check lexer state
//###############################################################
void yylexdebug(int state,int ch)
{
String s=null;
  if (ch < 0) ch=0;
  if (ch <= YYMAXTOKEN) //check index bounds
     s = yyname[ch];    //now get it
  if (s==null)
    s = "illegal-symbol";
  debug("state "+state+", reading "+ch+" ("+s+")");
}





//The following are now global, to aid in error reporting
int yyn;       //next next thing to do
int yym;       //
int yystate;   //current parsing state from state table
String yys;    //current token string


//###############################################################
// method: yyparse : parse input and execute indicated items
//###############################################################
int yyparse()
{
boolean doaction;
  init_stacks();
  yynerrs = 0;
  yyerrflag = 0;
  yychar = -1;          //impossible char forces a read
  yystate=0;            //initial state
  state_push(yystate);  //save it
  val_push(yylval);     //save empty value
  while (true) //until parsing is done, either correctly, or w/error
    {
    doaction=true;
    if (yydebug) debug("loop"); 
    //#### NEXT ACTION (from reduction table)
    for (yyn=yydefred[yystate];yyn==0;yyn=yydefred[yystate])
      {
      if (yydebug) debug("yyn:"+yyn+"  state:"+yystate+"  yychar:"+yychar);
      if (yychar < 0)      //we want a char?
        {
        yychar = yylex();  //get next token
        if (yydebug) debug(" next yychar:"+yychar);
        //#### ERROR CHECK ####
        if (yychar < 0)    //it it didn't work/error
          {
          yychar = 0;      //change it to default string (no -1!)
          if (yydebug)
            yylexdebug(yystate,yychar);
          }
        }//yychar<0
      yyn = yysindex[yystate];  //get amount to shift by (shift index)
      if ((yyn != 0) && (yyn += yychar) >= 0 &&
          yyn <= YYTABLESIZE && yycheck[yyn] == yychar)
        {
        if (yydebug)
          debug("state "+yystate+", shifting to state "+yytable[yyn]);
        //#### NEXT STATE ####
        yystate = yytable[yyn];//we are in a new state
        state_push(yystate);   //save it
        val_push(yylval);      //push our lval as the input for next rule
        yychar = -1;           //since we have 'eaten' a token, say we need another
        if (yyerrflag > 0)     //have we recovered an error?
           --yyerrflag;        //give ourselves credit
        doaction=false;        //but don't process yet
        break;   //quit the yyn=0 loop
        }

    yyn = yyrindex[yystate];  //reduce
    if ((yyn !=0 ) && (yyn += yychar) >= 0 &&
            yyn <= YYTABLESIZE && yycheck[yyn] == yychar)
      {   //we reduced!
      if (yydebug) debug("reduce");
      yyn = yytable[yyn];
      doaction=true; //get ready to execute
      break;         //drop down to actions
      }
    else //ERROR RECOVERY
      {
      if (yyerrflag==0)
        {
        yyerror("syntax error");
        yynerrs++;
        }
      if (yyerrflag < 3) //low error count?
        {
        yyerrflag = 3;
        while (true)   //do until break
          {
          if (stateptr<0)   //check for under & overflow here
            {
            yyerror("stack underflow. aborting...");  //note lower case 's'
            return 1;
            }
          yyn = yysindex[state_peek(0)];
          if ((yyn != 0) && (yyn += YYERRCODE) >= 0 &&
                    yyn <= YYTABLESIZE && yycheck[yyn] == YYERRCODE)
            {
            if (yydebug)
              debug("state "+state_peek(0)+", error recovery shifting to state "+yytable[yyn]+" ");
            yystate = yytable[yyn];
            state_push(yystate);
            val_push(yylval);
            doaction=false;
            break;
            }
          else
            {
            if (yydebug)
              debug("error recovery discarding state "+state_peek(0)+" ");
            if (stateptr<0)   //check for under & overflow here
              {
              yyerror("Stack underflow. aborting...");  //capital 'S'
              return 1;
              }
            state_pop();
            val_pop();
            }
          }
        }
      else            //discard this token
        {
        if (yychar == 0)
          return 1; //yyabort
        if (yydebug)
          {
          yys = null;
          if (yychar <= YYMAXTOKEN) yys = yyname[yychar];
          if (yys == null) yys = "illegal-symbol";
          debug("state "+yystate+", error recovery discards token "+yychar+" ("+yys+")");
          }
        yychar = -1;  //read another
        }
      }//end error recovery
    }//yyn=0 loop
    if (!doaction)   //any reason not to proceed?
      continue;      //skip action
    yym = yylen[yyn];          //get count of terminals on rhs
    if (yydebug)
      debug("state "+yystate+", reducing "+yym+" by rule "+yyn+" ("+yyrule[yyn]+")");
    if (yym>0)                 //if count of rhs not 'nil'
      yyval = val_peek(yym-1); //get current semantic value
    yyval = dup_yyval(yyval); //duplicate yyval if ParserVal is used as semantic value
    switch(yyn)
      {
//########## USER-SUPPLIED ACTIONS ##########
case 1:
//#line 112 "../../../../lib/php.y"
{ yyval = Stmt\Namespace_::postprocess(val_peek(0)); }
break;
case 2:
//#line 116 "../../../../lib/php.y"
{ pushNormalizing(val_peek(1), val_peek(0)); }
break;
case 3:
//#line 117 "../../../../lib/php.y"
{ init(); }
break;
case 4:
//#line 121 "../../../../lib/php.y"
{ init(val_peek(0)); }
break;
case 5:
//#line 122 "../../../../lib/php.y"
{ push(val_peek(2), val_peek(0)); }
break;
case 6:
//#line 126 "../../../../lib/php.y"
{ yyval = Name[val_peek(0)]; }
break;
case 7:
//#line 130 "../../../../lib/php.y"
{ yyval = val_peek(0); }
break;
case 8:
//#line 131 "../../../../lib/php.y"
{ yyval = val_peek(0); }
break;
case 9:
//#line 132 "../../../../lib/php.y"
{ yyval = val_peek(0); }
break;
case 10:
//#line 134 "../../../../lib/php.y"
{ yyval = Stmt\HaltCompiler[$this->lexer->handleHaltCompiler()]; }
break;
case 11:
//#line 135 "../../../../lib/php.y"
{ yyval = Stmt\Namespace_[val_peek(1), null]; }
break;
case 12:
//#line 136 "../../../../lib/php.y"
{ yyval = Stmt\Namespace_[val_peek(3), val_peek(1)]; }
break;
case 13:
//#line 137 "../../../../lib/php.y"
{ yyval = Stmt\Namespace_[null,     val_peek(1)]; }
break;
case 14:
//#line 138 "../../../../lib/php.y"
{ yyval = Stmt\Use_[val_peek(1), Stmt\Use_::TYPE_NORMAL]; }
break;
case 15:
//#line 139 "../../../../lib/php.y"
{ yyval = Stmt\Use_[val_peek(1), Stmt\Use_::TYPE_FUNCTION]; }
break;
case 16:
//#line 140 "../../../../lib/php.y"
{ yyval = Stmt\Use_[val_peek(1), Stmt\Use_::TYPE_CONSTANT]; }
break;
case 17:
//#line 141 "../../../../lib/php.y"
{ yyval = Stmt\Const_[val_peek(1)]; }
break;
case 18:
//#line 145 "../../../../lib/php.y"
{ push(val_peek(2), val_peek(0)); }
break;
case 19:
//#line 146 "../../../../lib/php.y"
{ init(val_peek(0)); }
break;
case 20:
//#line 150 "../../../../lib/php.y"
{ yyval = Stmt\UseUse[val_peek(0), null]; }
break;
case 21:
//#line 151 "../../../../lib/php.y"
{ yyval = Stmt\UseUse[val_peek(2), val_peek(0)]; }
break;
case 22:
//#line 152 "../../../../lib/php.y"
{ yyval = Stmt\UseUse[val_peek(0), null]; }
break;
case 23:
//#line 153 "../../../../lib/php.y"
{ yyval = Stmt\UseUse[val_peek(2), val_peek(0)]; }
break;
case 24:
//#line 157 "../../../../lib/php.y"
{ push(val_peek(2), val_peek(0)); }
break;
case 25:
//#line 158 "../../../../lib/php.y"
{ init(val_peek(0)); }
break;
case 26:
//#line 162 "../../../../lib/php.y"
{ yyval = Const_[val_peek(2), val_peek(0)]; }
break;
case 27:
//#line 166 "../../../../lib/php.y"
{ pushNormalizing(val_peek(1), val_peek(0)); }
break;
case 28:
//#line 167 "../../../../lib/php.y"
{ init(); }
break;
case 29:
//#line 171 "../../../../lib/php.y"
{ yyval = val_peek(0); }
break;
case 30:
//#line 172 "../../../../lib/php.y"
{ yyval = val_peek(0); }
break;
case 31:
//#line 173 "../../../../lib/php.y"
{ yyval = val_peek(0); }
break;
case 32:
//#line 174 "../../../../lib/php.y"
{ error('__HALT_COMPILER() can only be used from the outermost scope'); }
break;
case 33:
//#line 178 "../../../../lib/php.y"
{ yyval = val_peek(1); }
break;
case 34:
//#line 180 "../../../../lib/php.y"
{ yyval = Stmt\If_[val_peek(3), [stmts: toArray(val_peek(2)), elseifs: val_peek(1), else: val_peek(0)]]; }
break;
case 35:
//#line 182 "../../../../lib/php.y"
{ yyval = Stmt\If_[val_peek(6), [stmts: val_peek(4), elseifs: val_peek(3), else: val_peek(2)]]; }
break;
case 36:
//#line 183 "../../../../lib/php.y"
{ yyval = Stmt\While_[val_peek(1), val_peek(0)]; }
break;
case 37:
//#line 184 "../../../../lib/php.y"
{ yyval = Stmt\Do_   [val_peek(1), toArray(val_peek(3))]; }
break;
case 38:
//#line 186 "../../../../lib/php.y"
{ yyval = Stmt\For_[[init: val_peek(6), cond: val_peek(4), loop: val_peek(2), stmts: val_peek(0)]]; }
break;
case 39:
//#line 187 "../../../../lib/php.y"
{ yyval = Stmt\Switch_[val_peek(1), val_peek(0)]; }
break;
case 40:
//#line 188 "../../../../lib/php.y"
{ yyval = Stmt\Break_[null]; }
break;
case 41:
//#line 189 "../../../../lib/php.y"
{ yyval = Stmt\Break_[val_peek(1)]; }
break;
case 42:
//#line 190 "../../../../lib/php.y"
{ yyval = Stmt\Continue_[null]; }
break;
case 43:
//#line 191 "../../../../lib/php.y"
{ yyval = Stmt\Continue_[val_peek(1)]; }
break;
case 44:
//#line 192 "../../../../lib/php.y"
{ yyval = Stmt\Return_[null]; }
break;
case 45:
//#line 193 "../../../../lib/php.y"
{ yyval = Stmt\Return_[val_peek(1)]; }
break;
case 46:
//#line 194 "../../../../lib/php.y"
{ yyval = val_peek(1); }
break;
case 47:
//#line 195 "../../../../lib/php.y"
{ yyval = Stmt\Global_[val_peek(1)]; }
break;
case 48:
//#line 196 "../../../../lib/php.y"
{ yyval = Stmt\Static_[val_peek(1)]; }
break;
case 49:
//#line 197 "../../../../lib/php.y"
{ yyval = Stmt\Echo_[val_peek(1)]; }
break;
case 50:
//#line 198 "../../../../lib/php.y"
{ yyval = Stmt\InlineHTML[val_peek(0)]; }
break;
case 51:
//#line 199 "../../../../lib/php.y"
{ yyval = val_peek(1); }
break;
case 52:
//#line 200 "../../../../lib/php.y"
{ yyval = Stmt\Unset_[val_peek(2)]; }
break;
case 53:
//#line 202 "../../../../lib/php.y"
{ yyval = Stmt\Foreach_[val_peek(4), val_peek(2)[0], [keyVar: null, byRef: val_peek(2)[1], stmts: val_peek(0)]]; }
break;
case 54:
//#line 204 "../../../../lib/php.y"
{ yyval = Stmt\Foreach_[val_peek(6), val_peek(2)[0], [keyVar: val_peek(4), byRef: val_peek(2)[1], stmts: val_peek(0)]]; }
break;
case 55:
//#line 205 "../../../../lib/php.y"
{ yyval = Stmt\Declare_[val_peek(2), val_peek(0)]; }
break;
case 56:
//#line 206 "../../../../lib/php.y"
{ yyval = array(); /* means: no statement */ }
break;
case 57:
//#line 208 "../../../../lib/php.y"
{ yyval = Stmt\TryCatch[val_peek(3), val_peek(1), val_peek(0)]; }
break;
case 58:
//#line 209 "../../../../lib/php.y"
{ yyval = Stmt\Throw_[val_peek(1)]; }
break;
case 59:
//#line 210 "../../../../lib/php.y"
{ yyval = Stmt\Goto_[val_peek(1)]; }
break;
case 60:
//#line 211 "../../../../lib/php.y"
{ yyval = Stmt\Label[val_peek(1)]; }
break;
case 61:
//#line 215 "../../../../lib/php.y"
{ init(); }
break;
case 62:
//#line 216 "../../../../lib/php.y"
{ push(val_peek(1), val_peek(0)); }
break;
case 63:
//#line 221 "../../../../lib/php.y"
{ yyval = Stmt\Catch_[val_peek(5), parseVar(val_peek(4)), val_peek(1)]; }
break;
case 64:
//#line 225 "../../../../lib/php.y"
{ yyval = null; }
break;
case 65:
//#line 226 "../../../../lib/php.y"
{ yyval = val_peek(1); }
break;
case 66:
//#line 230 "../../../../lib/php.y"
{ init(val_peek(0)); }
break;
case 67:
//#line 231 "../../../../lib/php.y"
{ push(val_peek(2), val_peek(0)); }
break;
case 68:
//#line 235 "../../../../lib/php.y"
{ yyval = false; }
break;
case 69:
//#line 236 "../../../../lib/php.y"
{ yyval = true; }
break;
case 70:
//#line 240 "../../../../lib/php.y"
{ yyval = false; }
break;
case 71:
//#line 241 "../../../../lib/php.y"
{ yyval = true; }
break;
case 72:
//#line 246 "../../../../lib/php.y"
{ yyval = Stmt\Function_[val_peek(6), [byRef: val_peek(7), params: val_peek(4), stmts: val_peek(1)]]; }
break;
case 73:
//#line 251 "../../../../lib/php.y"
{ yyval = Stmt\Class_[val_peek(5), [type: val_peek(6), extends: val_peek(4), implements: val_peek(3), stmts: val_peek(1)]]; }
break;
case 74:
//#line 253 "../../../../lib/php.y"
{ yyval = Stmt\Interface_[val_peek(4), [extends: val_peek(3), stmts: val_peek(1)]]; }
break;
case 75:
//#line 255 "../../../../lib/php.y"
{ yyval = Stmt\Trait_[val_peek(3), val_peek(1)]; }
break;
case 76:
//#line 259 "../../../../lib/php.y"
{ yyval = 0; }
break;
case 77:
//#line 260 "../../../../lib/php.y"
{ yyval = Stmt\Class_::MODIFIER_ABSTRACT; }
break;
case 78:
//#line 261 "../../../../lib/php.y"
{ yyval = Stmt\Class_::MODIFIER_FINAL; }
break;
case 79:
//#line 265 "../../../../lib/php.y"
{ yyval = null; }
break;
case 80:
//#line 266 "../../../../lib/php.y"
{ yyval = val_peek(0); }
break;
case 81:
//#line 270 "../../../../lib/php.y"
{ yyval = array(); }
break;
case 82:
//#line 271 "../../../../lib/php.y"
{ yyval = val_peek(0); }
break;
case 83:
//#line 275 "../../../../lib/php.y"
{ yyval = array(); }
break;
case 84:
//#line 276 "../../../../lib/php.y"
{ yyval = val_peek(0); }
break;
case 85:
//#line 280 "../../../../lib/php.y"
{ init(val_peek(0)); }
break;
case 86:
//#line 281 "../../../../lib/php.y"
{ push(val_peek(2), val_peek(0)); }
break;
case 87:
//#line 285 "../../../../lib/php.y"
{ yyval = toArray(val_peek(0)); }
break;
case 88:
//#line 286 "../../../../lib/php.y"
{ yyval = val_peek(2); }
break;
case 89:
//#line 290 "../../../../lib/php.y"
{ yyval = toArray(val_peek(0)); }
break;
case 90:
//#line 291 "../../../../lib/php.y"
{ yyval = val_peek(2); }
break;
case 91:
//#line 295 "../../../../lib/php.y"
{ yyval = toArray(val_peek(0)); }
break;
case 92:
//#line 296 "../../../../lib/php.y"
{ yyval = val_peek(2); }
break;
case 93:
//#line 300 "../../../../lib/php.y"
{ init(val_peek(0)); }
break;
case 94:
//#line 301 "../../../../lib/php.y"
{ push(val_peek(2), val_peek(0)); }
break;
case 95:
//#line 305 "../../../../lib/php.y"
{ yyval = Stmt\DeclareDeclare[val_peek(2), val_peek(0)]; }
break;
case 96:
//#line 309 "../../../../lib/php.y"
{ yyval = val_peek(1); }
break;
case 97:
//#line 310 "../../../../lib/php.y"
{ yyval = val_peek(1); }
break;
case 98:
//#line 311 "../../../../lib/php.y"
{ yyval = val_peek(2); }
break;
case 99:
//#line 312 "../../../../lib/php.y"
{ yyval = val_peek(2); }
break;
case 100:
//#line 316 "../../../../lib/php.y"
{ init(); }
break;
case 101:
//#line 317 "../../../../lib/php.y"
{ push(val_peek(1), val_peek(0)); }
break;
case 102:
//#line 321 "../../../../lib/php.y"
{ yyval = Stmt\Case_[val_peek(2), val_peek(0)]; }
break;
case 103:
//#line 322 "../../../../lib/php.y"
{ yyval = Stmt\Case_[null, val_peek(0)]; }
break;
case 106:
//#line 331 "../../../../lib/php.y"
{ yyval = toArray(val_peek(0)); }
break;
case 107:
//#line 332 "../../../../lib/php.y"
{ yyval = val_peek(2); }
break;
case 108:
//#line 336 "../../../../lib/php.y"
{ init(); }
break;
case 109:
//#line 337 "../../../../lib/php.y"
{ push(val_peek(1), val_peek(0)); }
break;
case 110:
//#line 341 "../../../../lib/php.y"
{ yyval = Stmt\ElseIf_[val_peek(1), toArray(val_peek(0))]; }
break;
case 111:
//#line 345 "../../../../lib/php.y"
{ init(); }
break;
case 112:
//#line 346 "../../../../lib/php.y"
{ push(val_peek(1), val_peek(0)); }
break;
case 113:
//#line 350 "../../../../lib/php.y"
{ yyval = Stmt\ElseIf_[val_peek(2), val_peek(0)]; }
break;
case 114:
//#line 354 "../../../../lib/php.y"
{ yyval = null; }
break;
case 115:
//#line 355 "../../../../lib/php.y"
{ yyval = Stmt\Else_[toArray(val_peek(0))]; }
break;
case 116:
//#line 359 "../../../../lib/php.y"
{ yyval = null; }
break;
case 117:
//#line 360 "../../../../lib/php.y"
{ yyval = Stmt\Else_[val_peek(0)]; }
break;
case 118:
//#line 364 "../../../../lib/php.y"
{ yyval = array(val_peek(0), false); }
break;
case 119:
//#line 365 "../../../../lib/php.y"
{ yyval = array(val_peek(0), true); }
break;
case 120:
//#line 366 "../../../../lib/php.y"
{ yyval = array(val_peek(0), false); }
break;
case 121:
//#line 370 "../../../../lib/php.y"
{ yyval = val_peek(0); }
break;
case 122:
//#line 371 "../../../../lib/php.y"
{ yyval = array(); }
break;
case 123:
//#line 375 "../../../../lib/php.y"
{ init(val_peek(0)); }
break;
case 124:
//#line 376 "../../../../lib/php.y"
{ push(val_peek(2), val_peek(0)); }
break;
case 125:
//#line 381 "../../../../lib/php.y"
{ yyval = Param[parseVar(val_peek(0)), null, val_peek(3), val_peek(2), val_peek(1)]; }
break;
case 126:
//#line 383 "../../../../lib/php.y"
{ yyval = Param[parseVar(val_peek(2)), val_peek(0), val_peek(5), val_peek(4), val_peek(3)]; }
break;
case 127:
//#line 387 "../../../../lib/php.y"
{ yyval = null; }
break;
case 128:
//#line 388 "../../../../lib/php.y"
{ yyval = val_peek(0); }
break;
case 129:
//#line 389 "../../../../lib/php.y"
{ yyval = 'array'; }
break;
case 130:
//#line 390 "../../../../lib/php.y"
{ yyval = 'callable'; }
break;
case 131:
//#line 394 "../../../../lib/php.y"
{ yyval = array(); }
break;
case 132:
//#line 395 "../../../../lib/php.y"
{ yyval = val_peek(1); }
break;
case 133:
//#line 396 "../../../../lib/php.y"
{ yyval = array(Arg[val_peek(1), false, false]); }
break;
case 134:
//#line 400 "../../../../lib/php.y"
{ init(val_peek(0)); }
break;
case 135:
//#line 401 "../../../../lib/php.y"
{ push(val_peek(2), val_peek(0)); }
break;
case 136:
//#line 405 "../../../../lib/php.y"
{ yyval = Arg[val_peek(0), false, false]; }
break;
case 137:
//#line 406 "../../../../lib/php.y"
{ yyval = Arg[val_peek(0), true, false]; }
break;
case 138:
//#line 407 "../../../../lib/php.y"
{ yyval = Arg[val_peek(0), false, true]; }
break;
case 139:
//#line 411 "../../../../lib/php.y"
{ push(val_peek(2), val_peek(0)); }
break;
case 140:
//#line 412 "../../../../lib/php.y"
{ init(val_peek(0)); }
break;
case 141:
//#line 416 "../../../../lib/php.y"
{ yyval = Expr\Variable[parseVar(val_peek(0))]; }
break;
case 142:
//#line 417 "../../../../lib/php.y"
{ yyval = Expr\Variable[val_peek(0)]; }
break;
case 143:
//#line 418 "../../../../lib/php.y"
{ yyval = Expr\Variable[val_peek(1)]; }
break;
case 144:
//#line 422 "../../../../lib/php.y"
{ push(val_peek(2), val_peek(0)); }
break;
case 145:
//#line 423 "../../../../lib/php.y"
{ init(val_peek(0)); }
break;
case 146:
//#line 427 "../../../../lib/php.y"
{ yyval = Stmt\StaticVar[parseVar(val_peek(0)), null]; }
break;
case 147:
//#line 428 "../../../../lib/php.y"
{ yyval = Stmt\StaticVar[parseVar(val_peek(2)), val_peek(0)]; }
break;
case 148:
//#line 432 "../../../../lib/php.y"
{ push(val_peek(1), val_peek(0)); }
break;
case 149:
//#line 433 "../../../../lib/php.y"
{ init(); }
break;
case 150:
//#line 437 "../../../../lib/php.y"
{ yyval = Stmt\Property[val_peek(2), val_peek(1)]; }
break;
case 151:
//#line 438 "../../../../lib/php.y"
{ yyval = Stmt\ClassConst[val_peek(1)]; }
break;
case 152:
//#line 440 "../../../../lib/php.y"
{ yyval = Stmt\ClassMethod[val_peek(4), [type: val_peek(7), byRef: val_peek(5), params: val_peek(2), stmts: val_peek(0)]]; }
break;
case 153:
//#line 441 "../../../../lib/php.y"
{ yyval = Stmt\TraitUse[val_peek(1), val_peek(0)]; }
break;
case 154:
//#line 445 "../../../../lib/php.y"
{ yyval = array(); }
break;
case 155:
//#line 446 "../../../../lib/php.y"
{ yyval = val_peek(1); }
break;
case 156:
//#line 450 "../../../../lib/php.y"
{ init(); }
break;
case 157:
//#line 451 "../../../../lib/php.y"
{ push(val_peek(1), val_peek(0)); }
break;
case 158:
//#line 456 "../../../../lib/php.y"
{ yyval = Stmt\TraitUseAdaptation\Precedence[val_peek(3)[0], val_peek(3)[1], val_peek(1)]; }
break;
case 159:
//#line 458 "../../../../lib/php.y"
{ yyval = Stmt\TraitUseAdaptation\Alias[val_peek(4)[0], val_peek(4)[1], val_peek(2), val_peek(1)]; }
break;
case 160:
//#line 460 "../../../../lib/php.y"
{ yyval = Stmt\TraitUseAdaptation\Alias[val_peek(3)[0], val_peek(3)[1], val_peek(1), null]; }
break;
case 161:
//#line 462 "../../../../lib/php.y"
{ yyval = Stmt\TraitUseAdaptation\Alias[val_peek(3)[0], val_peek(3)[1], null, val_peek(1)]; }
break;
case 162:
//#line 466 "../../../../lib/php.y"
{ yyval = array(val_peek(2), val_peek(0)); }
break;
case 163:
//#line 469 "../../../../lib/php.y"
{ yyval = val_peek(0); }
break;
case 164:
//#line 470 "../../../../lib/php.y"
{ yyval = array(null, val_peek(0)); }
break;
case 165:
//#line 474 "../../../../lib/php.y"
{ yyval = null; }
break;
case 166:
//#line 475 "../../../../lib/php.y"
{ yyval = val_peek(1); }
break;
case 167:
//#line 479 "../../../../lib/php.y"
{ yyval = val_peek(0); }
break;
case 168:
//#line 480 "../../../../lib/php.y"
{ yyval = Stmt\Class_::MODIFIER_PUBLIC; }
break;
case 169:
//#line 484 "../../../../lib/php.y"
{ yyval = Stmt\Class_::MODIFIER_PUBLIC; }
break;
case 170:
//#line 485 "../../../../lib/php.y"
{ yyval = val_peek(0); }
break;
case 171:
//#line 489 "../../../../lib/php.y"
{ yyval = val_peek(0); }
break;
case 172:
//#line 490 "../../../../lib/php.y"
{ Stmt\Class_::verifyModifier(val_peek(1), val_peek(0)); yyval = val_peek(1) | val_peek(0); }
break;
case 173:
//#line 494 "../../../../lib/php.y"
{ yyval = Stmt\Class_::MODIFIER_PUBLIC; }
break;
case 174:
//#line 495 "../../../../lib/php.y"
{ yyval = Stmt\Class_::MODIFIER_PROTECTED; }
break;
case 175:
//#line 496 "../../../../lib/php.y"
{ yyval = Stmt\Class_::MODIFIER_PRIVATE; }
break;
case 176:
//#line 497 "../../../../lib/php.y"
{ yyval = Stmt\Class_::MODIFIER_STATIC; }
break;
case 177:
//#line 498 "../../../../lib/php.y"
{ yyval = Stmt\Class_::MODIFIER_ABSTRACT; }
break;
case 178:
//#line 499 "../../../../lib/php.y"
{ yyval = Stmt\Class_::MODIFIER_FINAL; }
break;
case 179:
//#line 503 "../../../../lib/php.y"
{ init(val_peek(0)); }
break;
case 180:
//#line 504 "../../../../lib/php.y"
{ push(val_peek(2), val_peek(0)); }
break;
case 181:
//#line 508 "../../../../lib/php.y"
{ yyval = Stmt\PropertyProperty[parseVar(val_peek(0)), null]; }
break;
case 182:
//#line 509 "../../../../lib/php.y"
{ yyval = Stmt\PropertyProperty[parseVar(val_peek(2)), val_peek(0)]; }
break;
case 183:
//#line 513 "../../../../lib/php.y"
{ push(val_peek(2), val_peek(0)); }
break;
case 184:
//#line 514 "../../../../lib/php.y"
{ init(val_peek(0)); }
break;
case 185:
//#line 518 "../../../../lib/php.y"
{ yyval = array(); }
break;
case 186:
//#line 519 "../../../../lib/php.y"
{ yyval = val_peek(0); }
break;
case 187:
//#line 523 "../../../../lib/php.y"
{ yyval = val_peek(0); }
break;
case 188:
//#line 524 "../../../../lib/php.y"
{ yyval = Expr\Assign[val_peek(2), val_peek(0)]; }
break;
case 189:
//#line 525 "../../../../lib/php.y"
{ yyval = Expr\Assign[val_peek(2), val_peek(0)]; }
break;
case 190:
//#line 526 "../../../../lib/php.y"
{ yyval = Expr\AssignRef[val_peek(3), val_peek(0)]; }
break;
case 191:
//#line 527 "../../../../lib/php.y"
{ yyval = Expr\AssignRef[val_peek(3), val_peek(0)]; }
break;
case 192:
//#line 528 "../../../../lib/php.y"
{ yyval = val_peek(0); }
break;
case 193:
//#line 529 "../../../../lib/php.y"
{ yyval = Expr\Clone_[val_peek(0)]; }
break;
case 194:
//#line 530 "../../../../lib/php.y"
{ yyval = Expr\AssignOp\Plus      [val_peek(2), val_peek(0)]; }
break;
case 195:
//#line 531 "../../../../lib/php.y"
{ yyval = Expr\AssignOp\Minus     [val_peek(2), val_peek(0)]; }
break;
case 196:
//#line 532 "../../../../lib/php.y"
{ yyval = Expr\AssignOp\Mul       [val_peek(2), val_peek(0)]; }
break;
case 197:
//#line 533 "../../../../lib/php.y"
{ yyval = Expr\AssignOp\Div       [val_peek(2), val_peek(0)]; }
break;
case 198:
//#line 534 "../../../../lib/php.y"
{ yyval = Expr\AssignOp\Concat    [val_peek(2), val_peek(0)]; }
break;
case 199:
//#line 535 "../../../../lib/php.y"
{ yyval = Expr\AssignOp\Mod       [val_peek(2), val_peek(0)]; }
break;
case 200:
//#line 536 "../../../../lib/php.y"
{ yyval = Expr\AssignOp\BitwiseAnd[val_peek(2), val_peek(0)]; }
break;
case 201:
//#line 537 "../../../../lib/php.y"
{ yyval = Expr\AssignOp\BitwiseOr [val_peek(2), val_peek(0)]; }
break;
case 202:
//#line 538 "../../../../lib/php.y"
{ yyval = Expr\AssignOp\BitwiseXor[val_peek(2), val_peek(0)]; }
break;
case 203:
//#line 539 "../../../../lib/php.y"
{ yyval = Expr\AssignOp\ShiftLeft [val_peek(2), val_peek(0)]; }
break;
case 204:
//#line 540 "../../../../lib/php.y"
{ yyval = Expr\AssignOp\ShiftRight[val_peek(2), val_peek(0)]; }
break;
case 205:
//#line 541 "../../../../lib/php.y"
{ yyval = Expr\AssignOp\Pow       [val_peek(2), val_peek(0)]; }
break;
case 206:
//#line 542 "../../../../lib/php.y"
{ yyval = Expr\PostInc[val_peek(1)]; }
break;
case 207:
//#line 543 "../../../../lib/php.y"
{ yyval = Expr\PreInc [val_peek(0)]; }
break;
case 208:
//#line 544 "../../../../lib/php.y"
{ yyval = Expr\PostDec[val_peek(1)]; }
break;
case 209:
//#line 545 "../../../../lib/php.y"
{ yyval = Expr\PreDec [val_peek(0)]; }
break;
case 210:
//#line 546 "../../../../lib/php.y"
{ yyval = Expr\BinaryOp\BooleanOr [val_peek(2), val_peek(0)]; }
break;
case 211:
//#line 547 "../../../../lib/php.y"
{ yyval = Expr\BinaryOp\BooleanAnd[val_peek(2), val_peek(0)]; }
break;
case 212:
//#line 548 "../../../../lib/php.y"
{ yyval = Expr\BinaryOp\LogicalOr [val_peek(2), val_peek(0)]; }
break;
case 213:
//#line 549 "../../../../lib/php.y"
{ yyval = Expr\BinaryOp\LogicalAnd[val_peek(2), val_peek(0)]; }
break;
case 214:
//#line 550 "../../../../lib/php.y"
{ yyval = Expr\BinaryOp\LogicalXor[val_peek(2), val_peek(0)]; }
break;
case 215:
//#line 551 "../../../../lib/php.y"
{ yyval = Expr\BinaryOp\BitwiseOr [val_peek(2), val_peek(0)]; }
break;
case 216:
//#line 552 "../../../../lib/php.y"
{ yyval = Expr\BinaryOp\BitwiseAnd[val_peek(2), val_peek(0)]; }
break;
case 217:
//#line 553 "../../../../lib/php.y"
{ yyval = Expr\BinaryOp\BitwiseXor[val_peek(2), val_peek(0)]; }
break;
case 218:
//#line 554 "../../../../lib/php.y"
{ yyval = Expr\BinaryOp\Concat    [val_peek(2), val_peek(0)]; }
break;
case 219:
//#line 555 "../../../../lib/php.y"
{ yyval = Expr\BinaryOp\Plus      [val_peek(2), val_peek(0)]; }
break;
case 220:
//#line 556 "../../../../lib/php.y"
{ yyval = Expr\BinaryOp\Minus     [val_peek(2), val_peek(0)]; }
break;
case 221:
//#line 557 "../../../../lib/php.y"
{ yyval = Expr\BinaryOp\Mul       [val_peek(2), val_peek(0)]; }
break;
case 222:
//#line 558 "../../../../lib/php.y"
{ yyval = Expr\BinaryOp\Div       [val_peek(2), val_peek(0)]; }
break;
case 223:
//#line 559 "../../../../lib/php.y"
{ yyval = Expr\BinaryOp\Mod       [val_peek(2), val_peek(0)]; }
break;
case 224:
//#line 560 "../../../../lib/php.y"
{ yyval = Expr\BinaryOp\ShiftLeft [val_peek(2), val_peek(0)]; }
break;
case 225:
//#line 561 "../../../../lib/php.y"
{ yyval = Expr\BinaryOp\ShiftRight[val_peek(2), val_peek(0)]; }
break;
case 226:
//#line 562 "../../../../lib/php.y"
{ yyval = Expr\BinaryOp\Pow       [val_peek(2), val_peek(0)]; }
break;
case 227:
//#line 563 "../../../../lib/php.y"
{ yyval = Expr\UnaryPlus [val_peek(0)]; }
break;
case 228:
//#line 564 "../../../../lib/php.y"
{ yyval = Expr\UnaryMinus[val_peek(0)]; }
break;
case 229:
//#line 565 "../../../../lib/php.y"
{ yyval = Expr\BooleanNot[val_peek(0)]; }
break;
case 230:
//#line 566 "../../../../lib/php.y"
{ yyval = Expr\BitwiseNot[val_peek(0)]; }
break;
case 231:
//#line 567 "../../../../lib/php.y"
{ yyval = Expr\BinaryOp\Identical     [val_peek(2), val_peek(0)]; }
break;
case 232:
//#line 568 "../../../../lib/php.y"
{ yyval = Expr\BinaryOp\NotIdentical  [val_peek(2), val_peek(0)]; }
break;
case 233:
//#line 569 "../../../../lib/php.y"
{ yyval = Expr\BinaryOp\Equal         [val_peek(2), val_peek(0)]; }
break;
case 234:
//#line 570 "../../../../lib/php.y"
{ yyval = Expr\BinaryOp\NotEqual      [val_peek(2), val_peek(0)]; }
break;
case 235:
//#line 571 "../../../../lib/php.y"
{ yyval = Expr\BinaryOp\Smaller       [val_peek(2), val_peek(0)]; }
break;
case 236:
//#line 572 "../../../../lib/php.y"
{ yyval = Expr\BinaryOp\SmallerOrEqual[val_peek(2), val_peek(0)]; }
break;
case 237:
//#line 573 "../../../../lib/php.y"
{ yyval = Expr\BinaryOp\Greater       [val_peek(2), val_peek(0)]; }
break;
case 238:
//#line 574 "../../../../lib/php.y"
{ yyval = Expr\BinaryOp\GreaterOrEqual[val_peek(2), val_peek(0)]; }
break;
case 239:
//#line 575 "../../../../lib/php.y"
{ yyval = Expr\Instanceof_[val_peek(2), val_peek(0)]; }
break;
case 240:
//#line 576 "../../../../lib/php.y"
{ yyval = val_peek(0); }
break;
case 241:
//#line 578 "../../../../lib/php.y"
{ yyval = val_peek(1); }
break;
case 242:
//#line 579 "../../../../lib/php.y"
{ yyval = Expr\Ternary[val_peek(4), val_peek(2),   val_peek(0)]; }
break;
case 243:
//#line 580 "../../../../lib/php.y"
{ yyval = Expr\Ternary[val_peek(3), null, val_peek(0)]; }
break;
case 244:
//#line 581 "../../../../lib/php.y"
{ yyval = Expr\Isset_[val_peek(1)]; }
break;
case 245:
//#line 582 "../../../../lib/php.y"
{ yyval = Expr\Empty_[val_peek(1)]; }
break;
case 246:
//#line 583 "../../../../lib/php.y"
{ yyval = Expr\Include_[val_peek(0), Expr\Include_::TYPE_INCLUDE]; }
break;
case 247:
//#line 584 "../../../../lib/php.y"
{ yyval = Expr\Include_[val_peek(0), Expr\Include_::TYPE_INCLUDE_ONCE]; }
break;
case 248:
//#line 585 "../../../../lib/php.y"
{ yyval = Expr\Eval_[val_peek(0)]; }
break;
case 249:
//#line 586 "../../../../lib/php.y"
{ yyval = Expr\Include_[val_peek(0), Expr\Include_::TYPE_REQUIRE]; }
break;
case 250:
//#line 587 "../../../../lib/php.y"
{ yyval = Expr\Include_[val_peek(0), Expr\Include_::TYPE_REQUIRE_ONCE]; }
break;
case 251:
//#line 588 "../../../../lib/php.y"
{ yyval = Expr\Cast\Int     [val_peek(0)]; }
break;
case 252:
//#line 589 "../../../../lib/php.y"
{ yyval = Expr\Cast\Double  [val_peek(0)]; }
break;
case 253:
//#line 590 "../../../../lib/php.y"
{ yyval = Expr\Cast\String  [val_peek(0)]; }
break;
case 254:
//#line 591 "../../../../lib/php.y"
{ yyval = Expr\Cast\Array_  [val_peek(0)]; }
break;
case 255:
//#line 592 "../../../../lib/php.y"
{ yyval = Expr\Cast\Object  [val_peek(0)]; }
break;
case 256:
//#line 593 "../../../../lib/php.y"
{ yyval = Expr\Cast\Bool    [val_peek(0)]; }
break;
case 257:
//#line 594 "../../../../lib/php.y"
{ yyval = Expr\Cast\Unset_  [val_peek(0)]; }
break;
case 258:
//#line 595 "../../../../lib/php.y"
{ yyval = Expr\Exit_        [val_peek(0)]; }
break;
case 259:
//#line 596 "../../../../lib/php.y"
{ yyval = Expr\ErrorSuppress[val_peek(0)]; }
break;
case 260:
//#line 597 "../../../../lib/php.y"
{ yyval = val_peek(0); }
break;
case 261:
//#line 598 "../../../../lib/php.y"
{ yyval = val_peek(0); }
break;
case 262:
//#line 599 "../../../../lib/php.y"
{ yyval = val_peek(0); }
break;
case 263:
//#line 600 "../../../../lib/php.y"
{ yyval = Expr\ShellExec[val_peek(1)]; }
break;
case 264:
//#line 601 "../../../../lib/php.y"
{ yyval = Expr\Print_[val_peek(0)]; }
break;
case 265:
//#line 602 "../../../../lib/php.y"
{ yyval = Expr\Yield_[null, null]; }
break;
case 266:
//#line 604 "../../../../lib/php.y"
{ yyval = Expr\Closure[[static: false, byRef: val_peek(7), params: val_peek(5), uses: val_peek(3), stmts: val_peek(1)]]; }
break;
case 267:
//#line 606 "../../../../lib/php.y"
{ yyval = Expr\Closure[[static: true, byRef: val_peek(7), params: val_peek(5), uses: val_peek(3), stmts: val_peek(1)]]; }
break;
case 268:
//#line 610 "../../../../lib/php.y"
{ yyval = val_peek(1); }
break;
case 269:
//#line 611 "../../../../lib/php.y"
{ yyval = val_peek(1); }
break;
case 270:
//#line 615 "../../../../lib/php.y"
{ yyval = Expr\Yield_[val_peek(0), null]; }
break;
case 271:
//#line 616 "../../../../lib/php.y"
{ yyval = Expr\Yield_[val_peek(0), val_peek(2)]; }
break;
case 272:
//#line 620 "../../../../lib/php.y"
{ yyval = Expr\Array_[val_peek(1)]; }
break;
case 273:
//#line 621 "../../../../lib/php.y"
{ yyval = Expr\Array_[val_peek(1)]; }
break;
case 274:
//#line 625 "../../../../lib/php.y"
{ yyval = Expr\ArrayDimFetch[val_peek(3), val_peek(1)]; }
break;
case 275:
//#line 627 "../../../../lib/php.y"
{ yyval = Expr\ArrayDimFetch[Scalar\String[Scalar\String::parse(val_peek(3))], val_peek(1)]; }
break;
case 276:
//#line 628 "../../../../lib/php.y"
{ yyval = Expr\ArrayDimFetch[val_peek(3), val_peek(1)]; }
break;
case 277:
//#line 633 "../../../../lib/php.y"
{ yyval = Expr\New_[val_peek(1), val_peek(0)]; }
break;
case 278:
//#line 637 "../../../../lib/php.y"
{ yyval = array(); }
break;
case 279:
//#line 638 "../../../../lib/php.y"
{ yyval = val_peek(1); }
break;
case 280:
//#line 642 "../../../../lib/php.y"
{ init(val_peek(0)); }
break;
case 281:
//#line 643 "../../../../lib/php.y"
{ push(val_peek(2), val_peek(0)); }
break;
case 282:
//#line 647 "../../../../lib/php.y"
{ yyval = Expr\ClosureUse[parseVar(val_peek(0)), val_peek(1)]; }
break;
case 283:
//#line 651 "../../../../lib/php.y"
{ yyval = Expr\FuncCall[val_peek(1), val_peek(0)]; }
break;
case 284:
//#line 653 "../../../../lib/php.y"
{ yyval = Expr\StaticCall[val_peek(3), val_peek(1), val_peek(0)]; }
break;
case 285:
//#line 655 "../../../../lib/php.y"
{ yyval = Expr\StaticCall[val_peek(5), val_peek(2), val_peek(0)]; }
break;
case 286:
//#line 656 "../../../../lib/php.y"
{
            if (val_peek(1) instanceof Node\Expr\StaticPropertyFetch) {
                yyval = Expr\StaticCall[val_peek(1)->class, Expr\Variable[val_peek(1)->name], val_peek(0)];
            } elseif (val_peek(1) instanceof Node\Expr\ArrayDimFetch) {
                $tmp = val_peek(1);
                while ($tmp->var instanceof Node\Expr\ArrayDimFetch) {
                    $tmp = $tmp->var;
                }

                yyval = Expr\StaticCall[$tmp->var->class, val_peek(1), val_peek(0)];
                $tmp->var = Expr\Variable[$tmp->var->name];
            } else {
                throw new \Exception;
            }
          }
break;
case 287:
//#line 672 "../../../../lib/php.y"
{ yyval = Expr\FuncCall[val_peek(1), val_peek(0)]; }
break;
case 288:
//#line 673 "../../../../lib/php.y"
{ yyval = Expr\ArrayDimFetch[val_peek(3), val_peek(1)]; }
break;
case 289:
//#line 678 "../../../../lib/php.y"
{ yyval = Name['static']; }
break;
case 290:
//#line 679 "../../../../lib/php.y"
{ yyval = val_peek(0); }
break;
case 291:
//#line 683 "../../../../lib/php.y"
{ yyval = Name[val_peek(0)]; }
break;
case 292:
//#line 684 "../../../../lib/php.y"
{ yyval = Name\FullyQualified[val_peek(0)]; }
break;
case 293:
//#line 685 "../../../../lib/php.y"
{ yyval = Name\Relative[val_peek(0)]; }
break;
case 294:
//#line 689 "../../../../lib/php.y"
{ yyval = val_peek(0); }
break;
case 295:
//#line 690 "../../../../lib/php.y"
{ yyval = val_peek(0); }
break;
case 296:
//#line 694 "../../../../lib/php.y"
{ yyval = val_peek(0); }
break;
case 297:
//#line 695 "../../../../lib/php.y"
{ yyval = val_peek(0); }
break;
case 298:
//#line 699 "../../../../lib/php.y"
{ yyval = val_peek(0); }
break;
case 299:
//#line 700 "../../../../lib/php.y"
{ yyval = val_peek(0); }
break;
case 301:
//#line 705 "../../../../lib/php.y"
{ yyval = Expr\PropertyFetch[val_peek(2), val_peek(0)]; }
break;
case 302:
//#line 707 "../../../../lib/php.y"
{ yyval = Expr\PropertyFetch[val_peek(2), val_peek(0)]; }
break;
case 303:
//#line 708 "../../../../lib/php.y"
{ yyval = Expr\ArrayDimFetch[val_peek(3), val_peek(1)]; }
break;
case 304:
//#line 709 "../../../../lib/php.y"
{ yyval = Expr\ArrayDimFetch[val_peek(3), val_peek(1)]; }
break;
case 305:
//#line 713 "../../../../lib/php.y"
{ yyval = null; }
break;
case 306:
//#line 714 "../../../../lib/php.y"
{ yyval = null; }
break;
case 307:
//#line 715 "../../../../lib/php.y"
{ yyval = val_peek(0); }
break;
case 308:
//#line 719 "../../../../lib/php.y"
{ yyval = array(); }
break;
case 309:
//#line 720 "../../../../lib/php.y"
{ yyval = array(Scalar\String::parseEscapeSequences(val_peek(0), '`')); }
break;
case 310:
//#line 721 "../../../../lib/php.y"
{ parseEncapsed(val_peek(0), '`'); yyval = val_peek(0); }
break;
case 311:
//#line 725 "../../../../lib/php.y"
{ yyval = array(); }
break;
case 312:
//#line 726 "../../../../lib/php.y"
{ yyval = val_peek(0); }
break;
case 313:
//#line 730 "../../../../lib/php.y"
{ yyval = Scalar\LNumber[Scalar\LNumber::parse(val_peek(0))]; }
break;
case 314:
//#line 731 "../../../../lib/php.y"
{ yyval = Scalar\DNumber[Scalar\DNumber::parse(val_peek(0))]; }
break;
case 315:
//#line 732 "../../../../lib/php.y"
{ yyval = Scalar\String[Scalar\String::parse(val_peek(0))]; }
break;
case 316:
//#line 733 "../../../../lib/php.y"
{ yyval = Scalar\MagicConst\Line[]; }
break;
case 317:
//#line 734 "../../../../lib/php.y"
{ yyval = Scalar\MagicConst\File[]; }
break;
case 318:
//#line 735 "../../../../lib/php.y"
{ yyval = Scalar\MagicConst\Dir[]; }
break;
case 319:
//#line 736 "../../../../lib/php.y"
{ yyval = Scalar\MagicConst\Class_[]; }
break;
case 320:
//#line 737 "../../../../lib/php.y"
{ yyval = Scalar\MagicConst\Trait_[]; }
break;
case 321:
//#line 738 "../../../../lib/php.y"
{ yyval = Scalar\MagicConst\Method[]; }
break;
case 322:
//#line 739 "../../../../lib/php.y"
{ yyval = Scalar\MagicConst\Function_[]; }
break;
case 323:
//#line 740 "../../../../lib/php.y"
{ yyval = Scalar\MagicConst\Namespace_[]; }
break;
case 324:
//#line 742 "../../../../lib/php.y"
{ yyval = Scalar\String[Scalar\String::parseDocString(val_peek(2), val_peek(1))]; }
break;
case 325:
//#line 744 "../../../../lib/php.y"
{ yyval = Scalar\String['']; }
break;
case 326:
//#line 745 "../../../../lib/php.y"
{ yyval = Expr\ConstFetch[val_peek(0)]; }
break;
case 327:
//#line 749 "../../../../lib/php.y"
{ yyval = val_peek(0); }
break;
case 328:
//#line 750 "../../../../lib/php.y"
{ yyval = Expr\ClassConstFetch[val_peek(2), val_peek(0)]; }
break;
case 329:
//#line 751 "../../../../lib/php.y"
{ yyval = Expr\Array_[val_peek(1)]; }
break;
case 330:
//#line 752 "../../../../lib/php.y"
{ yyval = Expr\Array_[val_peek(1)]; }
break;
case 331:
//#line 753 "../../../../lib/php.y"
{ yyval = val_peek(0); }
break;
case 332:
//#line 757 "../../../../lib/php.y"
{ yyval = Expr\BinaryOp\BooleanOr [val_peek(2), val_peek(0)]; }
break;
case 333:
//#line 758 "../../../../lib/php.y"
{ yyval = Expr\BinaryOp\BooleanAnd[val_peek(2), val_peek(0)]; }
break;
case 334:
//#line 759 "../../../../lib/php.y"
{ yyval = Expr\BinaryOp\LogicalOr [val_peek(2), val_peek(0)]; }
break;
case 335:
//#line 760 "../../../../lib/php.y"
{ yyval = Expr\BinaryOp\LogicalAnd[val_peek(2), val_peek(0)]; }
break;
case 336:
//#line 761 "../../../../lib/php.y"
{ yyval = Expr\BinaryOp\LogicalXor[val_peek(2), val_peek(0)]; }
break;
case 337:
//#line 762 "../../../../lib/php.y"
{ yyval = Expr\BinaryOp\BitwiseOr [val_peek(2), val_peek(0)]; }
break;
case 338:
//#line 763 "../../../../lib/php.y"
{ yyval = Expr\BinaryOp\BitwiseAnd[val_peek(2), val_peek(0)]; }
break;
case 339:
//#line 764 "../../../../lib/php.y"
{ yyval = Expr\BinaryOp\BitwiseXor[val_peek(2), val_peek(0)]; }
break;
case 340:
//#line 765 "../../../../lib/php.y"
{ yyval = Expr\BinaryOp\Concat    [val_peek(2), val_peek(0)]; }
break;
case 341:
//#line 766 "../../../../lib/php.y"
{ yyval = Expr\BinaryOp\Plus      [val_peek(2), val_peek(0)]; }
break;
case 342:
//#line 767 "../../../../lib/php.y"
{ yyval = Expr\BinaryOp\Minus     [val_peek(2), val_peek(0)]; }
break;
case 343:
//#line 768 "../../../../lib/php.y"
{ yyval = Expr\BinaryOp\Mul       [val_peek(2), val_peek(0)]; }
break;
case 344:
//#line 769 "../../../../lib/php.y"
{ yyval = Expr\BinaryOp\Div       [val_peek(2), val_peek(0)]; }
break;
case 345:
//#line 770 "../../../../lib/php.y"
{ yyval = Expr\BinaryOp\Mod       [val_peek(2), val_peek(0)]; }
break;
case 346:
//#line 771 "../../../../lib/php.y"
{ yyval = Expr\BinaryOp\ShiftLeft [val_peek(2), val_peek(0)]; }
break;
case 347:
//#line 772 "../../../../lib/php.y"
{ yyval = Expr\BinaryOp\ShiftRight[val_peek(2), val_peek(0)]; }
break;
case 348:
//#line 773 "../../../../lib/php.y"
{ yyval = Expr\BinaryOp\Pow       [val_peek(2), val_peek(0)]; }
break;
case 349:
//#line 774 "../../../../lib/php.y"
{ yyval = Expr\UnaryPlus [val_peek(0)]; }
break;
case 350:
//#line 775 "../../../../lib/php.y"
{ yyval = Expr\UnaryMinus[val_peek(0)]; }
break;
case 351:
//#line 776 "../../../../lib/php.y"
{ yyval = Expr\BooleanNot[val_peek(0)]; }
break;
case 352:
//#line 777 "../../../../lib/php.y"
{ yyval = Expr\BitwiseNot[val_peek(0)]; }
break;
case 353:
//#line 778 "../../../../lib/php.y"
{ yyval = Expr\BinaryOp\Identical     [val_peek(2), val_peek(0)]; }
break;
case 354:
//#line 779 "../../../../lib/php.y"
{ yyval = Expr\BinaryOp\NotIdentical  [val_peek(2), val_peek(0)]; }
break;
case 355:
//#line 780 "../../../../lib/php.y"
{ yyval = Expr\BinaryOp\Equal         [val_peek(2), val_peek(0)]; }
break;
case 356:
//#line 781 "../../../../lib/php.y"
{ yyval = Expr\BinaryOp\NotEqual      [val_peek(2), val_peek(0)]; }
break;
case 357:
//#line 782 "../../../../lib/php.y"
{ yyval = Expr\BinaryOp\Smaller       [val_peek(2), val_peek(0)]; }
break;
case 358:
//#line 783 "../../../../lib/php.y"
{ yyval = Expr\BinaryOp\SmallerOrEqual[val_peek(2), val_peek(0)]; }
break;
case 359:
//#line 784 "../../../../lib/php.y"
{ yyval = Expr\BinaryOp\Greater       [val_peek(2), val_peek(0)]; }
break;
case 360:
//#line 785 "../../../../lib/php.y"
{ yyval = Expr\BinaryOp\GreaterOrEqual[val_peek(2), val_peek(0)]; }
break;
case 361:
//#line 786 "../../../../lib/php.y"
{ yyval = Expr\Ternary[val_peek(4), val_peek(2),   val_peek(0)]; }
break;
case 362:
//#line 787 "../../../../lib/php.y"
{ yyval = Expr\Ternary[val_peek(3), null, val_peek(0)]; }
break;
case 363:
//#line 788 "../../../../lib/php.y"
{ yyval = Expr\ArrayDimFetch[val_peek(3), val_peek(1)]; }
break;
case 364:
//#line 789 "../../../../lib/php.y"
{ yyval = val_peek(1); }
break;
case 365:
//#line 793 "../../../../lib/php.y"
{ yyval = val_peek(0); }
break;
case 366:
//#line 795 "../../../../lib/php.y"
{ yyval = Expr\ClassConstFetch[val_peek(2), val_peek(0)]; }
break;
case 367:
//#line 797 "../../../../lib/php.y"
{ parseEncapsed(val_peek(1), '"'); yyval = Scalar\Encapsed[val_peek(1)]; }
break;
case 368:
//#line 799 "../../../../lib/php.y"
{ parseEncapsedDoc(val_peek(1)); yyval = Scalar\Encapsed[val_peek(1)]; }
break;
case 369:
//#line 803 "../../../../lib/php.y"
{ yyval = val_peek(0); }
break;
case 370:
//#line 804 "../../../../lib/php.y"
{ yyval = 'class'; }
break;
case 371:
//#line 808 "../../../../lib/php.y"
{ yyval = array(); }
break;
case 372:
//#line 809 "../../../../lib/php.y"
{ yyval = val_peek(1); }
break;
case 375:
//#line 818 "../../../../lib/php.y"
{ push(val_peek(2), val_peek(0)); }
break;
case 376:
//#line 819 "../../../../lib/php.y"
{ init(val_peek(0)); }
break;
case 377:
//#line 823 "../../../../lib/php.y"
{ yyval = Expr\ArrayItem[val_peek(0), val_peek(2),   false]; }
break;
case 378:
//#line 824 "../../../../lib/php.y"
{ yyval = Expr\ArrayItem[val_peek(0), null, false]; }
break;
case 379:
//#line 828 "../../../../lib/php.y"
{ yyval = val_peek(0); }
break;
case 380:
//#line 829 "../../../../lib/php.y"
{ yyval = val_peek(0); }
break;
case 381:
//#line 830 "../../../../lib/php.y"
{ yyval = val_peek(0); }
break;
case 382:
//#line 831 "../../../../lib/php.y"
{ yyval = val_peek(0); }
break;
case 383:
//#line 835 "../../../../lib/php.y"
{ yyval = Expr\ArrayDimFetch[val_peek(4), val_peek(1)]; }
break;
case 384:
//#line 836 "../../../../lib/php.y"
{ yyval = Expr\ArrayDimFetch[val_peek(3), val_peek(1)]; }
break;
case 385:
//#line 842 "../../../../lib/php.y"
{ yyval = Expr\PropertyFetch[val_peek(2), val_peek(0)]; }
break;
case 386:
//#line 844 "../../../../lib/php.y"
{ yyval = Expr\MethodCall[val_peek(3), val_peek(1), val_peek(0)]; }
break;
case 387:
//#line 845 "../../../../lib/php.y"
{ yyval = Expr\FuncCall[val_peek(1), val_peek(0)]; }
break;
case 388:
//#line 846 "../../../../lib/php.y"
{ yyval = Expr\ArrayDimFetch[val_peek(3), val_peek(1)]; }
break;
case 389:
//#line 847 "../../../../lib/php.y"
{ yyval = Expr\ArrayDimFetch[val_peek(3), val_peek(1)]; }
break;
case 390:
//#line 851 "../../../../lib/php.y"
{ yyval = val_peek(0); }
break;
case 391:
//#line 852 "../../../../lib/php.y"
{ yyval = val_peek(1); }
break;
case 392:
//#line 856 "../../../../lib/php.y"
{ yyval = val_peek(0); }
break;
case 393:
//#line 857 "../../../../lib/php.y"
{ yyval = Expr\Variable[val_peek(0)]; }
break;
case 394:
//#line 861 "../../../../lib/php.y"
{ yyval = val_peek(0); }
break;
case 395:
//#line 862 "../../../../lib/php.y"
{ yyval = val_peek(0); }
break;
case 396:
//#line 867 "../../../../lib/php.y"
{ yyval = Expr\StaticPropertyFetch[val_peek(3), val_peek(0)]; }
break;
case 397:
//#line 868 "../../../../lib/php.y"
{ yyval = val_peek(0); }
break;
case 398:
//#line 873 "../../../../lib/php.y"
{ yyval = Expr\StaticPropertyFetch[val_peek(2), parseVar(val_peek(0))]; }
break;
case 399:
//#line 875 "../../../../lib/php.y"
{ yyval = Expr\StaticPropertyFetch[val_peek(5), val_peek(1)]; }
break;
case 400:
//#line 876 "../../../../lib/php.y"
{ yyval = Expr\ArrayDimFetch[val_peek(3), val_peek(1)]; }
break;
case 401:
//#line 877 "../../../../lib/php.y"
{ yyval = Expr\ArrayDimFetch[val_peek(3), val_peek(1)]; }
break;
case 402:
//#line 881 "../../../../lib/php.y"
{ yyval = Expr\ArrayDimFetch[val_peek(3), val_peek(1)]; }
break;
case 403:
//#line 882 "../../../../lib/php.y"
{ yyval = Expr\ArrayDimFetch[val_peek(3), val_peek(1)]; }
break;
case 404:
//#line 883 "../../../../lib/php.y"
{ yyval = Expr\Variable[parseVar(val_peek(0))]; }
break;
case 405:
//#line 884 "../../../../lib/php.y"
{ yyval = Expr\Variable[val_peek(1)]; }
break;
case 406:
//#line 888 "../../../../lib/php.y"
{ yyval = null; }
break;
case 407:
//#line 889 "../../../../lib/php.y"
{ yyval = val_peek(0); }
break;
case 408:
//#line 893 "../../../../lib/php.y"
{ yyval = val_peek(0); }
break;
case 409:
//#line 894 "../../../../lib/php.y"
{ yyval = val_peek(1); }
break;
case 410:
//#line 895 "../../../../lib/php.y"
{ yyval = val_peek(0); }
break;
case 411:
//#line 899 "../../../../lib/php.y"
{ yyval = Expr\List_[val_peek(1)]; }
break;
case 412:
//#line 903 "../../../../lib/php.y"
{ push(val_peek(2), val_peek(0)); }
break;
case 413:
//#line 904 "../../../../lib/php.y"
{ init(val_peek(0)); }
break;
case 414:
//#line 908 "../../../../lib/php.y"
{ yyval = val_peek(0); }
break;
case 415:
//#line 909 "../../../../lib/php.y"
{ yyval = val_peek(0); }
break;
case 416:
//#line 910 "../../../../lib/php.y"
{ yyval = null; }
break;
case 417:
//#line 914 "../../../../lib/php.y"
{ yyval = array(); }
break;
case 418:
//#line 915 "../../../../lib/php.y"
{ yyval = val_peek(1); }
break;
case 419:
//#line 919 "../../../../lib/php.y"
{ push(val_peek(2), val_peek(0)); }
break;
case 420:
//#line 920 "../../../../lib/php.y"
{ init(val_peek(0)); }
break;
case 421:
//#line 924 "../../../../lib/php.y"
{ yyval = Expr\ArrayItem[val_peek(0), val_peek(2),   false]; }
break;
case 422:
//#line 925 "../../../../lib/php.y"
{ yyval = Expr\ArrayItem[val_peek(0), null, false]; }
break;
case 423:
//#line 926 "../../../../lib/php.y"
{ yyval = Expr\ArrayItem[val_peek(0), val_peek(3),   true]; }
break;
case 424:
//#line 927 "../../../../lib/php.y"
{ yyval = Expr\ArrayItem[val_peek(0), null, true]; }
break;
case 425:
//#line 931 "../../../../lib/php.y"
{ push(val_peek(1), val_peek(0)); }
break;
case 426:
//#line 932 "../../../../lib/php.y"
{ push(val_peek(1), val_peek(0)); }
break;
case 427:
//#line 933 "../../../../lib/php.y"
{ init(val_peek(0)); }
break;
case 428:
//#line 934 "../../../../lib/php.y"
{ init(val_peek(1), val_peek(0)); }
break;
case 429:
//#line 938 "../../../../lib/php.y"
{ yyval = Expr\Variable[parseVar(val_peek(0))]; }
break;
case 430:
//#line 939 "../../../../lib/php.y"
{ yyval = Expr\ArrayDimFetch[Expr\Variable[parseVar(val_peek(3))], val_peek(1)]; }
break;
case 431:
//#line 940 "../../../../lib/php.y"
{ yyval = Expr\PropertyFetch[Expr\Variable[parseVar(val_peek(2))], val_peek(0)]; }
break;
case 432:
//#line 941 "../../../../lib/php.y"
{ yyval = Expr\Variable[val_peek(1)]; }
break;
case 433:
//#line 942 "../../../../lib/php.y"
{ yyval = Expr\Variable[val_peek(1)]; }
break;
case 434:
//#line 944 "../../../../lib/php.y"
{ yyval = Expr\ArrayDimFetch[Expr\Variable[val_peek(4)], val_peek(2)]; }
break;
case 435:
//#line 945 "../../../../lib/php.y"
{ yyval = val_peek(1); }
break;
case 436:
//#line 949 "../../../../lib/php.y"
{ yyval = Scalar\String[val_peek(0)]; }
break;
case 437:
//#line 950 "../../../../lib/php.y"
{ yyval = Scalar\String[val_peek(0)]; }
break;
case 438:
//#line 951 "../../../../lib/php.y"
{ yyval = Expr\Variable[parseVar(val_peek(0))]; }
break;
//#line 6396 "PHPParser.java"
//########## END OF USER-SUPPLIED ACTIONS ##########
    }//switch
    //#### Now let's reduce... ####
    if (yydebug) debug("reduce");
    state_drop(yym);             //we just reduced yylen states
    yystate = state_peek(0);     //get new state
    val_drop(yym);               //corresponding value drop
    yym = yylhs[yyn];            //select next TERMINAL(on lhs)
    if (yystate == 0 && yym == 0)//done? 'rest' state and at first TERMINAL
      {
      if (yydebug) debug("After reduction, shifting from state 0 to state "+YYFINAL+"");
      yystate = YYFINAL;         //explicitly say we're done
      state_push(YYFINAL);       //and save it
      val_push(yyval);           //also save the semantic value of parsing
      if (yychar < 0)            //we want another character?
        {
        yychar = yylex();        //get next character
        if (yychar<0) yychar=0;  //clean, if necessary
        if (yydebug)
          yylexdebug(yystate,yychar);
        }
      if (yychar == 0)          //Good exit (if lex returns 0 ;-)
         break;                 //quit the loop--all DONE
      }//if yystate
    else                        //else not done yet
      {                         //get next state and push, for next yydefred[]
      yyn = yygindex[yym];      //find out where to go
      if ((yyn != 0) && (yyn += yystate) >= 0 &&
            yyn <= YYTABLESIZE && yycheck[yyn] == yystate)
        yystate = yytable[yyn]; //get new state
      else
        yystate = yydgoto[yym]; //else go to new defred
      if (yydebug) debug("after reduction, shifting from state "+state_peek(0)+" to state "+yystate+"");
      state_push(yystate);     //going again, so push state & val...
      val_push(yyval);         //for next action
      }
    }//main loop
  return 0;//yyaccept!!
}
//## end of method parse() ######################################



//## run() --- for Thread #######################################
/**
 * A default run method, used for operating this parser
 * object in the background.  It is intended for extending Thread
 * or implementing Runnable.  Turn off with -Jnorun .
 */
public void run()
{
  yyparse();
}
//## end of method run() ########################################



//## Constructors ###############################################
/**
 * Default constructor.  Turn off with -Jnoconstruct .

 */
public PHPParser()
{
  //nothing to do
}


/**
 * Create a parser, setting the debug to true or false.
 * @param debugMe true for debugging, false for no debug.
 */
public PHPParser(boolean debugMe)
{
  yydebug=debugMe;
}
//###############################################################



}
//################### END OF CLASS ##############################
